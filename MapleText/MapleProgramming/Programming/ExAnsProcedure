
1. 
<<<maple
> area:=proc(base,height) 
    base*height/2; 
  end proc:
>>>
<<<maple
> area(3,4); #res: 6
>>>


2. 
<<<maple
> restart; 
  n:=19: 
  banpei:=0; 
  for i from 2 to n-1 do 
    amari:=irem(n,i);
    print(amari): 
    if amari=0 then 
      banpei:=1; 
      break;
    end if; 
  end do: 
  if banpei=1 then 
    print(n," is not prime number."); 
  else 
    print(n," is prime number."); 
  end if;
>>>
{{dmath ' 0  '}}
{{dmath ' 1  '}}
{{dmath ' 1  '}}
{{dmath ' 1  '}}
{{dmath ' 19, "\, is\, prime\, number."  '}}
{{dmath '  '}}

<<<maple
> MyIsprime:=proc(n) 
    local i,amari; 
    for i from 2 to evalf(sqrt(n)) do
      amari:=irem(n,i); 
      if amari=0 then 
        return false; 
      end if; 
    end do:
    return true;
  end proc:
>>>

<<<maple
> MyIsprime(104729);
>>>
{{dmath ' true
 '}}


3.  
<<<maple
> restart; x1:=[0.0, 0.0]: x2:=[1.0, 1.0]:
>>>

<<<maple
> MyDistance:=proc(x1,x2) 
    local dx,dy; 
    dx:=(x1[1]-x2[1]); 
    dy:=(x1[2]-x2[2]);
    sqrt(dx^2+dy^2); 
  end proc:
>>>
<<<maple
> MyDistance(x1,x2);
>>>
{{dmath ' 1.414213562
 '}}
<<<maple
> x[1]:=[0.0, 0.0]: x[2]:=[1.0, 1.0]: x[3]:=[1.0, 0.0]: x[4]:=[0.0, 1.0]: x[5]:=x[1]: 
  sum(MyDistance(x[i],x[i+1]),i=1..4);
>>>
{{dmath ' 4.828427124
 '}}


4. 
<<<maple
> MyMax:=proc(A) 
    local imax,i; 
    imax:=0; 
    for i from 1 to nops(A) do 
      if A[i]>imax then 
          imax:=A[i];
      end if 
    end do; 
    return imax; 
  end proc:
>>>
<<<maple
> MyMax(A);
>>>
{{dmath ' 100
 '}}

