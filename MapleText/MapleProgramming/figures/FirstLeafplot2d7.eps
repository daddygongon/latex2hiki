%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N5ŒŽ31“ú 11Žž17•ª35•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
196 196 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
196.000 0 l
196.000 196.000 l
0 196.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 186 186 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
2 J
0 j
1.00000 0 0 RG
[ 1.00000 0 0 1.00000 140.348 8.11943 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -140.348 -8.11943 ] concat
[ 1.00000 0 0 1.00000 145.883 13.0154 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -145.883 -13.0154 ] concat
[ 1.00000 0 0 1.00000 142.137 9.34646 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -142.137 -9.34646 ] concat
[ 1.00000 0 0 1.00000 149.491 17.9022 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -149.491 -17.9022 ] concat
[ 1.00000 0 0 1.00000 153.181 24.1855 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -153.181 -24.1855 ] concat
[ 1.00000 0 0 1.00000 156.841 31.5919 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -156.841 -31.5919 ] concat
[ 1.00000 0 0 1.00000 160.203 39.3185 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -160.203 -39.3185 ] concat
[ 1.00000 0 0 1.00000 164.057 49.1078 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -164.057 -49.1078 ] concat
[ 1.00000 0 0 1.00000 167.504 58.5603 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -167.504 -58.5603 ] concat
[ 1.00000 0 0 1.00000 174.697 79.7351 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -174.697 -79.7351 ] concat
[ 1.00000 0 0 1.00000 171.179 69.1925 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -171.179 -69.1925 ] concat
[ 1.00000 0 0 1.00000 131.397 7.24371 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -131.397 -7.24371 ] concat
[ 1.00000 0 0 1.00000 133.147 6.72010 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -133.147 -6.72010 ] concat
[ 1.00000 0 0 1.00000 134.898 6.53440 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -134.898 -6.53440 ] concat
[ 1.00000 0 0 1.00000 120.514 17.8405 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -120.514 -17.8405 ] concat
[ 1.00000 0 0 1.00000 124.271 12.7957 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -124.271 -12.7957 ] concat
[ 1.00000 0 0 1.00000 127.675 9.46789 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -127.675 -9.46789 ] concat
[ 1.00000 0 0 1.00000 129.536 8.16824 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -129.536 -8.16824 ] concat
[ 1.00000 0 0 1.00000 116.996 23.7913 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -116.996 -23.7913 ] concat
[ 1.00000 0 0 1.00000 109.554 39.8235 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -109.554 -39.8235 ] concat
[ 1.00000 0 0 1.00000 113.080 31.6882 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -113.080 -31.6882 ] concat
[ 1.00000 0 0 1.00000 105.909 49.1056 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -105.909 -49.1056 ] concat
[ 1.00000 0 0 1.00000 102.184 59.3461 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -102.184 -59.3461 ] concat
[ 1.00000 0 0 1.00000 98.5777 69.8102 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -98.5777 -69.8102 ] concat
[ 1.00000 0 0 1.00000 95.2387 79.8269 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -95.2387 -79.8269 ] concat
[ 1.00000 0 0 1.00000 136.728 6.70230 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -136.728 -6.70230 ] concat
[ 1.00000 0 0 1.00000 138.558 7.23948 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -138.558 -7.23948 ] concat
[ 1.00000 0 0 1.00000 87.7101 102.794 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -87.7101 -102.794 ] concat
[ 1.00000 0 0 1.00000 76.9854 133.647 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -76.9854 -133.647 ] concat
[ 1.00000 0 0 1.00000 80.5585 123.853 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -80.5585 -123.853 ] concat
[ 1.00000 0 0 1.00000 84.2866 113.059 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -84.2866 -113.059 ] concat
[ 1.00000 0 0 1.00000 73.2331 143.171 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -73.2331 -143.171 ] concat
[ 1.00000 0 0 1.00000 69.8131 151.027 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -69.8131 -151.027 ] concat
[ 1.00000 0 0 1.00000 65.9495 158.801 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -65.9495 -158.801 ] concat
[ 1.00000 0 0 1.00000 58.7071 169.737 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -58.7071 -169.737 ] concat
[ 1.00000 0 0 1.00000 62.6280 164.439 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -62.6280 -164.439 ] concat
[ 1.00000 0 0 1.00000 46.1347 175.809 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -46.1347 -175.809 ] concat
[ 1.00000 0 0 1.00000 48.0109 176.000 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -48.0109 -176.000 ] concat
[ 1.00000 0 0 1.00000 49.8948 175.800 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -49.8948 -175.800 ] concat
[ 1.00000 0 0 1.00000 51.7788 175.209 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -51.7788 -175.209 ] concat
[ 1.00000 0 0 1.00000 53.5943 174.273 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -53.5943 -174.273 ] concat
[ 1.00000 0 0 1.00000 55.4098 172.979 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -55.4098 -172.979 ] concat
[ 1.00000 0 0 1.00000 11.5918 112.732 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -11.5918 -112.732 ] concat
[ 1.00000 0 0 1.00000 8.29221 102.835 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -8.29221 -102.835 ] concat
[ 1.00000 0 0 1.00000 15.3025 123.491 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -15.3025 -123.491 ] concat
[ 1.00000 0 0 1.00000 19.0378 133.738 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -19.0378 -133.738 ] concat
[ 1.00000 0 0 1.00000 22.7554 143.170 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -22.7554 -143.170 ] concat
[ 1.00000 0 0 1.00000 26.2021 151.084 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -26.2021 -151.084 ] concat
[ 1.00000 0 0 1.00000 29.7709 158.302 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -29.7709 -158.302 ] concat
[ 1.00000 0 0 1.00000 37.1408 169.573 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -37.1408 -169.573 ] concat
[ 1.00000 0 0 1.00000 42.5918 174.392 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -42.5918 -174.392 ] concat
[ 1.00000 0 0 1.00000 33.4618 164.595 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -33.4618 -164.595 ] concat
[ 1.00000 0 0 1.00000 40.9252 173.253 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -40.9252 -173.253 ] concat
[ 1.00000 0 0 1.00000 44.2584 175.229 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -44.2584 -175.229 ] concat
[ 1.00000 0 0 1.00000 4.50000 91.2670 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -4.50000 -91.2670 ] concat
[ 1.00000 0 0 1.00000 91.4029 91.5297 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -91.4029 -91.5297 ] concat
[ 1.00000 0 0 1.00000 178.477 91.2670 ] concat
newpath
0 1.00000 m
1.00000 0 l
2.00000 1.00000 l
1.00000 2.00000 l
h
S
[ 1.00000 0 0 1.00000 -178.477 -91.2670 ] concat
Q
q
0 0 1.00000 RG
5.00000 6.03440 176.977 172.465 rc
newpath
6.00000 177.500 m
7.89610 177.301 l
9.79221 176.706 l
11.4420 175.868 l
13.0918 174.736 l
16.8025 171.133 l
20.5378 166.087 l
24.2554 159.742 l
27.7021 152.779 l
31.2709 144.593 l
34.9618 135.224 l
38.6408 125.136 l
42.4252 114.165 l
45.7584 104.164 l
53.2788 81.2222 l
56.9098 70.3451 l
60.2071 60.7963 l
64.1280 50.0419 l
67.4495 41.5926 l
71.3131 32.6971 l
74.7331 25.7923 l
78.4854 19.3941 l
82.0585 14.5505 l
85.7866 10.8842 l
87.4984 9.69430 l
89.2101 8.82177 l
91.0565 8.24025 l
92.9029 8.03442 l
94.8208 8.21940 l
96.7387 8.80984 l
98.4082 9.65176 l
100.077 10.7957 l
103.684 14.2766 l
107.409 19.2680 l
111.054 25.4375 l
114.580 32.5170 l
118.496 41.5155 l
122.014 50.4794 l
125.771 60.7991 l
129.175 70.6630 l
132.897 81.8231 l
140.058 103.678 l
143.637 114.416 l
147.383 125.268 l
150.991 135.161 l
154.681 144.533 l
158.341 152.921 l
161.703 159.707 l
165.557 166.267 l
169.004 170.933 l
172.679 174.574 l
174.438 175.810 l
176.197 176.711 l
178.087 177.302 l
179.977 177.500 l
S
cliprestore
newpath
0 0 m
0 186.000 l
186.000 186.000 l
186.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
6.00000 93.0000 m
179.977 93.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
129 111 14 15 rc
newpath
135.278 117.255 m
135.486 117.475 135.642 117.695 135.748 117.915  c
135.824 118.067 135.949 118.467 136.123 119.115  c
136.681 118.277 l
136.829 118.074 137.009 117.880 137.221 117.696  c
137.432 117.512 137.619 117.386 137.779 117.318  c
137.881 117.276 137.993 117.255 138.116 117.255  c
138.298 117.255 138.443 117.304 138.551 117.401  c
138.658 117.498 138.712 117.617 138.712 117.756  c
138.712 117.917 138.681 118.027 138.617 118.086  c
138.499 118.192 138.363 118.245 138.211 118.245  c
138.122 118.245 138.027 118.226 137.925 118.188  c
137.726 118.120 137.593 118.086 137.525 118.086  c
137.424 118.086 137.303 118.146 137.164 118.264  c
136.901 118.484 136.588 118.910 136.224 119.540  c
136.745 121.724 l
136.825 122.058 136.893 122.258 136.948 122.324  c
137.003 122.389 137.058 122.422 137.113 122.422  c
137.202 122.422 137.305 122.373 137.424 122.276  c
137.657 122.081 137.856 121.827 138.021 121.514  c
138.243 121.628 l
137.976 122.128 137.638 122.543 137.227 122.873  c
136.994 123.059 136.798 123.152 136.637 123.152  c
136.400 123.152 136.211 123.019 136.072 122.752  c
135.983 122.587 135.799 121.876 135.520 120.619  c
134.859 121.766 134.330 122.504 133.933 122.835  c
133.675 123.046 133.425 123.152 133.184 123.152  c
133.014 123.152 132.860 123.091 132.720 122.968  c
132.619 122.875 132.568 122.750 132.568 122.593  c
132.568 122.454 132.614 122.337 132.708 122.244  c
132.801 122.151 132.915 122.105 133.050 122.105  c
133.186 122.105 133.330 122.172 133.482 122.308  c
133.592 122.405 133.677 122.454 133.736 122.454  c
133.787 122.454 133.852 122.420 133.933 122.352  c
134.132 122.191 134.402 121.844 134.745 121.311  c
135.088 120.778 135.312 120.393 135.418 120.156  c
135.156 119.127 135.014 118.584 134.993 118.524  c
134.895 118.249 134.768 118.055 134.612 117.940  c
134.455 117.826 134.225 117.769 133.920 117.769  c
133.823 117.769 133.710 117.773 133.584 117.782  c
133.584 117.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 186.000 l
186.000 186.000 l
186.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
10.0000 93.0000 m
10.0000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 102 7 13 rc
newpath
16.7900 109.438 m
8.21000 109.438 l
8.21000 108.762 l
16.7900 108.762 l
h
f
Q
newpath
15.6601 106.030 m
15.9056 105.450 16.2155 105.003 16.5900 104.687  c
16.9646 104.372 17.4311 104.214 17.9897 104.214  c
18.6795 104.214 19.2085 104.439 19.5766 104.887  c
19.8559 105.222 19.9956 105.579 19.9956 105.960  c
19.9956 106.586 19.6020 107.234 18.8149 107.902  c
19.3439 108.110 19.7438 108.406 20.0146 108.791  c
20.2854 109.176 20.4209 109.629 20.4209 110.149  c
20.4209 110.894 20.1839 111.540 19.7099 112.085  c
19.0921 112.796 18.1971 113.152 17.0249 113.152  c
16.4451 113.152 16.0505 113.080 15.8410 112.936  c
15.6315 112.792 15.5268 112.638 15.5268 112.473  c
15.5268 112.350 15.5765 112.242 15.6760 112.149  c
15.7754 112.056 15.8950 112.009 16.0346 112.009  c
16.1404 112.009 16.2483 112.026 16.3584 112.060  c
16.4303 112.081 16.5932 112.158 16.8471 112.292  c
17.1010 112.425 17.2766 112.504 17.3740 112.530  c
17.5306 112.576 17.6977 112.600 17.8754 112.600  c
18.3071 112.600 18.6827 112.432 19.0022 112.098  c
19.3217 111.764 19.4814 111.368 19.4814 110.911  c
19.4814 110.577 19.4073 110.251 19.2592 109.934  c
19.1492 109.697 19.0286 109.517 18.8974 109.394  c
18.7154 109.225 18.4658 109.071 18.1484 108.934  c
17.8310 108.796 17.5073 108.728 17.1772 108.728  c
16.9741 108.728 l
16.9741 108.537 l
17.3084 108.495 17.6438 108.374 17.9802 108.175  c
18.3166 107.976 18.5610 107.737 18.7133 107.458  c
18.8657 107.179 18.9418 106.872 18.9418 106.538  c
18.9418 106.102 18.8054 105.749 18.5324 105.481  c
18.2595 105.212 17.9199 105.078 17.5136 105.078  c
16.8577 105.078 16.3097 105.429 15.8696 106.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
38.0000 93.0000 m
38.0000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
34 102 7 13 rc
newpath
44.7900 109.438 m
36.2100 109.438 l
36.2100 108.762 l
44.7900 108.762 l
h
f
Q
newpath
48.9604 111.343 m
48.3574 113.000 l
43.2793 113.000 l
43.2793 112.765 l
44.7731 111.402 45.8247 110.289 46.4340 109.426  c
47.0434 108.563 47.3481 107.773 47.3481 107.058  c
47.3481 106.512 47.1809 106.064 46.8466 105.712  c
46.5123 105.361 46.1124 105.186 45.6469 105.186  c
45.2238 105.186 44.8439 105.309 44.5075 105.557  c
44.1711 105.804 43.9225 106.167 43.7617 106.646  c
43.5268 106.646 l
43.6326 105.863 43.9045 105.262 44.3425 104.843  c
44.7805 104.424 45.3274 104.214 45.9834 104.214  c
46.6816 104.214 47.2645 104.439 47.7321 104.887  c
48.1997 105.336 48.4335 105.865 48.4335 106.474  c
48.4335 106.910 48.3320 107.346 48.1289 107.782  c
47.8157 108.467 47.3079 109.193 46.6054 109.959  c
45.5517 111.110 44.8937 111.804 44.6313 112.041  c
46.8784 112.041 l
47.3354 112.041 47.6560 112.024 47.8400 111.990  c
48.0241 111.956 48.1902 111.888 48.3383 111.784  c
48.4864 111.680 48.6155 111.533 48.7255 111.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
65.0000 93.0000 m
65.0000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
62 102 7 13 rc
newpath
72.7900 109.438 m
64.2100 109.438 l
64.2100 108.762 l
72.7900 108.762 l
h
f
Q
newpath
72.5234 105.236 m
74.6181 104.214 l
74.8276 104.214 l
74.8276 111.482 l
74.8276 111.965 74.8477 112.265 74.8879 112.384  c
74.9281 112.502 75.0117 112.593 75.1386 112.657  c
75.2656 112.720 75.5237 112.756 75.9130 112.765  c
75.9130 113.000 l
72.6757 113.000 l
72.6757 112.765 l
73.0820 112.756 73.3444 112.721 73.4628 112.660  c
73.5813 112.599 73.6639 112.516 73.7104 112.412  c
73.7570 112.309 73.7802 111.999 73.7802 111.482  c
73.7802 106.836 l
73.7802 106.210 73.7591 105.808 73.7168 105.630  c
73.6871 105.495 73.6332 105.395 73.5549 105.332  c
73.4766 105.268 73.3824 105.236 73.2724 105.236  c
73.1158 105.236 72.8979 105.302 72.6186 105.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 93.0000 m
93.0000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
89.4697 107.747 m
89.4697 106.765 89.6178 105.920 89.9140 105.211  c
90.2102 104.502 90.6038 103.974 91.0947 103.627  c
91.4755 103.352 91.8691 103.214 92.2753 103.214  c
92.9355 103.214 93.5279 103.551 94.0527 104.224  c
94.7086 105.057 95.0366 106.187 95.0366 107.613  c
95.0366 108.612 94.8927 109.460 94.6049 110.159  c
94.3172 110.857 93.9501 111.364 93.5036 111.679  c
93.0572 111.994 92.6266 112.152 92.2119 112.152  c
91.3909 112.152 90.7075 111.667 90.1616 110.698  c
89.7003 109.882 89.4697 108.898 89.4697 107.747  c
h
90.7138 107.905 m
90.7138 109.090 90.8598 110.057 91.1518 110.806  c
91.3930 111.437 91.7527 111.752 92.2309 111.752  c
92.4594 111.752 92.6964 111.649 92.9418 111.444  c
93.1873 111.239 93.3735 110.895 93.5004 110.413  c
93.6951 109.685 93.7924 108.659 93.7924 107.334  c
93.7924 106.352 93.6909 105.533 93.4877 104.877  c
93.3354 104.391 93.1386 104.046 92.8974 103.843  c
92.7239 103.703 92.5144 103.633 92.2690 103.633  c
91.9812 103.633 91.7252 103.762 91.5009 104.021  c
91.1962 104.372 90.9889 104.924 90.8789 105.677  c
90.7688 106.431 90.7138 107.173 90.7138 107.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
121.000 93.0000 m
121.000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
123.523 105.236 m
125.618 104.214 l
125.827 104.214 l
125.827 111.482 l
125.827 111.965 125.847 112.265 125.887 112.384  c
125.928 112.502 126.011 112.593 126.138 112.657  c
126.265 112.720 126.523 112.756 126.913 112.765  c
126.913 113.000 l
123.675 113.000 l
123.675 112.765 l
124.082 112.756 124.344 112.721 124.462 112.660  c
124.581 112.599 124.663 112.516 124.710 112.412  c
124.757 112.309 124.780 111.999 124.780 111.482  c
124.780 106.836 l
124.780 106.210 124.759 105.808 124.716 105.630  c
124.687 105.495 124.633 105.395 124.554 105.332  c
124.476 105.268 124.382 105.236 124.272 105.236  c
124.115 105.236 123.897 105.302 123.618 105.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
148.000 93.0000 m
148.000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
155.960 111.343 m
155.357 113.000 l
150.279 113.000 l
150.279 112.765 l
151.773 111.402 152.824 110.289 153.434 109.426  c
154.043 108.563 154.348 107.773 154.348 107.058  c
154.348 106.512 154.181 106.064 153.846 105.712  c
153.512 105.361 153.112 105.186 152.647 105.186  c
152.223 105.186 151.844 105.309 151.507 105.557  c
151.171 105.804 150.922 106.167 150.761 106.646  c
150.526 106.646 l
150.632 105.863 150.904 105.262 151.342 104.843  c
151.780 104.424 152.327 104.214 152.983 104.214  c
153.681 104.214 154.264 104.439 154.732 104.887  c
155.199 105.336 155.433 105.865 155.433 106.474  c
155.433 106.910 155.332 107.346 155.128 107.782  c
154.815 108.467 154.307 109.193 153.605 109.959  c
152.551 111.110 151.893 111.804 151.631 112.041  c
153.878 112.041 l
154.335 112.041 154.656 112.024 154.840 111.990  c
155.024 111.956 155.190 111.888 155.338 111.784  c
155.486 111.680 155.615 111.533 155.725 111.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
176.000 93.0000 m
176.000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.660 106.030 m
178.905 105.450 179.215 105.003 179.590 104.687  c
179.964 104.372 180.431 104.214 180.989 104.214  c
181.679 104.214 182.208 104.439 182.576 104.887  c
182.856 105.222 182.995 105.579 182.995 105.960  c
182.995 106.586 182.602 107.234 181.814 107.902  c
182.343 108.110 182.743 108.406 183.014 108.791  c
183.285 109.176 183.420 109.629 183.420 110.149  c
183.420 110.894 183.183 111.540 182.710 112.085  c
182.092 112.796 181.197 113.152 180.024 113.152  c
179.445 113.152 179.050 113.080 178.841 112.936  c
178.631 112.792 178.526 112.638 178.526 112.473  c
178.526 112.350 178.576 112.242 178.676 112.149  c
178.775 112.056 178.895 112.009 179.034 112.009  c
179.140 112.009 179.248 112.026 179.358 112.060  c
179.430 112.081 179.593 112.158 179.847 112.292  c
180.101 112.425 180.276 112.504 180.374 112.530  c
180.530 112.576 180.697 112.600 180.875 112.600  c
181.307 112.600 181.682 112.432 182.002 112.098  c
182.321 111.764 182.481 111.368 182.481 110.911  c
182.481 110.577 182.407 110.251 182.259 109.934  c
182.149 109.697 182.028 109.517 181.897 109.394  c
181.715 109.225 181.465 109.071 181.148 108.934  c
180.831 108.796 180.507 108.728 180.177 108.728  c
179.974 108.728 l
179.974 108.537 l
180.308 108.495 180.643 108.374 180.980 108.175  c
181.316 107.976 181.561 107.737 181.713 107.458  c
181.865 107.179 181.941 106.872 181.941 106.538  c
181.941 106.102 181.805 105.749 181.532 105.481  c
181.259 105.212 180.919 105.078 180.513 105.078  c
179.857 105.078 179.309 105.429 178.869 106.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
24.0000 93.0000 m
24.0000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
51.0000 93.0000 m
51.0000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
79.0000 93.0000 m
79.0000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
107.000 93.0000 m
107.000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
135.000 93.0000 m
135.000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
162.000 93.0000 m
162.000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
93.0000 177.500 m
93.0000 8.03440 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
52 43 8 15 rc
Q
cliprestore
newpath
0 0 m
0 186.000 l
186.000 186.000 l
186.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
93.0000 178.000 m
90.0000 178.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
76 176 7 13 rc
newpath
86.7900 183.438 m
78.2100 183.438 l
78.2100 182.762 l
86.7900 182.762 l
h
f
Q
newpath
86.5234 179.236 m
88.6181 178.214 l
88.8276 178.214 l
88.8276 185.482 l
88.8276 185.965 88.8477 186.265 88.8879 186.384  c
88.9281 186.502 89.0117 186.593 89.1386 186.657  c
89.2656 186.720 89.5237 186.756 89.9130 186.765  c
89.9130 187.000 l
86.6757 187.000 l
86.6757 186.765 l
87.0820 186.756 87.3444 186.721 87.4628 186.660  c
87.5813 186.599 87.6639 186.516 87.7104 186.412  c
87.7570 186.309 87.7802 185.999 87.7802 185.482  c
87.7802 180.836 l
87.7802 180.210 87.7591 179.808 87.7168 179.630  c
87.6871 179.495 87.6332 179.395 87.5549 179.332  c
87.4766 179.268 87.3824 179.236 87.2724 179.236  c
87.1158 179.236 86.8979 179.302 86.6186 179.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 135.000 m
90.0000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
66 134 7 13 rc
newpath
76.7900 141.438 m
68.2100 141.438 l
68.2100 140.762 l
76.7900 140.762 l
h
f
Q
newpath
75.4697 140.747 m
75.4697 139.765 75.6178 138.920 75.9140 138.211  c
76.2102 137.502 76.6038 136.974 77.0947 136.627  c
77.4755 136.352 77.8691 136.214 78.2753 136.214  c
78.9355 136.214 79.5279 136.551 80.0527 137.224  c
80.7086 138.057 81.0366 139.187 81.0366 140.613  c
81.0366 141.612 80.8927 142.460 80.6049 143.159  c
80.3172 143.857 79.9501 144.364 79.5036 144.679  c
79.0572 144.994 78.6266 145.152 78.2119 145.152  c
77.3909 145.152 76.7075 144.667 76.1616 143.698  c
75.7003 142.882 75.4697 141.898 75.4697 140.747  c
h
76.7138 140.905 m
76.7138 142.090 76.8598 143.057 77.1518 143.806  c
77.3930 144.437 77.7527 144.752 78.2309 144.752  c
78.4594 144.752 78.6964 144.649 78.9418 144.444  c
79.1873 144.239 79.3735 143.895 79.5004 143.413  c
79.6951 142.685 79.7924 141.659 79.7924 140.334  c
79.7924 139.352 79.6909 138.533 79.4877 137.877  c
79.3354 137.391 79.1386 137.046 78.8974 136.843  c
78.7239 136.703 78.5144 136.633 78.2690 136.633  c
77.9812 136.633 77.7252 136.762 77.5009 137.021  c
77.1962 137.372 76.9889 137.924 76.8789 138.677  c
76.7688 139.431 76.7138 140.173 76.7138 140.905  c
h
83.6250 143.768 m
83.8238 143.768 83.9910 143.837 84.1264 143.974  c
84.2618 144.112 84.3295 144.278 84.3295 144.473  c
84.3295 144.667 84.2608 144.833 84.1232 144.971  c
83.9857 145.109 83.8196 145.177 83.6250 145.177  c
83.4303 145.177 83.2642 145.109 83.1267 144.971  c
82.9891 144.833 82.9204 144.667 82.9204 144.473  c
82.9204 144.274 82.9891 144.107 83.1267 143.971  c
83.2642 143.836 83.4303 143.768 83.6250 143.768  c
h
90.6430 136.392 m
90.1479 137.471 l
87.5581 137.471 l
86.9931 138.627 l
88.1145 138.792 89.0032 139.208 89.6591 139.877  c
90.2220 140.453 90.5034 141.130 90.5034 141.908  c
90.5034 142.361 90.4113 142.780 90.2272 143.165  c
90.0432 143.550 89.8115 143.878 89.5322 144.149  c
89.2529 144.420 88.9418 144.638 88.5991 144.803  c
88.1124 145.036 87.6131 145.152 87.1010 145.152  c
86.5848 145.152 86.2092 145.064 85.9743 144.888  c
85.7395 144.713 85.6220 144.519 85.6220 144.308  c
85.6220 144.189 85.6707 144.084 85.7680 143.993  c
85.8654 143.902 85.9881 143.857 86.1362 143.857  c
86.2462 143.857 86.3425 143.874 86.4250 143.908  c
86.5075 143.942 86.6482 144.028 86.8471 144.168  c
87.1645 144.388 87.4861 144.498 87.8120 144.498  c
88.3071 144.498 88.7419 144.311 89.1164 143.936  c
89.4909 143.562 89.6782 143.106 89.6782 142.568  c
89.6782 142.048 89.5110 141.562 89.1767 141.112  c
88.8424 140.661 88.3811 140.313 87.7929 140.067  c
87.3317 139.877 86.7032 139.767 85.9077 139.737  c
87.5581 136.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 93.0000 m
90.0000 93.0000 l
S
Q
q
0 J
1 j
newpath
93.0000 50.0000 m
90.0000 50.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
75.4697 55.7470 m
75.4697 54.7653 75.6178 53.9200 75.9140 53.2111  c
76.2102 52.5023 76.6038 51.9744 77.0947 51.6274  c
77.4755 51.3523 77.8691 51.2148 78.2753 51.2148  c
78.9355 51.2148 79.5279 51.5512 80.0527 52.2241  c
80.7086 53.0577 81.0366 54.1876 81.0366 55.6137  c
81.0366 56.6124 80.8927 57.4609 80.6049 58.1591  c
80.3172 58.8574 79.9501 59.3641 79.5036 59.6794  c
79.0572 59.9947 78.6266 60.1523 78.2119 60.1523  c
77.3909 60.1523 76.7075 59.6678 76.1616 58.6987  c
75.7003 57.8820 75.4697 56.8981 75.4697 55.7470  c
h
76.7138 55.9057 m
76.7138 57.0906 76.8598 58.0576 77.1518 58.8066  c
77.3930 59.4371 77.7527 59.7524 78.2309 59.7524  c
78.4594 59.7524 78.6964 59.6498 78.9418 59.4445  c
79.1873 59.2393 79.3735 58.8955 79.5004 58.4130  c
79.6951 57.6852 79.7924 56.6590 79.7924 55.3344  c
79.7924 54.3527 79.6909 53.5338 79.4877 52.8779  c
79.3354 52.3912 79.1386 52.0463 78.8974 51.8432  c
78.7239 51.7036 78.5144 51.6337 78.2690 51.6337  c
77.9812 51.6337 77.7252 51.7628 77.5009 52.0210  c
77.1962 52.3722 76.9889 52.9244 76.8789 53.6777  c
76.7688 54.4309 76.7138 55.1736 76.7138 55.9057  c
h
83.6250 58.7685 m
83.8238 58.7685 83.9910 58.8373 84.1264 58.9748  c
84.2618 59.1123 84.3295 59.2784 84.3295 59.4731  c
84.3295 59.6678 84.2608 59.8339 84.1232 59.9714  c
83.9857 60.1089 83.8196 60.1777 83.6250 60.1777  c
83.4303 60.1777 83.2642 60.1089 83.1267 59.9714  c
82.9891 59.8339 82.9204 59.6678 82.9204 59.4731  c
82.9204 59.2742 82.9891 59.1071 83.1267 58.9716  c
83.2642 58.8362 83.4303 58.7685 83.6250 58.7685  c
h
90.6430 51.3925 m
90.1479 52.4716 l
87.5581 52.4716 l
86.9931 53.6269 l
88.1145 53.7919 89.0032 54.2088 89.6591 54.8774  c
90.2220 55.4529 90.5034 56.1300 90.5034 56.9086  c
90.5034 57.3614 90.4113 57.7804 90.2272 58.1655  c
90.0432 58.5506 89.8115 58.8785 89.5322 59.1494  c
89.2529 59.4202 88.9418 59.6381 88.5991 59.8032  c
88.1124 60.0359 87.6131 60.1523 87.1010 60.1523  c
86.5848 60.1523 86.2092 60.0645 85.9743 59.8889  c
85.7395 59.7133 85.6220 59.5196 85.6220 59.3081  c
85.6220 59.1896 85.6707 59.0848 85.7680 58.9939  c
85.8654 58.9029 85.9881 58.8574 86.1362 58.8574  c
86.2462 58.8574 86.3425 58.8743 86.4250 58.9082  c
86.5075 58.9420 86.6482 59.0288 86.8471 59.1684  c
87.1645 59.3885 87.4861 59.4985 87.8120 59.4985  c
88.3071 59.4985 88.7419 59.3112 89.1164 58.9367  c
89.4909 58.5622 89.6782 58.1062 89.6782 57.5688  c
89.6782 57.0483 89.5110 56.5627 89.1767 56.1120  c
88.8424 55.6613 88.3811 55.3133 87.7929 55.0678  c
87.3317 54.8774 86.7032 54.7674 85.9077 54.7377  c
87.5581 51.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 8.00000 m
90.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
86.5234 10.2368 m
88.6181 9.21484 l
88.8276 9.21484 l
88.8276 16.4829 l
88.8276 16.9653 88.8477 17.2657 88.8879 17.3842  c
88.9281 17.5027 89.0117 17.5937 89.1386 17.6572  c
89.2656 17.7207 89.5237 17.7566 89.9130 17.7651  c
89.9130 18.0000 l
86.6757 18.0000 l
86.6757 17.7651 l
87.0820 17.7566 87.3444 17.7217 87.4628 17.6604  c
87.5813 17.5990 87.6639 17.5165 87.7104 17.4128  c
87.7570 17.3091 87.7802 16.9991 87.7802 16.4829  c
87.7802 11.8364 l
87.7802 11.2101 87.7591 10.8081 87.7168 10.6303  c
87.6871 10.4949 87.6332 10.3955 87.5549 10.3320  c
87.4766 10.2685 87.3824 10.2368 87.2724 10.2368  c
87.1158 10.2368 86.8979 10.3024 86.6186 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 169.000 m
91.0000 169.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 161.000 m
91.0000 161.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 152.000 m
91.0000 152.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 144.000 m
91.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 127.000 m
91.0000 127.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 118.000 m
91.0000 118.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 110.000 m
91.0000 110.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 101.000 m
91.0000 101.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 84.0000 m
91.0000 84.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 76.0000 m
91.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 67.0000 m
91.0000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 59.0000 m
91.0000 59.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 42.0000 m
91.0000 42.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 33.0000 m
91.0000 33.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 25.0000 m
91.0000 25.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 17.0000 m
91.0000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 196 196 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
