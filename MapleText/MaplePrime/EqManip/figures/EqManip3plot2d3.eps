%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 264 575 527
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N7ŒŽ28“ú 14Žž14•ª30•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
382 181 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
382.000 0 l
382.000 181.000 l
0 181.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 372 171 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
32.0000 -1.00000 337.493 164.882 rc
1.00000 0 0 RG
newpath
33.0000 57.3879 m
34.7586 56.4313 l
36.2888 55.6151 l
38.0096 54.7149 l
39.7419 53.8273 l
41.4659 52.9619 l
43.0643 52.1753 l
44.7193 51.3766 l
46.4309 50.5669 l
48.1371 49.7761 l
49.8921 48.9792 l
51.4379 48.2910 l
53.1781 47.5312 l
54.9254 46.7839 l
56.6093 46.0782 l
58.1384 45.4495 l
59.9567 44.7164 l
61.4970 44.1076 l
63.2888 43.4132 l
64.8748 42.8106 l
66.6149 42.1621 l
68.2719 41.5568 l
70.0008 40.9375 l
71.5885 40.3797 l
73.3010 39.7894 l
75.0798 39.1884 l
76.6283 38.6752 l
78.3007 38.1311 l
80.0285 37.5798 l
81.7187 37.0509 l
83.3541 36.5486 l
85.1700 36.0018 l
86.8016 35.5198 l
88.5437 35.0149 l
90.1223 34.5657 l
91.8481 34.0835 l
93.4720 33.6382 l
95.1694 33.1811 l
96.8290 32.7423 l
98.5664 32.2913 l
100.239 31.8649 l
101.950 31.4366 l
103.647 31.0196 l
105.207 30.6429 l
106.994 30.2188 l
108.593 29.8461 l
110.297 29.4555 l
111.928 29.0880 l
113.740 28.6870 l
115.308 28.3458 l
117.088 27.9649 l
118.711 27.6237 l
120.486 27.2567 l
122.017 26.9451 l
123.761 26.5959 l
125.446 26.2642 l
127.129 25.9380 l
128.806 25.6181 l
130.418 25.3155 l
132.160 24.9935 l
133.820 24.6915 l
135.567 24.3784 l
137.149 24.0993 l
138.897 23.7955 l
140.571 23.5088 l
142.242 23.2270 l
143.986 22.9370 l
145.593 22.6738 l
147.239 22.4079 l
149.056 22.1186 l
150.701 21.8605 l
152.383 21.6000 l
154.094 21.3388 l
155.667 21.1019 l
157.344 20.8526 l
159.007 20.6085 l
160.787 20.3508 l
162.357 20.1263 l
164.169 19.8707 l
165.805 19.6430 l
167.423 19.4204 l
169.162 19.1840 l
170.909 18.9496 l
172.499 18.7390 l
174.187 18.5179 l
175.834 18.3046 l
177.619 18.0762 l
179.164 17.8808 l
180.939 17.6589 l
182.607 17.4527 l
184.259 17.2508 l
185.912 17.0509 l
187.599 16.8493 l
189.386 16.6379 l
191.025 16.4462 l
192.643 16.2589 l
194.372 16.0608 l
196.098 15.8652 l
197.647 15.6914 l
199.481 15.4877 l
201.017 15.3189 l
202.812 15.1234 l
204.526 14.9388 l
206.056 14.7755 l
207.777 14.5935 l
209.509 14.4122 l
211.233 14.2335 l
212.832 14.0693 l
214.487 13.9009 l
216.198 13.7282 l
217.905 13.5578 l
219.660 13.3841 l
221.205 13.2325 l
222.946 13.0632 l
224.693 12.8948 l
226.377 12.7340 l
227.906 12.5892 l
229.724 12.4184 l
231.265 12.2749 l
233.056 12.1095 l
234.642 11.9642 l
236.382 11.8062 l
238.039 11.6569 l
239.768 11.5024 l
241.356 11.3616 l
243.069 11.2110 l
244.847 11.0558 l
246.396 10.9216 l
248.068 10.7778 l
249.796 10.6304 l
251.486 10.4873 l
253.122 10.3497 l
254.937 10.1982 l
256.569 10.0629 l
258.311 9.91958 l
259.890 9.79051 l
261.616 9.65031 l
263.240 9.51924 l
264.937 9.38308 l
266.596 9.25079 l
268.334 9.11309 l
270.007 8.98127 l
271.718 8.84721 l
273.415 8.71499 l
274.975 8.59410 l
276.762 8.45623 l
278.361 8.33351 l
280.065 8.20324 l
281.696 8.07908 l
283.507 7.94178 l
285.076 7.82333 l
286.856 7.68936 l
288.479 7.56764 l
290.253 7.43487 l
291.785 7.32061 l
293.529 7.19075 l
295.213 7.06553 l
298.574 6.81625 l
305.335 6.31547 l
306.917 6.19815 l
308.665 6.06832 l
310.339 5.94372 l
312.009 5.81915 l
313.754 5.68864 l
315.361 5.56805 l
317.007 5.44409 l
318.824 5.30661 l
320.469 5.18151 l
322.151 5.05288 l
323.862 4.92128 l
325.435 4.79954 l
327.111 4.66890 l
328.775 4.53825 l
330.555 4.39733 l
332.125 4.27191 l
333.937 4.12580 l
335.573 3.99264 l
337.191 3.85954 l
338.930 3.71482 l
340.677 3.56778 l
342.267 3.43235 l
343.954 3.28675 l
345.602 3.14279 l
347.387 2.98451 l
348.932 2.84559 l
350.707 2.68367 l
352.375 2.52905 l
354.027 2.37348 l
355.680 2.21527 l
357.367 2.05114 l
359.154 1.87402 l
360.793 1.70863 l
362.411 1.54241 l
364.140 1.36140 l
365.866 1.17715 l
367.493 1.00000 l
S
cliprestore
newpath
0 0 m
0 171.000 l
372.000 171.000 l
372.000 0 l
h
W
Q
q
32.0000 -1.00000 337.493 164.882 rc
0.196078 0.803922 0.196078 RG
newpath
33.0549 162.882 m
33.1099 150.137 l
33.1648 142.681 l
33.2198 137.392 l
33.3297 129.936 l
33.4396 124.647 l
33.6594 117.191 l
33.8793 111.901 l
34.3189 104.446 l
34.7586 99.1566 l
35.5237 92.5152 l
36.2888 87.6463 l
38.0096 79.9082 l
39.7419 74.4476 l
41.4659 70.2607 l
43.0643 67.0806 l
44.7193 64.2812 l
46.4309 61.7746 l
48.1371 59.5757 l
49.8921 57.5587 l
51.4379 55.9487 l
53.1781 54.2903 l
54.9254 52.7633 l
56.6093 51.4027 l
58.1384 50.2488 l
59.9567 48.9647 l
61.4970 47.9429 l
63.2888 46.8217 l
64.8748 45.8833 l
66.6149 44.9059 l
68.2719 44.0212 l
70.0008 43.1413 l
71.5885 42.3687 l
73.3010 41.5703 l
75.0798 40.7761 l
76.6283 40.1117 l
78.3007 39.4200 l
80.0285 38.7318 l
81.7187 38.0825 l
83.3541 37.4754 l
85.1700 36.8240 l
86.8016 36.2577 l
88.5437 35.6718 l
90.1223 35.1565 l
91.8481 34.6092 l
93.4720 34.1086 l
95.1694 33.5996 l
96.8290 33.1152 l
98.5664 32.6214 l
100.239 32.1581 l
101.950 31.6960 l
103.647 31.2489 l
105.207 30.8475 l
106.994 30.3979 l
108.593 30.0049 l
110.297 29.5949 l
111.928 29.2109 l
113.740 28.7937 l
115.308 28.4399 l
117.088 28.0465 l
118.711 27.6951 l
120.486 27.3182 l
122.017 26.9992 l
123.761 26.6424 l
125.446 26.3042 l
127.129 25.9724 l
128.806 25.6477 l
130.418 25.3410 l
132.160 25.0151 l
133.820 24.7098 l
135.567 24.3938 l
137.149 24.1125 l
138.897 23.8064 l
140.571 23.5180 l
142.242 23.2346 l
143.986 22.9433 l
145.593 22.6790 l
147.239 22.4122 l
149.056 22.1221 l
150.701 21.8632 l
152.383 21.6023 l
154.094 21.3406 l
155.667 21.1033 l
157.344 20.8537 l
159.007 20.6093 l
160.787 20.3515 l
162.357 20.1269 l
164.169 19.8711 l
165.805 19.6433 l
167.423 19.4206 l
169.162 19.1842 l
170.909 18.9498 l
172.499 18.7391 l
174.187 18.5179 l
175.834 18.3046 l
177.619 18.0762 l
179.164 17.8808 l
180.939 17.6589 l
182.607 17.4527 l
184.259 17.2508 l
185.912 17.0509 l
187.599 16.8493 l
189.386 16.6379 l
191.025 16.4462 l
192.643 16.2589 l
194.372 16.0608 l
196.098 15.8652 l
197.647 15.6914 l
199.481 15.4877 l
201.017 15.3189 l
202.812 15.1234 l
204.526 14.9388 l
206.056 14.7755 l
207.777 14.5935 l
209.509 14.4122 l
211.233 14.2335 l
212.832 14.0693 l
214.487 13.9009 l
216.198 13.7282 l
217.905 13.5578 l
219.660 13.3841 l
221.205 13.2325 l
222.946 13.0632 l
224.693 12.8949 l
226.377 12.7340 l
227.906 12.5892 l
229.724 12.4185 l
231.265 12.2751 l
233.056 12.1096 l
234.642 11.9644 l
236.382 11.8064 l
238.039 11.6572 l
239.768 11.5029 l
241.356 11.3622 l
243.069 11.2117 l
244.847 11.0566 l
246.396 10.9227 l
248.068 10.7792 l
249.796 10.6321 l
251.486 10.4893 l
253.122 10.3521 l
254.937 10.2011 l
256.569 10.0664 l
258.311 9.92372 l
259.890 9.79534 l
261.616 9.65600 l
263.240 9.52586 l
264.937 9.39080 l
266.596 9.25970 l
268.334 9.12345 l
270.007 8.99319 l
271.718 8.86090 l
273.415 8.73065 l
274.975 8.61177 l
276.762 8.47645 l
278.361 8.35627 l
280.065 8.22898 l
281.696 8.10798 l
283.507 7.97454 l
285.076 7.85978 l
286.856 7.73037 l
288.479 7.61323 l
290.253 7.48594 l
291.785 7.37681 l
293.529 7.25332 l
295.213 7.13479 l
296.897 7.01712 l
298.574 6.90063 l
300.186 6.78939 l
301.928 6.66990 l
303.588 6.55674 l
305.335 6.43840 l
306.917 6.33190 l
308.665 6.21493 l
310.339 6.10359 l
312.009 5.99317 l
313.754 5.87857 l
315.361 5.77363 l
317.007 5.66677 l
318.824 5.54951 l
320.469 5.44398 l
322.151 5.33668 l
323.862 5.22821 l
325.435 5.12904 l
327.111 5.02394 l
328.775 4.92021 l
330.555 4.80990 l
332.125 4.71312 l
333.937 4.60206 l
335.573 4.50242 l
337.191 4.40435 l
338.930 4.29950 l
340.677 4.19480 l
342.267 4.10006 l
343.954 3.99998 l
345.602 3.90283 l
347.387 3.79811 l
348.932 3.70796 l
350.707 3.60498 l
352.375 3.50868 l
354.027 3.41383 l
355.680 3.31938 l
357.367 3.22352 l
359.154 3.12248 l
360.793 3.03031 l
362.411 2.93978 l
364.140 2.84352 l
365.866 2.74794 l
367.493 2.65829 l
S
cliprestore
newpath
0 0 m
0 171.000 l
372.000 171.000 l
372.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
33.0000 15.0000 m
367.493 15.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
193 35 14 15 rc
newpath
199.278 41.2553 m
199.486 41.4754 199.642 41.6954 199.748 41.9155  c
199.824 42.0678 199.949 42.4677 200.123 43.1152  c
200.681 42.2773 l
200.829 42.0742 201.009 41.8806 201.221 41.6965  c
201.432 41.5124 201.619 41.3865 201.779 41.3188  c
201.881 41.2765 201.993 41.2553 202.116 41.2553  c
202.298 41.2553 202.443 41.3040 202.551 41.4013  c
202.658 41.4987 202.712 41.6171 202.712 41.7568  c
202.712 41.9176 202.681 42.0276 202.617 42.0869  c
202.499 42.1927 202.363 42.2456 202.211 42.2456  c
202.122 42.2456 202.027 42.2265 201.925 42.1884  c
201.726 42.1207 201.593 42.0869 201.525 42.0869  c
201.424 42.0869 201.303 42.1461 201.164 42.2646  c
200.901 42.4847 200.588 42.9099 200.224 43.5405  c
200.745 45.7241 l
200.825 46.0584 200.893 46.2583 200.948 46.3239  c
201.003 46.3895 201.058 46.4223 201.113 46.4223  c
201.202 46.4223 201.305 46.3737 201.424 46.2763  c
201.657 46.0817 201.856 45.8278 202.021 45.5146  c
202.243 45.6289 l
201.976 46.1282 201.638 46.5429 201.227 46.8730  c
200.994 47.0592 200.798 47.1523 200.637 47.1523  c
200.400 47.1523 200.211 47.0190 200.072 46.7524  c
199.983 46.5874 199.799 45.8764 199.520 44.6196  c
198.859 45.7664 198.330 46.5048 197.933 46.8349  c
197.675 47.0465 197.425 47.1523 197.184 47.1523  c
197.014 47.1523 196.860 47.0909 196.720 46.9682  c
196.619 46.8751 196.568 46.7503 196.568 46.5937  c
196.568 46.4541 196.614 46.3377 196.708 46.2446  c
196.801 46.1515 196.915 46.1049 197.050 46.1049  c
197.186 46.1049 197.330 46.1726 197.482 46.3081  c
197.592 46.4054 197.677 46.4541 197.736 46.4541  c
197.787 46.4541 197.852 46.4202 197.933 46.3525  c
198.132 46.1917 198.402 45.8447 198.745 45.3115  c
199.088 44.7783 199.312 44.3932 199.418 44.1562  c
199.156 43.1279 199.014 42.5841 198.993 42.5249  c
198.895 42.2498 198.768 42.0551 198.612 41.9409  c
198.455 41.8266 198.225 41.7695 197.920 41.7695  c
197.823 41.7695 197.710 41.7737 197.584 41.7822  c
197.584 41.5537 l
h
f
Q
cliprestore
newpath
0 0 m
0 171.000 l
372.000 171.000 l
372.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
33.0000 15.0000 m
33.0000 19.0000 l
S
Q
q
0 J
1 j
newpath
117.000 15.0000 m
117.000 19.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
113.469 33.7470 m
113.469 32.7653 113.617 31.9200 113.914 31.2111  c
114.210 30.5023 114.603 29.9744 115.094 29.6274  c
115.475 29.3523 115.869 29.2148 116.275 29.2148  c
116.935 29.2148 117.528 29.5512 118.052 30.2241  c
118.708 31.0577 119.036 32.1876 119.036 33.6137  c
119.036 34.6124 118.892 35.4609 118.605 36.1591  c
118.317 36.8574 117.950 37.3641 117.503 37.6794  c
117.057 37.9947 116.626 38.1523 116.211 38.1523  c
115.391 38.1523 114.707 37.6678 114.161 36.6987  c
113.700 35.8820 113.469 34.8981 113.469 33.7470  c
h
114.713 33.9057 m
114.713 35.0906 114.859 36.0576 115.151 36.8066  c
115.393 37.4371 115.752 37.7524 116.231 37.7524  c
116.459 37.7524 116.696 37.6498 116.941 37.4445  c
117.187 37.2393 117.373 36.8955 117.500 36.4130  c
117.695 35.6852 117.792 34.6590 117.792 33.3344  c
117.792 32.3527 117.690 31.5338 117.487 30.8779  c
117.335 30.3912 117.138 30.0463 116.897 29.8432  c
116.724 29.7036 116.514 29.6337 116.269 29.6337  c
115.981 29.6337 115.725 29.7628 115.501 30.0210  c
115.196 30.3722 114.988 30.9244 114.878 31.6777  c
114.768 32.4309 114.713 33.1736 114.713 33.9057  c
h
121.625 36.7685 m
121.823 36.7685 121.991 36.8373 122.126 36.9748  c
122.261 37.1123 122.329 37.2784 122.329 37.4731  c
122.329 37.6678 122.260 37.8339 122.123 37.9714  c
121.985 38.1089 121.819 38.1777 121.625 38.1777  c
121.430 38.1777 121.264 38.1089 121.126 37.9714  c
120.989 37.8339 120.920 37.6678 120.920 37.4731  c
120.920 37.2742 120.989 37.1071 121.126 36.9716  c
121.264 36.8362 121.430 36.7685 121.625 36.7685  c
h
128.643 29.3925 m
128.147 30.4716 l
125.558 30.4716 l
124.993 31.6269 l
126.114 31.7919 127.003 32.2088 127.659 32.8774  c
128.222 33.4529 128.503 34.1300 128.503 34.9086  c
128.503 35.3614 128.411 35.7804 128.227 36.1655  c
128.043 36.5506 127.811 36.8785 127.532 37.1494  c
127.252 37.4202 126.941 37.6381 126.599 37.8032  c
126.112 38.0359 125.613 38.1523 125.101 38.1523  c
124.584 38.1523 124.209 38.0645 123.974 37.8889  c
123.739 37.7133 123.622 37.5196 123.622 37.3081  c
123.622 37.1896 123.670 37.0848 123.768 36.9939  c
123.865 36.9029 123.988 36.8574 124.136 36.8574  c
124.246 36.8574 124.342 36.8743 124.425 36.9082  c
124.507 36.9420 124.648 37.0288 124.847 37.1684  c
125.164 37.3885 125.486 37.4985 125.812 37.4985  c
126.307 37.4985 126.741 37.3112 127.116 36.9367  c
127.491 36.5622 127.678 36.1062 127.678 35.5688  c
127.678 35.0483 127.511 34.5627 127.176 34.1120  c
126.842 33.6613 126.381 33.3133 125.793 33.0678  c
125.331 32.8774 124.703 32.7674 123.907 32.7377  c
125.558 29.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
200.000 15.0000 m
200.000 19.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
203.523 30.2368 m
205.618 29.2148 l
205.827 29.2148 l
205.827 36.4829 l
205.827 36.9653 205.847 37.2657 205.887 37.3842  c
205.928 37.5027 206.011 37.5937 206.138 37.6572  c
206.265 37.7207 206.523 37.7566 206.913 37.7651  c
206.913 38.0000 l
203.675 38.0000 l
203.675 37.7651 l
204.082 37.7566 204.344 37.7217 204.462 37.6604  c
204.581 37.5990 204.663 37.5165 204.710 37.4128  c
204.757 37.3091 204.780 36.9991 204.780 36.4829  c
204.780 31.8364 l
204.780 31.2101 204.759 30.8081 204.716 30.6303  c
204.687 30.4949 204.633 30.3955 204.554 30.3320  c
204.476 30.2685 204.382 30.2368 204.272 30.2368  c
204.115 30.2368 203.897 30.3024 203.618 30.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
284.000 15.0000 m
284.000 19.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
281.523 30.2368 m
283.618 29.2148 l
283.827 29.2148 l
283.827 36.4829 l
283.827 36.9653 283.847 37.2657 283.887 37.3842  c
283.928 37.5027 284.011 37.5937 284.138 37.6572  c
284.265 37.7207 284.523 37.7566 284.913 37.7651  c
284.913 38.0000 l
281.675 38.0000 l
281.675 37.7651 l
282.082 37.7566 282.344 37.7217 282.462 37.6604  c
282.581 37.5990 282.663 37.5165 282.710 37.4128  c
282.757 37.3091 282.780 36.9991 282.780 36.4829  c
282.780 31.8364 l
282.780 31.2101 282.759 30.8081 282.716 30.6303  c
282.687 30.4949 282.633 30.3955 282.554 30.3320  c
282.476 30.2685 282.382 30.2368 282.272 30.2368  c
282.115 30.2368 281.897 30.3024 281.618 30.4335  c
h
288.625 36.7685 m
288.823 36.7685 288.991 36.8373 289.126 36.9748  c
289.261 37.1123 289.329 37.2784 289.329 37.4731  c
289.329 37.6678 289.260 37.8339 289.123 37.9714  c
288.985 38.1089 288.819 38.1777 288.625 38.1777  c
288.430 38.1777 288.264 38.1089 288.126 37.9714  c
287.989 37.8339 287.920 37.6678 287.920 37.4731  c
287.920 37.2742 287.989 37.1071 288.126 36.9716  c
288.264 36.8362 288.430 36.7685 288.625 36.7685  c
h
295.643 29.3925 m
295.147 30.4716 l
292.558 30.4716 l
291.993 31.6269 l
293.114 31.7919 294.003 32.2088 294.659 32.8774  c
295.222 33.4529 295.503 34.1300 295.503 34.9086  c
295.503 35.3614 295.411 35.7804 295.227 36.1655  c
295.043 36.5506 294.811 36.8785 294.532 37.1494  c
294.252 37.4202 293.941 37.6381 293.599 37.8032  c
293.112 38.0359 292.613 38.1523 292.101 38.1523  c
291.584 38.1523 291.209 38.0645 290.974 37.8889  c
290.739 37.7133 290.622 37.5196 290.622 37.3081  c
290.622 37.1896 290.670 37.0848 290.768 36.9939  c
290.865 36.9029 290.988 36.8574 291.136 36.8574  c
291.246 36.8574 291.342 36.8743 291.425 36.9082  c
291.507 36.9420 291.648 37.0288 291.847 37.1684  c
292.164 37.3885 292.486 37.4985 292.812 37.4985  c
293.307 37.4985 293.741 37.3112 294.116 36.9367  c
294.491 36.5622 294.678 36.1062 294.678 35.5688  c
294.678 35.0483 294.511 34.5627 294.176 34.1120  c
293.842 33.6613 293.381 33.3133 292.793 33.0678  c
292.331 32.8774 291.703 32.7674 290.907 32.7377  c
292.558 29.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
367.000 15.0000 m
367.000 19.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
374.960 36.3432 m
374.357 38.0000 l
369.279 38.0000 l
369.279 37.7651 l
370.773 36.4025 371.824 35.2895 372.434 34.4262  c
373.043 33.5629 373.348 32.7737 373.348 32.0585  c
373.348 31.5127 373.181 31.0641 372.846 30.7128  c
372.512 30.3616 372.112 30.1860 371.647 30.1860  c
371.223 30.1860 370.844 30.3098 370.507 30.5573  c
370.171 30.8049 369.922 31.1678 369.761 31.6460  c
369.526 31.6460 l
369.632 30.8631 369.904 30.2622 370.342 29.8432  c
370.780 29.4243 371.327 29.2148 371.983 29.2148  c
372.681 29.2148 373.264 29.4391 373.732 29.8877  c
374.199 30.3362 374.433 30.8652 374.433 31.4746  c
374.433 31.9104 374.332 32.3463 374.128 32.7822  c
373.815 33.4677 373.307 34.1935 372.605 34.9594  c
371.551 36.1105 370.893 36.8045 370.631 37.0415  c
372.878 37.0415 l
373.335 37.0415 373.656 37.0245 373.840 36.9907  c
374.024 36.9568 374.190 36.8881 374.338 36.7844  c
374.486 36.6807 374.615 36.5336 374.725 36.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
50.0000 15.0000 m
50.0000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
66.0000 15.0000 m
66.0000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
83.0000 15.0000 m
83.0000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
100.000 15.0000 m
100.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
133.000 15.0000 m
133.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
150.000 15.0000 m
150.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
167.000 15.0000 m
167.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
184.000 15.0000 m
184.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
217.000 15.0000 m
217.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
234.000 15.0000 m
234.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
250.000 15.0000 m
250.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
267.000 15.0000 m
267.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
301.000 15.0000 m
301.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
317.000 15.0000 m
317.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
334.000 15.0000 m
334.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
351.000 15.0000 m
351.000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
33.0000 162.882 m
33.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 82 8 15 rc
Q
cliprestore
newpath
0 0 m
0 171.000 l
372.000 171.000 l
372.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
33.0000 163.000 m
29.0000 163.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 161 7 13 rc
newpath
25.7900 168.438 m
17.2100 168.438 l
17.2100 167.762 l
25.7900 167.762 l
h
f
Q
newpath
26.4946 167.664 m
25.8133 167.106 25.3742 166.657 25.1774 166.318  c
24.9807 165.980 24.8823 165.629 24.8823 165.265  c
24.8823 164.706 25.0981 164.225 25.5297 163.821  c
25.9614 163.416 26.5348 163.214 27.2500 163.214  c
27.9440 163.214 28.5026 163.403 28.9257 163.779  c
29.3489 164.156 29.5605 164.585 29.5605 165.068  c
29.5605 165.390 29.4462 165.717 29.2177 166.052  c
28.9892 166.386 28.5131 166.780 27.7895 167.232  c
28.5343 167.808 29.0273 168.261 29.2685 168.591  c
29.5901 169.022 29.7509 169.477 29.7509 169.956  c
29.7509 170.561 29.5203 171.078 29.0590 171.508  c
28.5978 171.937 27.9926 172.152 27.2436 172.152  c
26.4269 172.152 25.7900 171.896 25.3330 171.384  c
24.9690 170.973 24.7871 170.525 24.7871 170.038  c
24.7871 169.657 24.9151 169.280 25.1711 168.905  c
25.4271 168.531 25.8683 168.117 26.4946 167.664  c
h
27.4912 166.985 m
27.9990 166.528 28.3206 166.167 28.4560 165.903  c
28.5914 165.638 28.6591 165.339 28.6591 165.004  c
28.6591 164.560 28.5343 164.212 28.2846 163.960  c
28.0349 163.708 27.6943 163.583 27.2627 163.583  c
26.8310 163.583 26.4798 163.707 26.2089 163.957  c
25.9381 164.207 25.8027 164.499 25.8027 164.833  c
25.8027 165.053 25.8588 165.273 25.9709 165.493  c
26.0830 165.713 26.2428 165.923 26.4502 166.122  c
h
26.7929 167.905 m
26.4417 168.202 26.1814 168.524 26.0122 168.873  c
25.8429 169.222 25.7583 169.600 25.7583 170.006  c
25.7583 170.552 25.9074 170.989 26.2058 171.317  c
26.5041 171.645 26.8839 171.809 27.3452 171.809  c
27.8022 171.809 28.1682 171.680 28.4433 171.422  c
28.7184 171.164 28.8559 170.851 28.8559 170.482  c
28.8559 170.178 28.7755 169.905 28.6147 169.664  c
28.3142 169.215 27.7070 168.629 26.7929 167.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 144.000 m
29.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 143 7 13 rc
newpath
25.7900 150.438 m
17.2100 150.438 l
17.2100 149.762 l
25.7900 149.762 l
h
f
Q
newpath
25.3076 145.392 m
29.9223 145.392 l
29.9223 145.633 l
27.0532 154.177 l
26.3422 154.177 l
28.9130 146.427 l
26.5454 146.427 l
26.0672 146.427 25.7265 146.484 25.5234 146.598  c
25.1679 146.793 24.8823 147.093 24.6665 147.500  c
24.4824 147.430 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 126.000 m
29.0000 126.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 124 7 13 rc
newpath
25.7900 131.438 m
17.2100 131.438 l
17.2100 130.762 l
25.7900 130.762 l
h
f
Q
newpath
29.8271 126.214 m
29.8271 126.449 l
29.2685 126.504 28.8125 126.615 28.4592 126.783  c
28.1058 126.950 27.7567 127.205 27.4118 127.547  c
27.0669 127.890 26.7813 128.272 26.5549 128.693  c
26.3285 129.114 26.1391 129.615 25.9868 130.194  c
26.5961 129.775 27.2076 129.566 27.8212 129.566  c
28.4095 129.566 28.9194 129.803 29.3510 130.277  c
29.7827 130.751 29.9985 131.360 29.9985 132.105  c
29.9985 132.824 29.7806 133.480 29.3447 134.073  c
28.8199 134.792 28.1259 135.152 27.2627 135.152  c
26.6744 135.152 26.1751 134.957 25.7646 134.568  c
24.9606 133.810 24.5585 132.829 24.5585 131.623  c
24.5585 130.852 24.7130 130.120 25.0219 129.426  c
25.3308 128.732 25.7720 128.117 26.3454 127.579  c
26.9188 127.042 27.4679 126.680 27.9926 126.494  c
28.5174 126.307 29.0061 126.214 29.4589 126.214  c
h
25.8789 130.658 m
25.8027 131.229 25.7646 131.690 25.7646 132.042  c
25.7646 132.448 25.8397 132.889 25.9899 133.365  c
26.1402 133.841 26.3634 134.219 26.6596 134.498  c
26.8754 134.697 27.1378 134.796 27.4467 134.796  c
27.8149 134.796 28.1439 134.623 28.4338 134.276  c
28.7237 133.929 28.8686 133.434 28.8686 132.791  c
28.8686 132.067 28.7247 131.441 28.4370 130.912  c
28.1492 130.383 27.7408 130.118 27.2119 130.118  c
27.0511 130.118 26.8786 130.152 26.6945 130.220  c
26.5105 130.287 26.2386 130.433 25.8789 130.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 107.000 m
29.0000 107.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 106 7 13 rc
newpath
25.7900 113.438 m
17.2100 113.438 l
17.2100 112.762 l
25.7900 112.762 l
h
f
Q
newpath
29.6430 108.392 m
29.1479 109.471 l
26.5581 109.471 l
25.9931 110.627 l
27.1145 110.792 28.0032 111.208 28.6591 111.877  c
29.2220 112.453 29.5034 113.130 29.5034 113.908  c
29.5034 114.361 29.4113 114.780 29.2272 115.165  c
29.0432 115.550 28.8115 115.878 28.5322 116.149  c
28.2529 116.420 27.9418 116.638 27.5991 116.803  c
27.1124 117.036 26.6131 117.152 26.1010 117.152  c
25.5848 117.152 25.2092 117.064 24.9743 116.888  c
24.7395 116.713 24.6220 116.519 24.6220 116.308  c
24.6220 116.189 24.6707 116.084 24.7680 115.993  c
24.8654 115.902 24.9881 115.857 25.1362 115.857  c
25.2462 115.857 25.3425 115.874 25.4250 115.908  c
25.5075 115.942 25.6482 116.028 25.8471 116.168  c
26.1645 116.388 26.4861 116.498 26.8120 116.498  c
27.3071 116.498 27.7419 116.311 28.1164 115.936  c
28.4909 115.562 28.6782 115.106 28.6782 114.568  c
28.6782 114.048 28.5110 113.562 28.1767 113.112  c
27.8424 112.661 27.3811 112.313 26.7929 112.067  c
26.3317 111.877 25.7032 111.767 24.9077 111.737  c
26.5581 108.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 89.0000 m
29.0000 89.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 87 7 13 rc
newpath
25.7900 94.4380 m
17.2100 94.4380 l
17.2100 93.7620 l
25.7900 93.7620 l
h
f
Q
newpath
30.0493 94.8261 m
30.0493 95.7275 l
28.8940 95.7275 l
28.8940 98.0000 l
27.8466 98.0000 l
27.8466 95.7275 l
24.2031 95.7275 l
24.2031 94.9150 l
28.1958 89.2148 l
28.8940 89.2148 l
28.8940 94.8261 l
h
27.8466 94.8261 m
27.8466 90.5542 l
24.8252 94.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 71.0000 m
29.0000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 69 7 13 rc
newpath
25.7900 76.4380 m
17.2100 76.4380 l
17.2100 75.7620 l
25.7900 75.7620 l
h
f
Q
newpath
24.6601 73.0302 m
24.9056 72.4505 25.2155 72.0030 25.5900 71.6877  c
25.9646 71.3724 26.4311 71.2148 26.9897 71.2148  c
27.6795 71.2148 28.2085 71.4391 28.5766 71.8877  c
28.8559 72.2220 28.9956 72.5795 28.9956 72.9604  c
28.9956 73.5867 28.6020 74.2342 27.8149 74.9028  c
28.3439 75.1101 28.7438 75.4064 29.0146 75.7915  c
29.2854 76.1766 29.4209 76.6293 29.4209 77.1499  c
29.4209 77.8946 29.1839 78.5400 28.7099 79.0859  c
28.0921 79.7968 27.1971 80.1523 26.0249 80.1523  c
25.4451 80.1523 25.0505 80.0804 24.8410 79.9365  c
24.6315 79.7926 24.5268 79.6381 24.5268 79.4731  c
24.5268 79.3504 24.5765 79.2425 24.6760 79.1494  c
24.7754 79.0563 24.8950 79.0097 25.0346 79.0097  c
25.1404 79.0097 25.2483 79.0266 25.3584 79.0605  c
25.4303 79.0817 25.5932 79.1589 25.8471 79.2922  c
26.1010 79.4255 26.2766 79.5048 26.3740 79.5302  c
26.5306 79.5768 26.6977 79.6001 26.8754 79.6001  c
27.3071 79.6001 27.6827 79.4329 28.0022 79.0986  c
28.3217 78.7643 28.4814 78.3686 28.4814 77.9116  c
28.4814 77.5773 28.4073 77.2514 28.2592 76.9340  c
28.1492 76.6971 28.0286 76.5172 27.8974 76.3945  c
27.7154 76.2252 27.4658 76.0718 27.1484 75.9343  c
26.8310 75.7967 26.5073 75.7280 26.1772 75.7280  c
25.9741 75.7280 l
25.9741 75.5376 l
26.3084 75.4952 26.6438 75.3746 26.9802 75.1757  c
27.3166 74.9768 27.5610 74.7377 27.7133 74.4585  c
27.8657 74.1792 27.9418 73.8724 27.9418 73.5380  c
27.9418 73.1022 27.8054 72.7499 27.5324 72.4812  c
27.2595 72.2124 26.9199 72.0781 26.5136 72.0781  c
25.8577 72.0781 25.3097 72.4293 24.8696 73.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 52.0000 m
29.0000 52.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 51 7 13 rc
newpath
25.7900 58.4380 m
17.2100 58.4380 l
17.2100 57.7620 l
25.7900 57.7620 l
h
f
Q
newpath
29.9604 60.3432 m
29.3574 62.0000 l
24.2793 62.0000 l
24.2793 61.7651 l
25.7731 60.4025 26.8247 59.2895 27.4340 58.4262  c
28.0434 57.5629 28.3481 56.7737 28.3481 56.0585  c
28.3481 55.5127 28.1809 55.0641 27.8466 54.7128  c
27.5123 54.3616 27.1124 54.1860 26.6469 54.1860  c
26.2238 54.1860 25.8439 54.3098 25.5075 54.5573  c
25.1711 54.8049 24.9225 55.1678 24.7617 55.6460  c
24.5268 55.6460 l
24.6326 54.8631 24.9045 54.2622 25.3425 53.8432  c
25.7805 53.4243 26.3274 53.2148 26.9834 53.2148  c
27.6816 53.2148 28.2645 53.4391 28.7321 53.8877  c
29.1997 54.3362 29.4335 54.8652 29.4335 55.4746  c
29.4335 55.9104 29.3320 56.3463 29.1289 56.7822  c
28.8157 57.4677 28.3079 58.1935 27.6054 58.9594  c
26.5517 60.1105 25.8937 60.8045 25.6313 61.0415  c
27.8784 61.0415 l
28.3354 61.0415 28.6560 61.0245 28.8400 60.9907  c
29.0241 60.9568 29.1902 60.8881 29.3383 60.7844  c
29.4864 60.6807 29.6155 60.5336 29.7255 60.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 34.0000 m
29.0000 34.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 32 7 13 rc
newpath
25.7900 39.4380 m
17.2100 39.4380 l
17.2100 38.7620 l
25.7900 38.7620 l
h
f
Q
newpath
25.5234 35.2368 m
27.6181 34.2148 l
27.8276 34.2148 l
27.8276 41.4829 l
27.8276 41.9653 27.8477 42.2657 27.8879 42.3842  c
27.9281 42.5027 28.0117 42.5937 28.1386 42.6572  c
28.2656 42.7207 28.5237 42.7566 28.9130 42.7651  c
28.9130 43.0000 l
25.6757 43.0000 l
25.6757 42.7651 l
26.0820 42.7566 26.3444 42.7217 26.4628 42.6604  c
26.5813 42.5990 26.6639 42.5165 26.7104 42.4128  c
26.7570 42.3091 26.7802 41.9991 26.7802 41.4829  c
26.7802 36.8364 l
26.7802 36.2101 26.7591 35.8081 26.7168 35.6303  c
26.6871 35.4949 26.6332 35.3955 26.5549 35.3320  c
26.4766 35.2685 26.3824 35.2368 26.2724 35.2368  c
26.1158 35.2368 25.8979 35.3024 25.6186 35.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 15.0000 m
29.0000 15.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
24.4697 20.7470 m
24.4697 19.7653 24.6178 18.9200 24.9140 18.2111  c
25.2102 17.5023 25.6038 16.9744 26.0947 16.6274  c
26.4755 16.3523 26.8691 16.2148 27.2753 16.2148  c
27.9355 16.2148 28.5279 16.5512 29.0527 17.2241  c
29.7086 18.0577 30.0366 19.1876 30.0366 20.6137  c
30.0366 21.6124 29.8927 22.4609 29.6049 23.1591  c
29.3172 23.8574 28.9501 24.3641 28.5036 24.6794  c
28.0572 24.9947 27.6266 25.1523 27.2119 25.1523  c
26.3909 25.1523 25.7075 24.6678 25.1616 23.6987  c
24.7003 22.8820 24.4697 21.8981 24.4697 20.7470  c
h
25.7138 20.9057 m
25.7138 22.0906 25.8598 23.0576 26.1518 23.8066  c
26.3930 24.4371 26.7527 24.7524 27.2309 24.7524  c
27.4594 24.7524 27.6964 24.6498 27.9418 24.4445  c
28.1873 24.2393 28.3735 23.8955 28.5004 23.4130  c
28.6951 22.6852 28.7924 21.6590 28.7924 20.3344  c
28.7924 19.3527 28.6909 18.5338 28.4877 17.8779  c
28.3354 17.3912 28.1386 17.0463 27.8974 16.8432  c
27.7239 16.7036 27.5144 16.6337 27.2690 16.6337  c
26.9812 16.6337 26.7252 16.7628 26.5009 17.0210  c
26.1962 17.3722 25.9889 17.9244 25.8789 18.6777  c
25.7688 19.4309 25.7138 20.1736 25.7138 20.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 153.000 m
31.0000 153.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 135.000 m
31.0000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 117.000 m
31.0000 117.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 98.0000 m
31.0000 98.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 80.0000 m
31.0000 80.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 61.0000 m
31.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 43.0000 m
31.0000 43.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 25.0000 m
31.0000 25.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 6.00000 m
31.0000 6.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 382 181 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
