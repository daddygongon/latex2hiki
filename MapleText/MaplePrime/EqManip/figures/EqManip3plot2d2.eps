%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 294 575 497
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N7ŒŽ28“ú 14Žž14•ª30•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 145 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 145.000 l
0 145.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 135 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
8.00000 6.05402 379.493 121.446 rc
1.00000 0 0 RG
newpath
9.00000 125.079 m
10.9794 125.188 l
12.7017 125.219 l
14.6386 125.185 l
16.5884 125.079 l
18.5289 124.901 l
20.3280 124.674 l
22.1908 124.377 l
24.1174 124.003 l
26.0378 123.565 l
28.0131 123.046 l
29.7530 122.534 l
31.7117 121.897 l
33.6785 121.193 l
35.5738 120.454 l
37.2949 119.734 l
39.3415 118.817 l
41.0752 117.991 l
43.0920 116.972 l
44.8771 116.021 l
46.8358 114.925 l
48.7008 113.832 l
50.6468 112.641 l
52.4338 111.504 l
54.3614 110.231 l
56.3636 108.860 l
58.1065 107.628 l
59.9888 106.258 l
61.9335 104.800 l
63.8360 103.335 l
65.6768 101.882 l
67.7206 100.230 l
69.5571 98.7123 l
71.5180 97.0582 l
73.2948 95.5312 l
75.2374 93.8330 l
77.0651 92.2091 l
78.9757 90.4865 l
80.8436 88.7793 l
82.7991 86.9692 l
84.6825 85.2058 l
86.6086 83.3840 l
88.5187 81.5605 l
90.2739 79.8720 l
92.2855 77.9234 l
94.0848 76.1702 l
96.0031 74.2919 l
97.8393 72.4874 l
99.8780 70.4779 l
105.473 64.9504 l
107.471 62.9794 l
109.194 61.2824 l
111.157 59.3559 l
113.053 57.5029 l
114.948 55.6610 l
116.836 53.8373 l
118.650 52.0978 l
120.611 50.2331 l
122.479 48.4728 l
124.446 46.6400 l
126.226 44.9999 l
128.194 43.2103 l
130.078 41.5204 l
131.958 39.8600 l
133.922 38.1546 l
135.731 36.6115 l
137.583 35.0600 l
139.628 33.3829 l
141.480 31.8983 l
143.374 30.4151 l
145.299 28.9444 l
147.070 27.6274 l
148.957 26.2617 l
150.829 24.9466 l
152.832 23.5856 l
154.600 22.4251 l
156.640 21.1347 l
158.480 20.0161 l
160.301 18.9531 l
162.260 17.8599 l
164.226 16.8153 l
166.015 15.9121 l
167.915 15.0031 l
169.769 14.1666 l
171.778 13.3173 l
173.517 12.6314 l
175.515 11.9004 l
177.392 11.2693 l
179.252 10.6985 l
181.113 10.1817 l
183.011 9.71145 l
185.023 9.27599 l
186.867 8.93415 l
188.688 8.65094 l
190.635 8.40806 l
192.577 8.22763 l
194.320 8.11850 l
196.386 8.05402 l
198.114 8.05411 l
200.135 8.11670 l
202.064 8.23921 l
203.786 8.40029 l
205.723 8.63954 l
207.673 8.94223 l
209.613 9.30481 l
211.412 9.69529 l
213.275 10.1542 l
215.202 10.6870 l
217.122 11.2763 l
219.097 11.9424 l
220.837 12.5789 l
222.796 13.3507 l
224.763 14.1836 l
226.658 15.0403 l
228.379 15.8637 l
230.426 16.8978 l
232.159 17.8199 l
234.176 18.9445 l
235.961 19.9857 l
237.920 21.1764 l
239.785 22.3559 l
241.731 23.6330 l
243.518 24.8463 l
245.446 26.1974 l
247.448 27.6457 l
249.191 28.9425 l
251.073 30.3795 l
253.018 31.9023 l
254.920 33.4282 l
256.761 34.9369 l
258.805 36.6479 l
260.641 38.2157 l
262.602 39.9197 l
264.379 41.4892 l
266.322 43.2310 l
268.149 44.8929 l
270.060 46.6523 l
271.928 48.3927 l
273.883 50.2344 l
275.767 52.0254 l
277.693 53.8724 l
279.603 55.7178 l
281.358 57.4240 l
283.370 59.3897 l
285.169 61.1554 l
287.087 63.0440 l
288.923 64.8557 l
294.731 70.5930 l
296.558 72.3929 l
298.555 74.3562 l
300.279 76.0439 l
302.242 77.9569 l
304.138 79.7938 l
306.033 81.6168 l
307.921 83.4186 l
309.735 85.1344 l
311.695 86.9705 l
313.564 88.7006 l
315.531 90.4986 l
317.311 92.1044 l
319.278 93.8531 l
321.163 95.5008 l
323.043 97.1162 l
325.007 98.7715 l
326.815 100.265 l
328.668 101.764 l
330.713 103.379 l
332.564 104.804 l
334.458 106.224 l
336.384 107.626 l
338.154 108.878 l
340.041 110.170 l
341.914 111.409 l
343.917 112.685 l
345.685 113.768 l
347.724 114.964 l
349.565 115.993 l
351.386 116.964 l
353.344 117.955 l
355.310 118.891 l
357.099 119.691 l
358.999 120.487 l
360.853 121.207 l
362.863 121.925 l
364.602 122.492 l
366.599 123.080 l
368.477 123.570 l
370.336 123.995 l
372.197 124.358 l
374.095 124.664 l
376.107 124.917 l
377.952 125.082 l
379.773 125.182 l
381.719 125.219 l
383.662 125.182 l
385.493 125.079 l
S
cliprestore
newpath
0 0 m
0 135.000 l
390.000 135.000 l
390.000 0 l
h
W
Q
q
8.00000 6.05402 379.493 121.446 rc
0.196078 0.803922 0.196078 RG
newpath
9.00000 126.500 m
10.9794 126.467 l
12.7017 126.387 l
14.6386 126.238 l
16.5884 126.025 l
18.5289 125.752 l
20.3280 125.444 l
22.1908 125.070 l
24.1174 124.625 l
26.0378 124.121 l
28.0131 123.543 l
29.7530 122.983 l
31.7117 122.296 l
33.6785 121.547 l
35.5738 120.770 l
37.2949 120.018 l
39.3415 119.068 l
41.0752 118.215 l
43.0920 117.169 l
44.8771 116.197 l
46.8358 115.080 l
48.7008 113.969 l
50.6468 112.761 l
52.4338 111.610 l
54.3614 110.324 l
56.3636 108.941 l
58.1065 107.699 l
59.9888 106.320 l
61.9335 104.854 l
63.8360 103.382 l
65.6768 101.923 l
67.7206 100.265 l
69.5571 98.7428 l
71.5180 97.0843 l
73.2948 95.5539 l
75.2374 93.8524 l
77.0651 92.2258 l
78.9757 90.5008 l
80.8436 88.7914 l
82.7991 86.9795 l
84.6825 85.2145 l
86.6086 83.3913 l
88.5187 81.5667 l
90.2739 79.8772 l
92.2855 77.9277 l
94.0848 76.1738 l
96.0031 74.2950 l
97.8393 72.4899 l
99.8780 70.4800 l
105.473 64.9516 l
107.471 62.9803 l
109.194 61.2832 l
111.157 59.3565 l
113.053 57.5034 l
114.948 55.6613 l
116.836 53.8376 l
118.650 52.0981 l
120.611 50.2333 l
122.479 48.4730 l
124.446 46.6401 l
126.226 45.0000 l
128.194 43.2104 l
130.078 41.5205 l
131.958 39.8601 l
133.922 38.1546 l
135.731 36.6115 l
137.583 35.0600 l
139.628 33.3829 l
141.480 31.8983 l
143.374 30.4151 l
145.299 28.9444 l
147.070 27.6274 l
148.957 26.2617 l
150.829 24.9466 l
152.832 23.5856 l
154.600 22.4251 l
156.640 21.1347 l
158.480 20.0161 l
160.301 18.9531 l
162.260 17.8599 l
164.226 16.8153 l
166.015 15.9121 l
167.915 15.0031 l
169.769 14.1666 l
171.778 13.3173 l
173.517 12.6314 l
175.515 11.9004 l
177.392 11.2693 l
179.252 10.6985 l
181.113 10.1817 l
183.011 9.71145 l
185.023 9.27599 l
186.867 8.93415 l
188.688 8.65094 l
190.635 8.40806 l
192.577 8.22763 l
194.320 8.11850 l
196.386 8.05402 l
198.114 8.05411 l
200.135 8.11670 l
202.064 8.23921 l
203.786 8.40029 l
205.723 8.63954 l
207.673 8.94223 l
209.613 9.30481 l
211.412 9.69529 l
213.275 10.1542 l
215.202 10.6870 l
217.122 11.2763 l
219.097 11.9424 l
220.837 12.5789 l
222.796 13.3507 l
224.763 14.1836 l
226.658 15.0403 l
228.379 15.8637 l
230.426 16.8978 l
232.159 17.8199 l
234.176 18.9445 l
235.961 19.9857 l
237.920 21.1764 l
239.785 22.3559 l
241.731 23.6330 l
243.518 24.8463 l
245.446 26.1974 l
247.448 27.6457 l
249.191 28.9425 l
251.073 30.3795 l
253.018 31.9023 l
254.920 33.4282 l
256.761 34.9370 l
258.805 36.6479 l
260.641 38.2157 l
262.602 39.9198 l
264.379 41.4893 l
266.322 43.2310 l
268.149 44.8930 l
270.060 46.6524 l
271.928 48.3929 l
273.883 50.2346 l
275.767 52.0256 l
277.693 53.8727 l
279.603 55.7182 l
281.358 57.4244 l
283.370 59.3903 l
285.169 61.1561 l
287.087 63.0449 l
288.923 64.8568 l
294.731 70.5950 l
296.558 72.3954 l
298.555 74.3593 l
300.279 76.0475 l
302.242 77.9612 l
304.138 79.7990 l
306.033 81.6230 l
307.921 83.4260 l
309.735 85.1431 l
311.695 86.9808 l
313.564 88.7127 l
315.531 90.5128 l
317.311 92.1209 l
319.278 93.8725 l
321.163 95.5234 l
323.043 97.1425 l
325.007 98.8022 l
326.815 100.300 l
328.668 101.804 l
330.713 103.426 l
332.564 104.858 l
334.458 106.286 l
336.384 107.698 l
338.154 108.959 l
340.041 110.263 l
341.914 111.515 l
343.917 112.806 l
345.685 113.903 l
347.724 115.119 l
349.565 116.168 l
351.386 117.161 l
353.344 118.178 l
355.310 119.144 l
357.099 119.974 l
358.999 120.804 l
360.853 121.562 l
362.863 122.326 l
364.602 122.936 l
366.599 123.580 l
368.477 124.127 l
370.336 124.615 l
372.197 125.048 l
374.095 125.431 l
376.107 125.774 l
377.952 126.031 l
379.773 126.230 l
381.719 126.382 l
383.662 126.472 l
385.493 126.500 l
S
cliprestore
newpath
0 0 m
0 135.000 l
390.000 135.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
9.00000 67.0000 m
385.493 67.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 106 14 15 rc
newpath
290.278 112.255 m
290.486 112.475 290.642 112.695 290.748 112.915  c
290.824 113.067 290.949 113.467 291.123 114.115  c
291.681 113.277 l
291.829 113.074 292.009 112.880 292.221 112.696  c
292.432 112.512 292.619 112.386 292.779 112.318  c
292.881 112.276 292.993 112.255 293.116 112.255  c
293.298 112.255 293.443 112.304 293.551 112.401  c
293.658 112.498 293.712 112.617 293.712 112.756  c
293.712 112.917 293.681 113.027 293.617 113.086  c
293.499 113.192 293.363 113.245 293.211 113.245  c
293.122 113.245 293.027 113.226 292.925 113.188  c
292.726 113.120 292.593 113.086 292.525 113.086  c
292.424 113.086 292.303 113.146 292.164 113.264  c
291.901 113.484 291.588 113.910 291.224 114.540  c
291.745 116.724 l
291.825 117.058 291.893 117.258 291.948 117.324  c
292.003 117.389 292.058 117.422 292.113 117.422  c
292.202 117.422 292.305 117.373 292.424 117.276  c
292.657 117.081 292.856 116.827 293.021 116.514  c
293.243 116.628 l
292.976 117.128 292.638 117.543 292.227 117.873  c
291.994 118.059 291.798 118.152 291.637 118.152  c
291.400 118.152 291.211 118.019 291.072 117.752  c
290.983 117.587 290.799 116.876 290.520 115.619  c
289.859 116.766 289.330 117.504 288.933 117.835  c
288.675 118.046 288.425 118.152 288.184 118.152  c
288.014 118.152 287.860 118.091 287.720 117.968  c
287.619 117.875 287.568 117.750 287.568 117.593  c
287.568 117.454 287.614 117.337 287.708 117.244  c
287.801 117.151 287.915 117.105 288.050 117.105  c
288.186 117.105 288.330 117.172 288.482 117.308  c
288.592 117.405 288.677 117.454 288.736 117.454  c
288.787 117.454 288.852 117.420 288.933 117.352  c
289.132 117.191 289.402 116.844 289.745 116.311  c
290.088 115.778 290.312 115.393 290.418 115.156  c
290.156 114.127 290.014 113.584 289.993 113.524  c
289.895 113.249 289.768 113.055 289.612 112.940  c
289.455 112.826 289.225 112.769 288.920 112.769  c
288.823 112.769 288.710 112.773 288.584 112.782  c
288.584 112.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 135.000 l
390.000 135.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
9.00000 67.0000 m
9.00000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 80 7 13 rc
newpath
16.7900 87.4380 m
8.21000 87.4380 l
8.21000 86.7620 l
16.7900 86.7620 l
h
f
Q
newpath
21.8900 89.0370 m
21.8900 89.2883 21.8553 89.5440 21.7860 89.8040  c
21.7166 90.0640 21.6170 90.2980 21.4870 90.5060  c
21.3570 90.7140 21.1945 90.8830 20.9995 91.0130  c
20.8045 91.1430 20.5813 91.2080 20.3300 91.2080  c
20.0873 91.2080 19.8663 91.1040 19.6670 90.8960  c
19.4676 90.6880 19.3073 90.3760 19.1860 89.9600  c
19.1686 89.8993 19.1535 89.8213 19.1405 89.7260  c
19.1275 89.6306 19.1166 89.5310 19.1080 89.4270  c
19.0993 89.3230 19.0928 89.2211 19.0885 89.1215  c
19.0841 89.0218 19.0820 88.9373 19.0820 88.8680  c
19.0820 88.3740 19.1166 87.8670 19.1860 87.3470  c
19.2553 86.8270 19.3116 86.3070 19.3550 85.7870  c
17.8860 85.7870 l
17.7993 86.7576 17.7126 87.5766 17.6260 88.2440  c
17.5393 88.9113 17.4483 89.5093 17.3530 90.0380  c
17.3270 90.1766 17.3010 90.3066 17.2750 90.4280  c
17.2490 90.5493 17.2143 90.6533 17.1710 90.7400  c
17.0756 90.9393 16.9586 91.0736 16.8200 91.1430  c
16.6813 91.2123 16.5513 91.2470 16.4300 91.2470  c
16.2306 91.2470 16.0660 91.1755 15.9360 91.0325  c
15.8060 90.8895 15.7410 90.7356 15.7410 90.5710  c
15.7410 90.3890 15.7886 90.2373 15.8840 90.1160  c
15.9793 89.9946 16.0876 89.8603 16.2090 89.7130  c
16.3216 89.5830 16.4278 89.4465 16.5275 89.3035  c
16.6271 89.1605 16.6900 88.9806 16.7160 88.7640  c
17.0930 85.7870 l
16.4820 85.7870 l
16.3433 85.7870 16.1916 85.8216 16.0270 85.8910  c
15.8623 85.9603 15.7236 86.0730 15.6110 86.2290  c
15.3510 86.6060 l
15.1300 86.6060 l
15.3206 85.9993 15.5590 85.5248 15.8450 85.1825  c
16.1310 84.8401 16.5080 84.6690 16.9760 84.6690  c
21.7860 84.6690 l
21.7860 85.7870 l
20.1480 85.7870 l
20.1220 86.0383 20.0981 86.3026 20.0765 86.5800  c
20.0548 86.8573 20.0375 87.1325 20.0245 87.4055  c
20.0115 87.6785 20.0028 87.9363 19.9985 88.1790  c
19.9941 88.4216 19.9920 88.6296 19.9920 88.8030  c
19.9920 88.9503 20.0071 89.0955 20.0375 89.2385  c
20.0678 89.3815 20.1176 89.5093 20.1870 89.6220  c
20.2563 89.7346 20.3451 89.8278 20.4535 89.9015  c
20.5618 89.9751 20.6940 90.0120 20.8500 90.0120  c
20.9453 90.0120 21.0580 89.9773 21.1880 89.9080  c
21.3180 89.8386 21.4220 89.7260 21.5000 89.5700  c
21.5346 89.5006 21.5585 89.4205 21.5715 89.3295  c
21.5845 89.2385 21.5953 89.1410 21.6040 89.0370  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
56.0000 67.0000 m
56.0000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
44 88 7 13 rc
newpath
54.7900 95.4380 m
46.2100 95.4380 l
46.2100 94.7620 l
54.7900 94.7620 l
h
f
Q
newpath
57.6601 84.0302 m
57.9056 83.4505 58.2155 83.0030 58.5900 82.6877  c
58.9646 82.3724 59.4311 82.2148 59.9897 82.2148  c
60.6795 82.2148 61.2085 82.4391 61.5766 82.8877  c
61.8559 83.2220 61.9956 83.5795 61.9956 83.9604  c
61.9956 84.5867 61.6020 85.2342 60.8149 85.9028  c
61.3439 86.1101 61.7438 86.4064 62.0146 86.7915  c
62.2854 87.1766 62.4209 87.6293 62.4209 88.1499  c
62.4209 88.8946 62.1839 89.5400 61.7099 90.0859  c
61.0921 90.7968 60.1971 91.1523 59.0249 91.1523  c
58.4451 91.1523 58.0505 91.0804 57.8410 90.9365  c
57.6315 90.7926 57.5268 90.6381 57.5268 90.4731  c
57.5268 90.3504 57.5765 90.2425 57.6760 90.1494  c
57.7754 90.0563 57.8950 90.0097 58.0346 90.0097  c
58.1404 90.0097 58.2483 90.0266 58.3584 90.0605  c
58.4303 90.0817 58.5932 90.1589 58.8471 90.2922  c
59.1010 90.4255 59.2766 90.5048 59.3740 90.5302  c
59.5306 90.5768 59.6977 90.6001 59.8754 90.6001  c
60.3071 90.6001 60.6827 90.4329 61.0022 90.0986  c
61.3217 89.7643 61.4814 89.3686 61.4814 88.9116  c
61.4814 88.5773 61.4073 88.2514 61.2592 87.9340  c
61.1492 87.6971 61.0286 87.5172 60.8974 87.3945  c
60.7154 87.2252 60.4658 87.0718 60.1484 86.9343  c
59.8310 86.7967 59.5073 86.7280 59.1772 86.7280  c
58.9741 86.7280 l
58.9741 86.5376 l
59.3084 86.4952 59.6438 86.3746 59.9802 86.1757  c
60.3166 85.9768 60.5610 85.7377 60.7133 85.4585  c
60.8657 85.1792 60.9418 84.8724 60.9418 84.5380  c
60.9418 84.1022 60.8054 83.7499 60.5324 83.4812  c
60.2595 83.2124 59.9199 83.0781 59.5136 83.0781  c
58.8577 83.0781 58.3097 83.4293 57.8696 84.1318  c
h
f
newpath
f
newpath
73.8900 89.0370 m
73.8900 89.2883 73.8553 89.5440 73.7860 89.8040  c
73.7166 90.0640 73.6170 90.2980 73.4870 90.5060  c
73.3570 90.7140 73.1945 90.8830 72.9995 91.0130  c
72.8045 91.1430 72.5813 91.2080 72.3300 91.2080  c
72.0873 91.2080 71.8663 91.1040 71.6670 90.8960  c
71.4676 90.6880 71.3073 90.3760 71.1860 89.9600  c
71.1686 89.8993 71.1535 89.8213 71.1405 89.7260  c
71.1275 89.6306 71.1166 89.5310 71.1080 89.4270  c
71.0993 89.3230 71.0928 89.2211 71.0885 89.1215  c
71.0841 89.0218 71.0820 88.9373 71.0820 88.8680  c
71.0820 88.3740 71.1166 87.8670 71.1860 87.3470  c
71.2553 86.8270 71.3116 86.3070 71.3550 85.7870  c
69.8860 85.7870 l
69.7993 86.7576 69.7126 87.5766 69.6260 88.2440  c
69.5393 88.9113 69.4483 89.5093 69.3530 90.0380  c
69.3270 90.1766 69.3010 90.3066 69.2750 90.4280  c
69.2490 90.5493 69.2143 90.6533 69.1710 90.7400  c
69.0756 90.9393 68.9586 91.0736 68.8200 91.1430  c
68.6813 91.2123 68.5513 91.2470 68.4300 91.2470  c
68.2306 91.2470 68.0660 91.1755 67.9360 91.0325  c
67.8060 90.8895 67.7410 90.7356 67.7410 90.5710  c
67.7410 90.3890 67.7886 90.2373 67.8840 90.1160  c
67.9793 89.9946 68.0876 89.8603 68.2090 89.7130  c
68.3216 89.5830 68.4278 89.4465 68.5275 89.3035  c
68.6271 89.1605 68.6900 88.9806 68.7160 88.7640  c
69.0930 85.7870 l
68.4820 85.7870 l
68.3433 85.7870 68.1916 85.8216 68.0270 85.8910  c
67.8623 85.9603 67.7236 86.0730 67.6110 86.2290  c
67.3510 86.6060 l
67.1300 86.6060 l
67.3206 85.9993 67.5590 85.5248 67.8450 85.1825  c
68.1310 84.8401 68.5080 84.6690 68.9760 84.6690  c
73.7860 84.6690 l
73.7860 85.7870 l
72.1480 85.7870 l
72.1220 86.0383 72.0981 86.3026 72.0765 86.5800  c
72.0548 86.8573 72.0375 87.1325 72.0245 87.4055  c
72.0115 87.6785 72.0028 87.9363 71.9985 88.1790  c
71.9941 88.4216 71.9920 88.6296 71.9920 88.8030  c
71.9920 88.9503 72.0071 89.0955 72.0375 89.2385  c
72.0678 89.3815 72.1176 89.5093 72.1870 89.6220  c
72.2563 89.7346 72.3451 89.8278 72.4535 89.9015  c
72.5618 89.9751 72.6940 90.0120 72.8500 90.0120  c
72.9453 90.0120 73.0580 89.9773 73.1880 89.9080  c
73.3180 89.8386 73.4220 89.7260 73.5000 89.5700  c
73.5346 89.5006 73.5585 89.4205 73.5715 89.3295  c
73.5845 89.2385 73.5953 89.1410 73.6040 89.0370  c
h
f
newpath
68.0493 104.826 m
68.0493 105.727 l
66.8940 105.727 l
66.8940 108.000 l
65.8466 108.000 l
65.8466 105.727 l
62.2031 105.727 l
62.2031 104.915 l
66.1958 99.2148 l
66.8940 99.2148 l
66.8940 104.826 l
h
65.8466 104.826 m
65.8466 100.554 l
62.8252 104.826 l
h
f
2 J
0 j
newpath
55.5000 95.5000 m
76.5000 95.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
103.000 67.0000 m
103.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
96 88 7 13 rc
newpath
106.790 95.4380 m
98.2100 95.4380 l
98.2100 94.7620 l
106.790 94.7620 l
h
f
Q
newpath
115.890 89.0370 m
115.890 89.2883 115.855 89.5440 115.786 89.8040  c
115.716 90.0640 115.617 90.2980 115.487 90.5060  c
115.357 90.7140 115.194 90.8830 114.999 91.0130  c
114.804 91.1430 114.581 91.2080 114.330 91.2080  c
114.087 91.2080 113.866 91.1040 113.667 90.8960  c
113.467 90.6880 113.307 90.3760 113.186 89.9600  c
113.168 89.8993 113.153 89.8213 113.140 89.7260  c
113.127 89.6306 113.116 89.5310 113.108 89.4270  c
113.099 89.3230 113.092 89.2211 113.088 89.1215  c
113.084 89.0218 113.082 88.9373 113.082 88.8680  c
113.082 88.3740 113.116 87.8670 113.186 87.3470  c
113.255 86.8270 113.311 86.3070 113.355 85.7870  c
111.886 85.7870 l
111.799 86.7576 111.712 87.5766 111.626 88.2440  c
111.539 88.9113 111.448 89.5093 111.353 90.0380  c
111.327 90.1766 111.301 90.3066 111.275 90.4280  c
111.249 90.5493 111.214 90.6533 111.171 90.7400  c
111.075 90.9393 110.958 91.0736 110.820 91.1430  c
110.681 91.2123 110.551 91.2470 110.430 91.2470  c
110.230 91.2470 110.066 91.1755 109.936 91.0325  c
109.806 90.8895 109.741 90.7356 109.741 90.5710  c
109.741 90.3890 109.788 90.2373 109.884 90.1160  c
109.979 89.9946 110.087 89.8603 110.209 89.7130  c
110.321 89.5830 110.427 89.4465 110.527 89.3035  c
110.627 89.1605 110.690 88.9806 110.716 88.7640  c
111.093 85.7870 l
110.482 85.7870 l
110.343 85.7870 110.191 85.8216 110.027 85.8910  c
109.862 85.9603 109.723 86.0730 109.611 86.2290  c
109.351 86.6060 l
109.130 86.6060 l
109.320 85.9993 109.559 85.5248 109.845 85.1825  c
110.131 84.8401 110.508 84.6690 110.976 84.6690  c
115.786 84.6690 l
115.786 85.7870 l
114.148 85.7870 l
114.122 86.0383 114.098 86.3026 114.076 86.5800  c
114.054 86.8573 114.037 87.1325 114.024 87.4055  c
114.011 87.6785 114.002 87.9363 113.998 88.1790  c
113.994 88.4216 113.992 88.6296 113.992 88.8030  c
113.992 88.9503 114.007 89.0955 114.037 89.2385  c
114.067 89.3815 114.117 89.5093 114.187 89.6220  c
114.256 89.7346 114.345 89.8278 114.453 89.9015  c
114.561 89.9751 114.694 90.0120 114.850 90.0120  c
114.945 90.0120 115.058 89.9773 115.188 89.9080  c
115.318 89.8386 115.422 89.7260 115.500 89.5700  c
115.534 89.5006 115.558 89.4205 115.571 89.3295  c
115.584 89.2385 115.595 89.1410 115.604 89.0370  c
h
f
newpath
114.960 106.343 m
114.357 108.000 l
109.279 108.000 l
109.279 107.765 l
110.773 106.402 111.824 105.289 112.434 104.426  c
113.043 103.563 113.348 102.773 113.348 102.058  c
113.348 101.512 113.181 101.064 112.846 100.712  c
112.512 100.361 112.112 100.186 111.647 100.186  c
111.223 100.186 110.844 100.309 110.507 100.557  c
110.171 100.804 109.922 101.167 109.761 101.646  c
109.526 101.646 l
109.632 100.863 109.904 100.262 110.342 99.8432  c
110.780 99.4243 111.327 99.2148 111.983 99.2148  c
112.681 99.2148 113.264 99.4391 113.732 99.8877  c
114.199 100.336 114.433 100.865 114.433 101.474  c
114.433 101.910 114.332 102.346 114.128 102.782  c
113.815 103.467 113.307 104.193 112.605 104.959  c
111.551 106.110 110.893 106.804 110.631 107.041  c
112.878 107.041 l
113.335 107.041 113.656 107.024 113.840 106.990  c
114.024 106.956 114.190 106.888 114.338 106.784  c
114.486 106.680 114.615 106.533 114.725 106.343  c
h
f
2 J
0 j
newpath
107.500 95.5000 m
118.500 95.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
150.000 67.0000 m
150.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
143 88 7 13 rc
newpath
153.790 95.4380 m
145.210 95.4380 l
145.210 94.7620 l
153.790 94.7620 l
h
f
Q
newpath
162.890 89.0370 m
162.890 89.2883 162.855 89.5440 162.786 89.8040  c
162.716 90.0640 162.617 90.2980 162.487 90.5060  c
162.357 90.7140 162.194 90.8830 161.999 91.0130  c
161.804 91.1430 161.581 91.2080 161.330 91.2080  c
161.087 91.2080 160.866 91.1040 160.667 90.8960  c
160.467 90.6880 160.307 90.3760 160.186 89.9600  c
160.168 89.8993 160.153 89.8213 160.140 89.7260  c
160.127 89.6306 160.116 89.5310 160.108 89.4270  c
160.099 89.3230 160.092 89.2211 160.088 89.1215  c
160.084 89.0218 160.082 88.9373 160.082 88.8680  c
160.082 88.3740 160.116 87.8670 160.186 87.3470  c
160.255 86.8270 160.311 86.3070 160.355 85.7870  c
158.886 85.7870 l
158.799 86.7576 158.712 87.5766 158.626 88.2440  c
158.539 88.9113 158.448 89.5093 158.353 90.0380  c
158.327 90.1766 158.301 90.3066 158.275 90.4280  c
158.249 90.5493 158.214 90.6533 158.171 90.7400  c
158.075 90.9393 157.958 91.0736 157.820 91.1430  c
157.681 91.2123 157.551 91.2470 157.430 91.2470  c
157.230 91.2470 157.066 91.1755 156.936 91.0325  c
156.806 90.8895 156.741 90.7356 156.741 90.5710  c
156.741 90.3890 156.788 90.2373 156.884 90.1160  c
156.979 89.9946 157.087 89.8603 157.209 89.7130  c
157.321 89.5830 157.427 89.4465 157.527 89.3035  c
157.627 89.1605 157.690 88.9806 157.716 88.7640  c
158.093 85.7870 l
157.482 85.7870 l
157.343 85.7870 157.191 85.8216 157.027 85.8910  c
156.862 85.9603 156.723 86.0730 156.611 86.2290  c
156.351 86.6060 l
156.130 86.6060 l
156.320 85.9993 156.559 85.5248 156.845 85.1825  c
157.131 84.8401 157.508 84.6690 157.976 84.6690  c
162.786 84.6690 l
162.786 85.7870 l
161.148 85.7870 l
161.122 86.0383 161.098 86.3026 161.076 86.5800  c
161.054 86.8573 161.037 87.1325 161.024 87.4055  c
161.011 87.6785 161.002 87.9363 160.998 88.1790  c
160.994 88.4216 160.992 88.6296 160.992 88.8030  c
160.992 88.9503 161.007 89.0955 161.037 89.2385  c
161.067 89.3815 161.117 89.5093 161.187 89.6220  c
161.256 89.7346 161.345 89.8278 161.453 89.9015  c
161.561 89.9751 161.694 90.0120 161.850 90.0120  c
161.945 90.0120 162.058 89.9773 162.188 89.9080  c
162.318 89.8386 162.422 89.7260 162.500 89.5700  c
162.534 89.5006 162.558 89.4205 162.571 89.3295  c
162.584 89.2385 162.595 89.1410 162.604 89.0370  c
h
f
newpath
162.049 104.826 m
162.049 105.727 l
160.894 105.727 l
160.894 108.000 l
159.846 108.000 l
159.846 105.727 l
156.203 105.727 l
156.203 104.915 l
160.195 99.2148 l
160.894 99.2148 l
160.894 104.826 l
h
159.846 104.826 m
159.846 100.554 l
156.825 104.826 l
h
f
2 J
0 j
newpath
154.500 95.5000 m
165.500 95.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 67.0000 m
197.000 71.0000 l
S
Q
q
0 J
1 j
newpath
244.000 67.0000 m
244.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
252.890 89.0370 m
252.890 89.2883 252.855 89.5440 252.786 89.8040  c
252.716 90.0640 252.617 90.2980 252.487 90.5060  c
252.357 90.7140 252.194 90.8830 251.999 91.0130  c
251.804 91.1430 251.581 91.2080 251.330 91.2080  c
251.087 91.2080 250.866 91.1040 250.667 90.8960  c
250.467 90.6880 250.307 90.3760 250.186 89.9600  c
250.168 89.8993 250.153 89.8213 250.140 89.7260  c
250.127 89.6306 250.116 89.5310 250.108 89.4270  c
250.099 89.3230 250.092 89.2211 250.088 89.1215  c
250.084 89.0218 250.082 88.9373 250.082 88.8680  c
250.082 88.3740 250.116 87.8670 250.186 87.3470  c
250.255 86.8270 250.311 86.3070 250.355 85.7870  c
248.886 85.7870 l
248.799 86.7576 248.712 87.5766 248.626 88.2440  c
248.539 88.9113 248.448 89.5093 248.353 90.0380  c
248.327 90.1766 248.301 90.3066 248.275 90.4280  c
248.249 90.5493 248.214 90.6533 248.171 90.7400  c
248.075 90.9393 247.958 91.0736 247.820 91.1430  c
247.681 91.2123 247.551 91.2470 247.430 91.2470  c
247.230 91.2470 247.066 91.1755 246.936 91.0325  c
246.806 90.8895 246.741 90.7356 246.741 90.5710  c
246.741 90.3890 246.788 90.2373 246.884 90.1160  c
246.979 89.9946 247.087 89.8603 247.209 89.7130  c
247.321 89.5830 247.427 89.4465 247.527 89.3035  c
247.627 89.1605 247.690 88.9806 247.716 88.7640  c
248.093 85.7870 l
247.482 85.7870 l
247.343 85.7870 247.191 85.8216 247.027 85.8910  c
246.862 85.9603 246.723 86.0730 246.611 86.2290  c
246.351 86.6060 l
246.130 86.6060 l
246.320 85.9993 246.559 85.5248 246.845 85.1825  c
247.131 84.8401 247.508 84.6690 247.976 84.6690  c
252.786 84.6690 l
252.786 85.7870 l
251.148 85.7870 l
251.122 86.0383 251.098 86.3026 251.076 86.5800  c
251.054 86.8573 251.037 87.1325 251.024 87.4055  c
251.011 87.6785 251.002 87.9363 250.998 88.1790  c
250.994 88.4216 250.992 88.6296 250.992 88.8030  c
250.992 88.9503 251.007 89.0955 251.037 89.2385  c
251.067 89.3815 251.117 89.5093 251.187 89.6220  c
251.256 89.7346 251.345 89.8278 251.453 89.9015  c
251.561 89.9751 251.694 90.0120 251.850 90.0120  c
251.945 90.0120 252.058 89.9773 252.188 89.9080  c
252.318 89.8386 252.422 89.7260 252.500 89.5700  c
252.534 89.5006 252.558 89.4205 252.571 89.3295  c
252.584 89.2385 252.595 89.1410 252.604 89.0370  c
h
f
newpath
252.049 104.826 m
252.049 105.727 l
250.894 105.727 l
250.894 108.000 l
249.846 108.000 l
249.846 105.727 l
246.203 105.727 l
246.203 104.915 l
250.195 99.2148 l
250.894 99.2148 l
250.894 104.826 l
h
249.846 104.826 m
249.846 100.554 l
246.825 104.826 l
h
f
2 J
0 j
newpath
244.500 95.5000 m
255.500 95.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
291.000 67.0000 m
291.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
299.890 89.0370 m
299.890 89.2883 299.855 89.5440 299.786 89.8040  c
299.716 90.0640 299.617 90.2980 299.487 90.5060  c
299.357 90.7140 299.194 90.8830 298.999 91.0130  c
298.804 91.1430 298.581 91.2080 298.330 91.2080  c
298.087 91.2080 297.866 91.1040 297.667 90.8960  c
297.467 90.6880 297.307 90.3760 297.186 89.9600  c
297.168 89.8993 297.153 89.8213 297.140 89.7260  c
297.127 89.6306 297.116 89.5310 297.108 89.4270  c
297.099 89.3230 297.092 89.2211 297.088 89.1215  c
297.084 89.0218 297.082 88.9373 297.082 88.8680  c
297.082 88.3740 297.116 87.8670 297.186 87.3470  c
297.255 86.8270 297.311 86.3070 297.355 85.7870  c
295.886 85.7870 l
295.799 86.7576 295.712 87.5766 295.626 88.2440  c
295.539 88.9113 295.448 89.5093 295.353 90.0380  c
295.327 90.1766 295.301 90.3066 295.275 90.4280  c
295.249 90.5493 295.214 90.6533 295.171 90.7400  c
295.075 90.9393 294.958 91.0736 294.820 91.1430  c
294.681 91.2123 294.551 91.2470 294.430 91.2470  c
294.230 91.2470 294.066 91.1755 293.936 91.0325  c
293.806 90.8895 293.741 90.7356 293.741 90.5710  c
293.741 90.3890 293.788 90.2373 293.884 90.1160  c
293.979 89.9946 294.087 89.8603 294.209 89.7130  c
294.321 89.5830 294.427 89.4465 294.527 89.3035  c
294.627 89.1605 294.690 88.9806 294.716 88.7640  c
295.093 85.7870 l
294.482 85.7870 l
294.343 85.7870 294.191 85.8216 294.027 85.8910  c
293.862 85.9603 293.723 86.0730 293.611 86.2290  c
293.351 86.6060 l
293.130 86.6060 l
293.320 85.9993 293.559 85.5248 293.845 85.1825  c
294.131 84.8401 294.508 84.6690 294.976 84.6690  c
299.786 84.6690 l
299.786 85.7870 l
298.148 85.7870 l
298.122 86.0383 298.098 86.3026 298.076 86.5800  c
298.054 86.8573 298.037 87.1325 298.024 87.4055  c
298.011 87.6785 298.002 87.9363 297.998 88.1790  c
297.994 88.4216 297.992 88.6296 297.992 88.8030  c
297.992 88.9503 298.007 89.0955 298.037 89.2385  c
298.067 89.3815 298.117 89.5093 298.187 89.6220  c
298.256 89.7346 298.345 89.8278 298.453 89.9015  c
298.561 89.9751 298.694 90.0120 298.850 90.0120  c
298.945 90.0120 299.058 89.9773 299.188 89.9080  c
299.318 89.8386 299.422 89.7260 299.500 89.5700  c
299.534 89.5006 299.558 89.4205 299.571 89.3295  c
299.584 89.2385 299.595 89.1410 299.604 89.0370  c
h
f
newpath
298.960 106.343 m
298.357 108.000 l
293.279 108.000 l
293.279 107.765 l
294.773 106.402 295.824 105.289 296.434 104.426  c
297.043 103.563 297.348 102.773 297.348 102.058  c
297.348 101.512 297.181 101.064 296.846 100.712  c
296.512 100.361 296.112 100.186 295.647 100.186  c
295.223 100.186 294.844 100.309 294.507 100.557  c
294.171 100.804 293.922 101.167 293.761 101.646  c
293.526 101.646 l
293.632 100.863 293.904 100.262 294.342 99.8432  c
294.780 99.4243 295.327 99.2148 295.983 99.2148  c
296.681 99.2148 297.264 99.4391 297.732 99.8877  c
298.199 100.336 298.433 100.865 298.433 101.474  c
298.433 101.910 298.332 102.346 298.128 102.782  c
297.815 103.467 297.307 104.193 296.605 104.959  c
295.551 106.110 294.893 106.804 294.631 107.041  c
296.878 107.041 l
297.335 107.041 297.656 107.024 297.840 106.990  c
298.024 106.956 298.190 106.888 298.338 106.784  c
298.486 106.680 298.615 106.533 298.725 106.343  c
h
f
2 J
0 j
newpath
291.500 95.5000 m
302.500 95.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
338.000 67.0000 m
338.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
335.660 84.0302 m
335.905 83.4505 336.215 83.0030 336.590 82.6877  c
336.964 82.3724 337.431 82.2148 337.989 82.2148  c
338.679 82.2148 339.208 82.4391 339.576 82.8877  c
339.856 83.2220 339.995 83.5795 339.995 83.9604  c
339.995 84.5867 339.602 85.2342 338.814 85.9028  c
339.343 86.1101 339.743 86.4064 340.014 86.7915  c
340.285 87.1766 340.420 87.6293 340.420 88.1499  c
340.420 88.8946 340.183 89.5400 339.710 90.0859  c
339.092 90.7968 338.197 91.1523 337.024 91.1523  c
336.445 91.1523 336.050 91.0804 335.841 90.9365  c
335.631 90.7926 335.526 90.6381 335.526 90.4731  c
335.526 90.3504 335.576 90.2425 335.676 90.1494  c
335.775 90.0563 335.895 90.0097 336.034 90.0097  c
336.140 90.0097 336.248 90.0266 336.358 90.0605  c
336.430 90.0817 336.593 90.1589 336.847 90.2922  c
337.101 90.4255 337.276 90.5048 337.374 90.5302  c
337.530 90.5768 337.697 90.6001 337.875 90.6001  c
338.307 90.6001 338.682 90.4329 339.002 90.0986  c
339.321 89.7643 339.481 89.3686 339.481 88.9116  c
339.481 88.5773 339.407 88.2514 339.259 87.9340  c
339.149 87.6971 339.028 87.5172 338.897 87.3945  c
338.715 87.2252 338.465 87.0718 338.148 86.9343  c
337.831 86.7967 337.507 86.7280 337.177 86.7280  c
336.974 86.7280 l
336.974 86.5376 l
337.308 86.4952 337.643 86.3746 337.980 86.1757  c
338.316 85.9768 338.561 85.7377 338.713 85.4585  c
338.865 85.1792 338.941 84.8724 338.941 84.5380  c
338.941 84.1022 338.805 83.7499 338.532 83.4812  c
338.259 83.2124 337.919 83.0781 337.513 83.0781  c
336.857 83.0781 336.309 83.4293 335.869 84.1318  c
h
f
newpath
f
newpath
351.890 89.0370 m
351.890 89.2883 351.855 89.5440 351.786 89.8040  c
351.716 90.0640 351.617 90.2980 351.487 90.5060  c
351.357 90.7140 351.194 90.8830 350.999 91.0130  c
350.804 91.1430 350.581 91.2080 350.330 91.2080  c
350.087 91.2080 349.866 91.1040 349.667 90.8960  c
349.467 90.6880 349.307 90.3760 349.186 89.9600  c
349.168 89.8993 349.153 89.8213 349.140 89.7260  c
349.127 89.6306 349.116 89.5310 349.108 89.4270  c
349.099 89.3230 349.092 89.2211 349.088 89.1215  c
349.084 89.0218 349.082 88.9373 349.082 88.8680  c
349.082 88.3740 349.116 87.8670 349.186 87.3470  c
349.255 86.8270 349.311 86.3070 349.355 85.7870  c
347.886 85.7870 l
347.799 86.7576 347.712 87.5766 347.626 88.2440  c
347.539 88.9113 347.448 89.5093 347.353 90.0380  c
347.327 90.1766 347.301 90.3066 347.275 90.4280  c
347.249 90.5493 347.214 90.6533 347.171 90.7400  c
347.075 90.9393 346.958 91.0736 346.820 91.1430  c
346.681 91.2123 346.551 91.2470 346.430 91.2470  c
346.230 91.2470 346.066 91.1755 345.936 91.0325  c
345.806 90.8895 345.741 90.7356 345.741 90.5710  c
345.741 90.3890 345.788 90.2373 345.884 90.1160  c
345.979 89.9946 346.087 89.8603 346.209 89.7130  c
346.321 89.5830 346.427 89.4465 346.527 89.3035  c
346.627 89.1605 346.690 88.9806 346.716 88.7640  c
347.093 85.7870 l
346.482 85.7870 l
346.343 85.7870 346.191 85.8216 346.027 85.8910  c
345.862 85.9603 345.723 86.0730 345.611 86.2290  c
345.351 86.6060 l
345.130 86.6060 l
345.320 85.9993 345.559 85.5248 345.845 85.1825  c
346.131 84.8401 346.508 84.6690 346.976 84.6690  c
351.786 84.6690 l
351.786 85.7870 l
350.148 85.7870 l
350.122 86.0383 350.098 86.3026 350.076 86.5800  c
350.054 86.8573 350.037 87.1325 350.024 87.4055  c
350.011 87.6785 350.002 87.9363 349.998 88.1790  c
349.994 88.4216 349.992 88.6296 349.992 88.8030  c
349.992 88.9503 350.007 89.0955 350.037 89.2385  c
350.067 89.3815 350.117 89.5093 350.187 89.6220  c
350.256 89.7346 350.345 89.8278 350.453 89.9015  c
350.561 89.9751 350.694 90.0120 350.850 90.0120  c
350.945 90.0120 351.058 89.9773 351.188 89.9080  c
351.318 89.8386 351.422 89.7260 351.500 89.5700  c
351.534 89.5006 351.558 89.4205 351.571 89.3295  c
351.584 89.2385 351.595 89.1410 351.604 89.0370  c
h
f
newpath
346.049 104.826 m
346.049 105.727 l
344.894 105.727 l
344.894 108.000 l
343.846 108.000 l
343.846 105.727 l
340.203 105.727 l
340.203 104.915 l
344.195 99.2148 l
344.894 99.2148 l
344.894 104.826 l
h
343.846 104.826 m
343.846 100.554 l
340.825 104.826 l
h
f
2 J
0 j
newpath
333.500 95.5000 m
354.500 95.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
385.000 67.0000 m
385.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.890 89.0370 m
393.890 89.2883 393.855 89.5440 393.786 89.8040  c
393.716 90.0640 393.617 90.2980 393.487 90.5060  c
393.357 90.7140 393.194 90.8830 392.999 91.0130  c
392.804 91.1430 392.581 91.2080 392.330 91.2080  c
392.087 91.2080 391.866 91.1040 391.667 90.8960  c
391.467 90.6880 391.307 90.3760 391.186 89.9600  c
391.168 89.8993 391.153 89.8213 391.140 89.7260  c
391.127 89.6306 391.116 89.5310 391.108 89.4270  c
391.099 89.3230 391.092 89.2211 391.088 89.1215  c
391.084 89.0218 391.082 88.9373 391.082 88.8680  c
391.082 88.3740 391.116 87.8670 391.186 87.3470  c
391.255 86.8270 391.311 86.3070 391.355 85.7870  c
389.886 85.7870 l
389.799 86.7576 389.712 87.5766 389.626 88.2440  c
389.539 88.9113 389.448 89.5093 389.353 90.0380  c
389.327 90.1766 389.301 90.3066 389.275 90.4280  c
389.249 90.5493 389.214 90.6533 389.171 90.7400  c
389.075 90.9393 388.958 91.0736 388.820 91.1430  c
388.681 91.2123 388.551 91.2470 388.430 91.2470  c
388.230 91.2470 388.066 91.1755 387.936 91.0325  c
387.806 90.8895 387.741 90.7356 387.741 90.5710  c
387.741 90.3890 387.788 90.2373 387.884 90.1160  c
387.979 89.9946 388.087 89.8603 388.209 89.7130  c
388.321 89.5830 388.427 89.4465 388.527 89.3035  c
388.627 89.1605 388.690 88.9806 388.716 88.7640  c
389.093 85.7870 l
388.482 85.7870 l
388.343 85.7870 388.191 85.8216 388.027 85.8910  c
387.862 85.9603 387.723 86.0730 387.611 86.2290  c
387.351 86.6060 l
387.130 86.6060 l
387.320 85.9993 387.559 85.5248 387.845 85.1825  c
388.131 84.8401 388.508 84.6690 388.976 84.6690  c
393.786 84.6690 l
393.786 85.7870 l
392.148 85.7870 l
392.122 86.0383 392.098 86.3026 392.076 86.5800  c
392.054 86.8573 392.037 87.1325 392.024 87.4055  c
392.011 87.6785 392.002 87.9363 391.998 88.1790  c
391.994 88.4216 391.992 88.6296 391.992 88.8030  c
391.992 88.9503 392.007 89.0955 392.037 89.2385  c
392.067 89.3815 392.117 89.5093 392.187 89.6220  c
392.256 89.7346 392.345 89.8278 392.453 89.9015  c
392.561 89.9751 392.694 90.0120 392.850 90.0120  c
392.945 90.0120 393.058 89.9773 393.188 89.9080  c
393.318 89.8386 393.422 89.7260 393.500 89.5700  c
393.534 89.5006 393.558 89.4205 393.571 89.3295  c
393.584 89.2385 393.595 89.1410 393.604 89.0370  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 67.0000 m
21.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
33.0000 67.0000 m
33.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
44.0000 67.0000 m
44.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
68.0000 67.0000 m
68.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
80.0000 67.0000 m
80.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
91.0000 67.0000 m
91.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
115.000 67.0000 m
115.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
127.000 67.0000 m
127.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
138.000 67.0000 m
138.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
162.000 67.0000 m
162.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
174.000 67.0000 m
174.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
185.000 67.0000 m
185.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
209.000 67.0000 m
209.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
221.000 67.0000 m
221.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
233.000 67.0000 m
233.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
256.000 67.0000 m
256.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
268.000 67.0000 m
268.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
280.000 67.0000 m
280.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
303.000 67.0000 m
303.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
315.000 67.0000 m
315.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
327.000 67.0000 m
327.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
350.000 67.0000 m
350.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
362.000 67.0000 m
362.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
374.000 67.0000 m
374.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.000 126.500 m
197.000 8.05402 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
154 30 8 15 rc
Q
cliprestore
newpath
0 0 m
0 135.000 l
390.000 135.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
197.000 127.000 m
193.000 127.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
180 125 7 13 rc
newpath
190.790 132.438 m
182.210 132.438 l
182.210 131.762 l
190.790 131.762 l
h
f
Q
newpath
190.523 128.236 m
192.618 127.214 l
192.827 127.214 l
192.827 134.482 l
192.827 134.965 192.847 135.265 192.887 135.384  c
192.928 135.502 193.011 135.593 193.138 135.657  c
193.265 135.720 193.523 135.756 193.913 135.765  c
193.913 136.000 l
190.675 136.000 l
190.675 135.765 l
191.082 135.756 191.344 135.721 191.462 135.660  c
191.581 135.599 191.663 135.516 191.710 135.412  c
191.757 135.309 191.780 134.999 191.780 134.482  c
191.780 129.836 l
191.780 129.210 191.759 128.808 191.716 128.630  c
191.687 128.495 191.633 128.395 191.554 128.332  c
191.476 128.268 191.382 128.236 191.272 128.236  c
191.115 128.236 190.897 128.302 190.618 128.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 97.0000 m
193.000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
170 95 7 13 rc
newpath
180.790 102.438 m
172.210 102.438 l
172.210 101.762 l
180.790 101.762 l
h
f
Q
newpath
179.469 101.747 m
179.469 100.765 179.617 99.9200 179.914 99.2111  c
180.210 98.5023 180.603 97.9744 181.094 97.6274  c
181.475 97.3523 181.869 97.2148 182.275 97.2148  c
182.935 97.2148 183.528 97.5512 184.052 98.2241  c
184.708 99.0577 185.036 100.187 185.036 101.613  c
185.036 102.612 184.892 103.460 184.605 104.159  c
184.317 104.857 183.950 105.364 183.503 105.679  c
183.057 105.994 182.626 106.152 182.211 106.152  c
181.391 106.152 180.707 105.667 180.161 104.698  c
179.700 103.882 179.469 102.898 179.469 101.747  c
h
180.713 101.905 m
180.713 103.090 180.859 104.057 181.151 104.806  c
181.393 105.437 181.752 105.752 182.231 105.752  c
182.459 105.752 182.696 105.649 182.941 105.444  c
183.187 105.239 183.373 104.895 183.500 104.413  c
183.695 103.685 183.792 102.659 183.792 101.334  c
183.792 100.352 183.690 99.5338 183.487 98.8779  c
183.335 98.3912 183.138 98.0463 182.897 97.8432  c
182.724 97.7036 182.514 97.6337 182.269 97.6337  c
181.981 97.6337 181.725 97.7628 181.501 98.0210  c
181.196 98.3722 180.988 98.9244 180.878 99.6777  c
180.768 100.431 180.713 101.173 180.713 101.905  c
h
187.625 104.768 m
187.823 104.768 187.991 104.837 188.126 104.974  c
188.261 105.112 188.329 105.278 188.329 105.473  c
188.329 105.667 188.260 105.833 188.123 105.971  c
187.985 106.109 187.819 106.177 187.625 106.177  c
187.430 106.177 187.264 106.109 187.126 105.971  c
186.989 105.833 186.920 105.667 186.920 105.473  c
186.920 105.274 186.989 105.107 187.126 104.971  c
187.264 104.836 187.430 104.768 187.625 104.768  c
h
194.643 97.3925 m
194.147 98.4716 l
191.558 98.4716 l
190.993 99.6269 l
192.114 99.7919 193.003 100.208 193.659 100.877  c
194.222 101.453 194.503 102.130 194.503 102.908  c
194.503 103.361 194.411 103.780 194.227 104.165  c
194.043 104.550 193.811 104.878 193.532 105.149  c
193.252 105.420 192.941 105.638 192.599 105.803  c
192.112 106.036 191.613 106.152 191.101 106.152  c
190.584 106.152 190.209 106.064 189.974 105.888  c
189.739 105.713 189.622 105.519 189.622 105.308  c
189.622 105.189 189.670 105.084 189.768 104.993  c
189.865 104.902 189.988 104.857 190.136 104.857  c
190.246 104.857 190.342 104.874 190.425 104.908  c
190.507 104.942 190.648 105.028 190.847 105.168  c
191.164 105.388 191.486 105.498 191.812 105.498  c
192.307 105.498 192.741 105.311 193.116 104.936  c
193.491 104.562 193.678 104.106 193.678 103.568  c
193.678 103.048 193.511 102.562 193.176 102.112  c
192.842 101.661 192.381 101.313 191.793 101.067  c
191.331 100.877 190.703 100.767 189.907 100.737  c
191.558 97.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 67.0000 m
193.000 67.0000 l
S
Q
q
0 J
1 j
newpath
197.000 38.0000 m
193.000 38.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
179.469 42.7470 m
179.469 41.7653 179.617 40.9200 179.914 40.2111  c
180.210 39.5023 180.603 38.9744 181.094 38.6274  c
181.475 38.3523 181.869 38.2148 182.275 38.2148  c
182.935 38.2148 183.528 38.5512 184.052 39.2241  c
184.708 40.0577 185.036 41.1876 185.036 42.6137  c
185.036 43.6124 184.892 44.4609 184.605 45.1591  c
184.317 45.8574 183.950 46.3641 183.503 46.6794  c
183.057 46.9947 182.626 47.1523 182.211 47.1523  c
181.391 47.1523 180.707 46.6678 180.161 45.6987  c
179.700 44.8820 179.469 43.8981 179.469 42.7470  c
h
180.713 42.9057 m
180.713 44.0906 180.859 45.0576 181.151 45.8066  c
181.393 46.4371 181.752 46.7524 182.231 46.7524  c
182.459 46.7524 182.696 46.6498 182.941 46.4445  c
183.187 46.2393 183.373 45.8955 183.500 45.4130  c
183.695 44.6852 183.792 43.6590 183.792 42.3344  c
183.792 41.3527 183.690 40.5338 183.487 39.8779  c
183.335 39.3912 183.138 39.0463 182.897 38.8432  c
182.724 38.7036 182.514 38.6337 182.269 38.6337  c
181.981 38.6337 181.725 38.7628 181.501 39.0210  c
181.196 39.3722 180.988 39.9244 180.878 40.6777  c
180.768 41.4309 180.713 42.1736 180.713 42.9057  c
h
187.625 45.7685 m
187.823 45.7685 187.991 45.8373 188.126 45.9748  c
188.261 46.1123 188.329 46.2784 188.329 46.4731  c
188.329 46.6678 188.260 46.8339 188.123 46.9714  c
187.985 47.1089 187.819 47.1777 187.625 47.1777  c
187.430 47.1777 187.264 47.1089 187.126 46.9714  c
186.989 46.8339 186.920 46.6678 186.920 46.4731  c
186.920 46.2742 186.989 46.1071 187.126 45.9716  c
187.264 45.8362 187.430 45.7685 187.625 45.7685  c
h
194.643 38.3925 m
194.147 39.4716 l
191.558 39.4716 l
190.993 40.6269 l
192.114 40.7919 193.003 41.2088 193.659 41.8774  c
194.222 42.4529 194.503 43.1300 194.503 43.9086  c
194.503 44.3614 194.411 44.7804 194.227 45.1655  c
194.043 45.5506 193.811 45.8785 193.532 46.1494  c
193.252 46.4202 192.941 46.6381 192.599 46.8032  c
192.112 47.0359 191.613 47.1523 191.101 47.1523  c
190.584 47.1523 190.209 47.0645 189.974 46.8889  c
189.739 46.7133 189.622 46.5196 189.622 46.3081  c
189.622 46.1896 189.670 46.0848 189.768 45.9939  c
189.865 45.9029 189.988 45.8574 190.136 45.8574  c
190.246 45.8574 190.342 45.8743 190.425 45.9082  c
190.507 45.9420 190.648 46.0288 190.847 46.1684  c
191.164 46.3885 191.486 46.4985 191.812 46.4985  c
192.307 46.4985 192.741 46.3112 193.116 45.9367  c
193.491 45.5622 193.678 45.1062 193.678 44.5688  c
193.678 44.0483 193.511 43.5627 193.176 43.1120  c
192.842 42.6613 192.381 42.3133 191.793 42.0678  c
191.331 41.8774 190.703 41.7674 189.907 41.7377  c
191.558 38.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 8.00000 m
193.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.523 10.2368 m
192.618 9.21484 l
192.827 9.21484 l
192.827 16.4829 l
192.827 16.9653 192.847 17.2657 192.887 17.3842  c
192.928 17.5027 193.011 17.5937 193.138 17.6572  c
193.265 17.7207 193.523 17.7566 193.913 17.7651  c
193.913 18.0000 l
190.675 18.0000 l
190.675 17.7651 l
191.082 17.7566 191.344 17.7217 191.462 17.6604  c
191.581 17.5990 191.663 17.5165 191.710 17.4128  c
191.757 17.3091 191.780 16.9991 191.780 16.4829  c
191.780 11.8364 l
191.780 11.2101 191.759 10.8081 191.716 10.6303  c
191.687 10.4949 191.633 10.3955 191.554 10.3320  c
191.476 10.2685 191.382 10.2368 191.272 10.2368  c
191.115 10.2368 190.897 10.3024 190.618 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 121.000 m
195.000 121.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 115.000 m
195.000 115.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 109.000 m
195.000 109.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 103.000 m
195.000 103.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 91.0000 m
195.000 91.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 85.0000 m
195.000 85.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 79.0000 m
195.000 79.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 73.0000 m
195.000 73.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 61.0000 m
195.000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 55.0000 m
195.000 55.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 50.0000 m
195.000 50.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 44.0000 m
195.000 44.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 32.0000 m
195.000 32.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 26.0000 m
195.000 26.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 20.0000 m
195.000 20.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.000 14.0000 m
195.000 14.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 145 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
