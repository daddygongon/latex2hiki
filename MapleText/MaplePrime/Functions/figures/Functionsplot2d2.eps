%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N6ŒŽ1“ú 9Žž16•ª11•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
232 232 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
232.000 0 l
232.000 232.000 l
0 232.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 222 222 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
55.9271 1.13090 110.145 218.291 rc
newpath
65.8804 238.288 m
68.1699 210.927 l
70.2925 193.689 l
72.4904 180.578 l
74.7635 170.210 l
77.0293 162.017 l
79.3599 155.132 l
81.4127 150.007 l
83.7237 145.020 l
86.0442 140.651 l
88.2804 136.905 l
90.3111 133.815 l
92.7258 130.447 l
94.7713 127.803 l
97.1508 124.917 l
99.2570 122.499 l
101.568 119.961 l
103.768 117.628 l
106.064 115.258 l
108.172 113.118 l
112.809 108.452 l
114.865 106.366 l
117.086 104.075 l
119.381 101.646 l
121.625 99.1847 l
123.797 96.6960 l
126.209 93.7744 l
128.375 90.9693 l
130.689 87.7366 l
132.785 84.5421 l
135.077 80.6854 l
137.234 76.6165 l
139.488 71.7748 l
141.692 66.2802 l
143.999 59.4420 l
146.221 51.4023 l
148.494 41.0538 l
150.747 27.5840 l
152.818 10.7341 l
155.192 -17.8269 l
S
cliprestore
newpath
0 0 m
0 222.000 l
222.000 222.000 l
222.000 0 l
h
W
Q
q
0.196078 0.803922 0.196078 RG
55.9271 1.13090 110.145 218.291 rc
newpath
56.9271 145.174 m
59.2625 144.476 l
61.2946 143.831 l
63.5799 143.062 l
65.8804 142.237 l
68.1699 141.360 l
70.2925 140.495 l
72.4904 139.541 l
74.7635 138.488 l
77.0293 137.366 l
79.3599 136.131 l
81.4127 134.972 l
83.7237 133.582 l
86.0442 132.092 l
88.2804 130.562 l
90.3111 129.090 l
92.7258 127.238 l
94.7713 125.582 l
97.1508 123.560 l
99.2570 121.687 l
101.568 119.553 l
103.768 117.453 l
106.064 115.208 l
108.172 113.111 l
112.809 108.460 l
114.865 106.414 l
117.086 104.239 l
119.381 102.047 l
121.625 99.9718 l
123.797 98.0381 l
126.209 95.9867 l
128.375 94.2347 l
130.689 92.4623 l
132.785 90.9446 l
135.077 89.3802 l
137.234 87.9965 l
139.488 86.6381 l
141.692 85.3929 l
143.999 84.1723 l
146.221 83.0723 l
148.494 82.0189 l
150.747 81.0410 l
152.818 80.1969 l
155.192 79.2890 l
157.315 78.5271 l
159.578 77.7630 l
161.744 77.0748 l
164.072 76.3788 l
S
cliprestore
newpath
0 0 m
0 222.000 l
222.000 222.000 l
222.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
56.9271 111.000 m
164.072 111.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
130 131 14 15 rc
newpath
136.278 137.255 m
136.486 137.475 136.642 137.695 136.748 137.915  c
136.824 138.067 136.949 138.467 137.123 139.115  c
137.681 138.277 l
137.829 138.074 138.009 137.880 138.221 137.696  c
138.432 137.512 138.619 137.386 138.779 137.318  c
138.881 137.276 138.993 137.255 139.116 137.255  c
139.298 137.255 139.443 137.304 139.551 137.401  c
139.658 137.498 139.712 137.617 139.712 137.756  c
139.712 137.917 139.681 138.027 139.617 138.086  c
139.499 138.192 139.363 138.245 139.211 138.245  c
139.122 138.245 139.027 138.226 138.925 138.188  c
138.726 138.120 138.593 138.086 138.525 138.086  c
138.424 138.086 138.303 138.146 138.164 138.264  c
137.901 138.484 137.588 138.910 137.224 139.540  c
137.745 141.724 l
137.825 142.058 137.893 142.258 137.948 142.324  c
138.003 142.389 138.058 142.422 138.113 142.422  c
138.202 142.422 138.305 142.373 138.424 142.276  c
138.657 142.081 138.856 141.827 139.021 141.514  c
139.243 141.628 l
138.976 142.128 138.638 142.543 138.227 142.873  c
137.994 143.059 137.798 143.152 137.637 143.152  c
137.400 143.152 137.211 143.019 137.072 142.752  c
136.983 142.587 136.799 141.876 136.520 140.619  c
135.859 141.766 135.330 142.504 134.933 142.835  c
134.675 143.046 134.425 143.152 134.184 143.152  c
134.014 143.152 133.860 143.091 133.720 142.968  c
133.619 142.875 133.568 142.750 133.568 142.593  c
133.568 142.454 133.614 142.337 133.708 142.244  c
133.801 142.151 133.915 142.105 134.050 142.105  c
134.186 142.105 134.330 142.172 134.482 142.308  c
134.592 142.405 134.677 142.454 134.736 142.454  c
134.787 142.454 134.852 142.420 134.933 142.352  c
135.132 142.191 135.402 141.844 135.745 141.311  c
136.088 140.778 136.312 140.393 136.418 140.156  c
136.156 139.127 136.014 138.584 135.993 138.524  c
135.895 138.249 135.768 138.055 135.612 137.940  c
135.455 137.826 135.225 137.769 134.920 137.769  c
134.823 137.769 134.710 137.773 134.584 137.782  c
134.584 137.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 222.000 l
222.000 222.000 l
222.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
59.0000 111.000 m
59.0000 114.000 l
S
Q
q
0 J
1 j
newpath
76.0000 111.000 m
76.0000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
73 121 7 13 rc
newpath
83.7900 128.438 m
75.2100 128.438 l
75.2100 127.762 l
83.7900 127.762 l
h
f
Q
newpath
83.5234 124.236 m
85.6181 123.214 l
85.8276 123.214 l
85.8276 130.482 l
85.8276 130.965 85.8477 131.265 85.8879 131.384  c
85.9281 131.502 86.0117 131.593 86.1386 131.657  c
86.2656 131.720 86.5237 131.756 86.9130 131.765  c
86.9130 132.000 l
83.6757 132.000 l
83.6757 131.765 l
84.0820 131.756 84.3444 131.721 84.4628 131.660  c
84.5813 131.599 84.6639 131.516 84.7104 131.412  c
84.7570 131.309 84.7802 130.999 84.7802 130.482  c
84.7802 125.836 l
84.7802 125.210 84.7591 124.808 84.7168 124.630  c
84.6871 124.495 84.6332 124.395 84.5549 124.332  c
84.4766 124.268 84.3824 124.236 84.2724 124.236  c
84.1158 124.236 83.8979 124.302 83.6186 124.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 111.000 m
93.0000 114.000 l
S
Q
q
0 J
1 j
newpath
111.000 111.000 m
111.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
107.469 125.747 m
107.469 124.765 107.617 123.920 107.914 123.211  c
108.210 122.502 108.603 121.974 109.094 121.627  c
109.475 121.352 109.869 121.214 110.275 121.214  c
110.935 121.214 111.528 121.551 112.052 122.224  c
112.708 123.057 113.036 124.187 113.036 125.613  c
113.036 126.612 112.892 127.460 112.605 128.159  c
112.317 128.857 111.950 129.364 111.503 129.679  c
111.057 129.994 110.626 130.152 110.211 130.152  c
109.391 130.152 108.707 129.667 108.161 128.698  c
107.700 127.882 107.469 126.898 107.469 125.747  c
h
108.713 125.905 m
108.713 127.090 108.859 128.057 109.151 128.806  c
109.393 129.437 109.752 129.752 110.231 129.752  c
110.459 129.752 110.696 129.649 110.941 129.444  c
111.187 129.239 111.373 128.895 111.500 128.413  c
111.695 127.685 111.792 126.659 111.792 125.334  c
111.792 124.352 111.690 123.533 111.487 122.877  c
111.335 122.391 111.138 122.046 110.897 121.843  c
110.724 121.703 110.514 121.633 110.269 121.633  c
109.981 121.633 109.725 121.762 109.501 122.021  c
109.196 122.372 108.988 122.924 108.878 123.677  c
108.768 124.431 108.713 125.173 108.713 125.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
128.000 111.000 m
128.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
124.469 127.747 m
124.469 126.765 124.617 125.920 124.914 125.211  c
125.210 124.502 125.603 123.974 126.094 123.627  c
126.475 123.352 126.869 123.214 127.275 123.214  c
127.935 123.214 128.528 123.551 129.052 124.224  c
129.708 125.057 130.036 126.187 130.036 127.613  c
130.036 128.612 129.892 129.460 129.605 130.159  c
129.317 130.857 128.950 131.364 128.503 131.679  c
128.057 131.994 127.626 132.152 127.211 132.152  c
126.391 132.152 125.707 131.667 125.161 130.698  c
124.700 129.882 124.469 128.898 124.469 127.747  c
h
125.713 127.905 m
125.713 129.090 125.859 130.057 126.151 130.806  c
126.393 131.437 126.752 131.752 127.231 131.752  c
127.459 131.752 127.696 131.649 127.941 131.444  c
128.187 131.239 128.373 130.895 128.500 130.413  c
128.695 129.685 128.792 128.659 128.792 127.334  c
128.792 126.352 128.690 125.533 128.487 124.877  c
128.335 124.391 128.138 124.046 127.897 123.843  c
127.724 123.703 127.514 123.633 127.269 123.633  c
126.981 123.633 126.725 123.762 126.501 124.021  c
126.196 124.372 125.988 124.924 125.878 125.677  c
125.768 126.431 125.713 127.173 125.713 127.905  c
h
132.625 130.768 m
132.823 130.768 132.991 130.837 133.126 130.974  c
133.261 131.112 133.329 131.278 133.329 131.473  c
133.329 131.667 133.260 131.833 133.123 131.971  c
132.985 132.109 132.819 132.177 132.625 132.177  c
132.430 132.177 132.264 132.109 132.126 131.971  c
131.989 131.833 131.920 131.667 131.920 131.473  c
131.920 131.274 131.989 131.107 132.126 130.971  c
132.264 130.836 132.430 130.768 132.625 130.768  c
h
139.643 123.392 m
139.147 124.471 l
136.558 124.471 l
135.993 125.627 l
137.114 125.792 138.003 126.208 138.659 126.877  c
139.222 127.453 139.503 128.130 139.503 128.908  c
139.503 129.361 139.411 129.780 139.227 130.165  c
139.043 130.550 138.811 130.878 138.532 131.149  c
138.252 131.420 137.941 131.638 137.599 131.803  c
137.112 132.036 136.613 132.152 136.101 132.152  c
135.584 132.152 135.209 132.064 134.974 131.888  c
134.739 131.713 134.622 131.519 134.622 131.308  c
134.622 131.189 134.670 131.084 134.768 130.993  c
134.865 130.902 134.988 130.857 135.136 130.857  c
135.246 130.857 135.342 130.874 135.425 130.908  c
135.507 130.942 135.648 131.028 135.847 131.168  c
136.164 131.388 136.486 131.498 136.812 131.498  c
137.307 131.498 137.741 131.311 138.116 130.936  c
138.491 130.562 138.678 130.106 138.678 129.568  c
138.678 129.048 138.511 128.562 138.176 128.112  c
137.842 127.661 137.381 127.313 136.793 127.067  c
136.331 126.877 135.703 126.767 134.907 126.737  c
136.558 123.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
145.000 111.000 m
145.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
147.523 124.236 m
149.618 123.214 l
149.827 123.214 l
149.827 130.482 l
149.827 130.965 149.847 131.265 149.887 131.384  c
149.928 131.502 150.011 131.593 150.138 131.657  c
150.265 131.720 150.523 131.756 150.913 131.765  c
150.913 132.000 l
147.675 132.000 l
147.675 131.765 l
148.082 131.756 148.344 131.721 148.462 131.660  c
148.581 131.599 148.663 131.516 148.710 131.412  c
148.757 131.309 148.780 130.999 148.780 130.482  c
148.780 125.836 l
148.780 125.210 148.759 124.808 148.716 124.630  c
148.687 124.495 148.633 124.395 148.554 124.332  c
148.476 124.268 148.382 124.236 148.272 124.236  c
148.115 124.236 147.897 124.302 147.618 124.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
162.000 111.000 m
162.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
159.523 124.236 m
161.618 123.214 l
161.827 123.214 l
161.827 130.482 l
161.827 130.965 161.847 131.265 161.887 131.384  c
161.928 131.502 162.011 131.593 162.138 131.657  c
162.265 131.720 162.523 131.756 162.913 131.765  c
162.913 132.000 l
159.675 132.000 l
159.675 131.765 l
160.082 131.756 160.344 131.721 160.462 131.660  c
160.581 131.599 160.663 131.516 160.710 131.412  c
160.757 131.309 160.780 130.999 160.780 130.482  c
160.780 125.836 l
160.780 125.210 160.759 124.808 160.716 124.630  c
160.687 124.495 160.633 124.395 160.554 124.332  c
160.476 124.268 160.382 124.236 160.272 124.236  c
160.115 124.236 159.897 124.302 159.618 124.433  c
h
166.625 130.768 m
166.823 130.768 166.991 130.837 167.126 130.974  c
167.261 131.112 167.329 131.278 167.329 131.473  c
167.329 131.667 167.260 131.833 167.123 131.971  c
166.985 132.109 166.819 132.177 166.625 132.177  c
166.430 132.177 166.264 132.109 166.126 131.971  c
165.989 131.833 165.920 131.667 165.920 131.473  c
165.920 131.274 165.989 131.107 166.126 130.971  c
166.264 130.836 166.430 130.768 166.625 130.768  c
h
173.643 123.392 m
173.147 124.471 l
170.558 124.471 l
169.993 125.627 l
171.114 125.792 172.003 126.208 172.659 126.877  c
173.222 127.453 173.503 128.130 173.503 128.908  c
173.503 129.361 173.411 129.780 173.227 130.165  c
173.043 130.550 172.811 130.878 172.532 131.149  c
172.252 131.420 171.941 131.638 171.599 131.803  c
171.112 132.036 170.613 132.152 170.101 132.152  c
169.584 132.152 169.209 132.064 168.974 131.888  c
168.739 131.713 168.622 131.519 168.622 131.308  c
168.622 131.189 168.670 131.084 168.768 130.993  c
168.865 130.902 168.988 130.857 169.136 130.857  c
169.246 130.857 169.342 130.874 169.425 130.908  c
169.507 130.942 169.648 131.028 169.847 131.168  c
170.164 131.388 170.486 131.498 170.812 131.498  c
171.307 131.498 171.741 131.311 172.116 130.936  c
172.491 130.562 172.678 130.106 172.678 129.568  c
172.678 129.048 172.511 128.562 172.176 128.112  c
171.842 127.661 171.381 127.313 170.793 127.067  c
170.331 126.877 169.703 126.767 168.907 126.737  c
170.558 123.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
63.0000 111.000 m
63.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
66.0000 111.000 m
66.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
70.0000 111.000 m
70.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
73.0000 111.000 m
73.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
80.0000 111.000 m
80.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
83.0000 111.000 m
83.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
87.0000 111.000 m
87.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
90.0000 111.000 m
90.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 111.000 m
97.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
100.000 111.000 m
100.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
104.000 111.000 m
104.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
107.000 111.000 m
107.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 111.000 m
114.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
117.000 111.000 m
117.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
121.000 111.000 m
121.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
124.000 111.000 m
124.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
131.000 111.000 m
131.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
134.000 111.000 m
134.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
138.000 111.000 m
138.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
141.000 111.000 m
141.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
148.000 111.000 m
148.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
151.000 111.000 m
151.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
155.000 111.000 m
155.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
158.000 111.000 m
158.000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
111.000 218.422 m
111.000 3.13090 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
71 49 14 15 rc
newpath
77.1010 55.2553 m
77.2449 55.5008 77.3444 55.7303 77.3994 55.9440  c
77.4544 56.1578 77.5094 56.5778 77.5644 57.2041  c
77.8437 60.3271 l
78.0976 60.0224 78.4658 59.5400 78.9482 58.8798  c
79.1809 58.5582 79.4687 58.1202 79.8115 57.5659  c
80.0188 57.2273 80.1458 56.9904 80.1923 56.8549  c
80.2177 56.7872 80.2304 56.7174 80.2304 56.6455  c
80.2304 56.5989 80.2156 56.5608 80.1860 56.5312  c
80.1564 56.5016 80.0791 56.4667 79.9543 56.4265  c
79.8295 56.3863 79.7258 56.3122 79.6433 56.2043  c
79.5607 56.0964 79.5195 55.9726 79.5195 55.8330  c
79.5195 55.6595 79.5703 55.5198 79.6718 55.4140  c
79.7734 55.3082 79.9003 55.2553 80.0527 55.2553  c
80.2389 55.2553 80.3976 55.3326 80.5288 55.4870  c
80.6599 55.6415 80.7255 55.8541 80.7255 56.1250  c
80.7255 56.4593 80.6113 56.8412 80.3828 57.2707  c
80.1543 57.7002 79.7141 58.3593 79.0625 59.2480  c
78.4108 60.1367 77.6215 61.1057 76.6948 62.1552  c
76.0558 62.8789 75.5818 63.3348 75.2729 63.5231  c
74.9640 63.7115 74.6995 63.8056 74.4794 63.8056  c
74.3483 63.8056 74.2329 63.7559 74.1335 63.6564  c
74.0341 63.5570 73.9843 63.4417 73.9843 63.3105  c
73.9843 63.1455 74.0531 62.9952 74.1906 62.8598  c
74.3282 62.7244 74.4773 62.6567 74.6381 62.6567  c
74.7228 62.6567 74.7926 62.6757 74.8476 62.7138  c
74.8815 62.7350 74.9185 62.7953 74.9587 62.8947  c
74.9989 62.9942 75.0359 63.0608 75.0698 63.0947  c
75.0909 63.1158 75.1163 63.1264 75.1460 63.1264  c
75.1713 63.1264 75.2158 63.1053 75.2793 63.0629  c
75.5120 62.9191 75.7828 62.6905 76.0918 62.3774  c
76.4980 61.9627 76.7985 61.6241 76.9931 61.3618  c
76.6377 57.3374 l
76.5784 56.6730 76.4895 56.2688 76.3710 56.1250  c
76.2526 55.9811 76.0537 55.9091 75.7744 55.9091  c
75.6855 55.9091 75.5268 55.9218 75.2983 55.9472  c
75.2412 55.7124 l
h
f
Q
cliprestore
newpath
0 0 m
0 222.000 l
222.000 222.000 l
222.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
111.000 214.000 m
107.000 214.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
93 212 7 13 rc
newpath
103.790 219.438 m
95.2100 219.438 l
95.2100 218.762 l
103.790 218.762 l
h
f
Q
newpath
102.660 216.030 m
102.905 215.450 103.215 215.003 103.590 214.687  c
103.964 214.372 104.431 214.214 104.989 214.214  c
105.679 214.214 106.208 214.439 106.576 214.887  c
106.856 215.222 106.995 215.579 106.995 215.960  c
106.995 216.586 106.602 217.234 105.814 217.902  c
106.343 218.110 106.743 218.406 107.014 218.791  c
107.285 219.176 107.420 219.629 107.420 220.149  c
107.420 220.894 107.183 221.540 106.710 222.085  c
106.092 222.796 105.197 223.152 104.024 223.152  c
103.445 223.152 103.050 223.080 102.841 222.936  c
102.631 222.792 102.526 222.638 102.526 222.473  c
102.526 222.350 102.576 222.242 102.676 222.149  c
102.775 222.056 102.895 222.009 103.034 222.009  c
103.140 222.009 103.248 222.026 103.358 222.060  c
103.430 222.081 103.593 222.158 103.847 222.292  c
104.101 222.425 104.276 222.504 104.374 222.530  c
104.530 222.576 104.697 222.600 104.875 222.600  c
105.307 222.600 105.682 222.432 106.002 222.098  c
106.321 221.764 106.481 221.368 106.481 220.911  c
106.481 220.577 106.407 220.251 106.259 219.934  c
106.149 219.697 106.028 219.517 105.897 219.394  c
105.715 219.225 105.465 219.071 105.148 218.934  c
104.831 218.796 104.507 218.728 104.177 218.728  c
103.974 218.728 l
103.974 218.537 l
104.308 218.495 104.643 218.374 104.980 218.175  c
105.316 217.976 105.561 217.737 105.713 217.458  c
105.865 217.179 105.941 216.872 105.941 216.538  c
105.941 216.102 105.805 215.749 105.532 215.481  c
105.259 215.212 104.919 215.078 104.513 215.078  c
103.857 215.078 103.309 215.429 102.869 216.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 179.000 m
107.000 179.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
93 178 7 13 rc
newpath
103.790 185.438 m
95.2100 185.438 l
95.2100 184.762 l
103.790 184.762 l
h
f
Q
newpath
107.960 187.343 m
107.357 189.000 l
102.279 189.000 l
102.279 188.765 l
103.773 187.402 104.824 186.289 105.434 185.426  c
106.043 184.563 106.348 183.773 106.348 183.058  c
106.348 182.512 106.181 182.064 105.846 181.712  c
105.512 181.361 105.112 181.186 104.647 181.186  c
104.223 181.186 103.844 181.309 103.507 181.557  c
103.171 181.804 102.922 182.167 102.761 182.646  c
102.526 182.646 l
102.632 181.863 102.904 181.262 103.342 180.843  c
103.780 180.424 104.327 180.214 104.983 180.214  c
105.681 180.214 106.264 180.439 106.732 180.887  c
107.199 181.336 107.433 181.865 107.433 182.474  c
107.433 182.910 107.332 183.346 107.128 183.782  c
106.815 184.467 106.307 185.193 105.605 185.959  c
104.551 187.110 103.893 187.804 103.631 188.041  c
105.878 188.041 l
106.335 188.041 106.656 188.024 106.840 187.990  c
107.024 187.956 107.190 187.888 107.338 187.784  c
107.486 187.680 107.615 187.533 107.725 187.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 145.000 m
107.000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
93 144 7 13 rc
newpath
103.790 151.438 m
95.2100 151.438 l
95.2100 150.762 l
103.790 150.762 l
h
f
Q
newpath
103.523 147.236 m
105.618 146.214 l
105.827 146.214 l
105.827 153.482 l
105.827 153.965 105.847 154.265 105.887 154.384  c
105.928 154.502 106.011 154.593 106.138 154.657  c
106.265 154.720 106.523 154.756 106.913 154.765  c
106.913 155.000 l
103.675 155.000 l
103.675 154.765 l
104.082 154.756 104.344 154.721 104.462 154.660  c
104.581 154.599 104.663 154.516 104.710 154.412  c
104.757 154.309 104.780 153.999 104.780 153.482  c
104.780 148.836 l
104.780 148.210 104.759 147.808 104.716 147.630  c
104.687 147.495 104.633 147.395 104.554 147.332  c
104.476 147.268 104.382 147.236 104.272 147.236  c
104.115 147.236 103.897 147.302 103.618 147.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 111.000 m
107.000 111.000 l
S
Q
q
0 J
1 j
newpath
111.000 77.0000 m
107.000 77.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
103.523 78.2368 m
105.618 77.2148 l
105.827 77.2148 l
105.827 84.4829 l
105.827 84.9653 105.847 85.2657 105.887 85.3842  c
105.928 85.5027 106.011 85.5937 106.138 85.6572  c
106.265 85.7207 106.523 85.7566 106.913 85.7651  c
106.913 86.0000 l
103.675 86.0000 l
103.675 85.7651 l
104.082 85.7566 104.344 85.7217 104.462 85.6604  c
104.581 85.5990 104.663 85.5165 104.710 85.4128  c
104.757 85.3091 104.780 84.9991 104.780 84.4829  c
104.780 79.8364 l
104.780 79.2101 104.759 78.8081 104.716 78.6303  c
104.687 78.4949 104.633 78.3955 104.554 78.3320  c
104.476 78.2685 104.382 78.2368 104.272 78.2368  c
104.115 78.2368 103.897 78.3024 103.618 78.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 42.0000 m
107.000 42.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
107.960 50.3432 m
107.357 52.0000 l
102.279 52.0000 l
102.279 51.7651 l
103.773 50.4025 104.824 49.2895 105.434 48.4262  c
106.043 47.5629 106.348 46.7737 106.348 46.0585  c
106.348 45.5127 106.181 45.0641 105.846 44.7128  c
105.512 44.3616 105.112 44.1860 104.647 44.1860  c
104.223 44.1860 103.844 44.3098 103.507 44.5573  c
103.171 44.8049 102.922 45.1678 102.761 45.6460  c
102.526 45.6460 l
102.632 44.8631 102.904 44.2622 103.342 43.8432  c
103.780 43.4243 104.327 43.2148 104.983 43.2148  c
105.681 43.2148 106.264 43.4391 106.732 43.8877  c
107.199 44.3362 107.433 44.8652 107.433 45.4746  c
107.433 45.9104 107.332 46.3463 107.128 46.7822  c
106.815 47.4677 106.307 48.1935 105.605 48.9594  c
104.551 50.1105 103.893 50.8045 103.631 51.0415  c
105.878 51.0415 l
106.335 51.0415 106.656 51.0245 106.840 50.9907  c
107.024 50.9568 107.190 50.8881 107.338 50.7844  c
107.486 50.6807 107.615 50.5336 107.725 50.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 8.00000 m
107.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
102.660 10.0302 m
102.905 9.45052 103.215 9.00301 103.590 8.68774  c
103.964 8.37247 104.431 8.21484 104.989 8.21484  c
105.679 8.21484 106.208 8.43912 106.576 8.88769  c
106.856 9.22200 106.995 9.57959 106.995 9.96044  c
106.995 10.5867 106.602 11.2342 105.814 11.9028  c
106.343 12.1101 106.743 12.4064 107.014 12.7915  c
107.285 13.1766 107.420 13.6293 107.420 14.1499  c
107.420 14.8946 107.183 15.5400 106.710 16.0859  c
106.092 16.7968 105.197 17.1523 104.024 17.1523  c
103.445 17.1523 103.050 17.0804 102.841 16.9365  c
102.631 16.7926 102.526 16.6381 102.526 16.4731  c
102.526 16.3504 102.576 16.2425 102.676 16.1494  c
102.775 16.0563 102.895 16.0097 103.034 16.0097  c
103.140 16.0097 103.248 16.0266 103.358 16.0605  c
103.430 16.0817 103.593 16.1589 103.847 16.2922  c
104.101 16.4255 104.276 16.5048 104.374 16.5302  c
104.530 16.5768 104.697 16.6001 104.875 16.6001  c
105.307 16.6001 105.682 16.4329 106.002 16.0986  c
106.321 15.7643 106.481 15.3686 106.481 14.9116  c
106.481 14.5773 106.407 14.2514 106.259 13.9340  c
106.149 13.6971 106.028 13.5172 105.897 13.3945  c
105.715 13.2252 105.465 13.0718 105.148 12.9343  c
104.831 12.7967 104.507 12.7280 104.177 12.7280  c
103.974 12.7280 l
103.974 12.5376 l
104.308 12.4952 104.643 12.3746 104.980 12.1757  c
105.316 11.9768 105.561 11.7377 105.713 11.4585  c
105.865 11.1792 105.941 10.8724 105.941 10.5380  c
105.941 10.1022 105.805 9.74991 105.532 9.48120  c
105.259 9.21248 104.919 9.07812 104.513 9.07812  c
103.857 9.07812 103.309 9.42936 102.869 10.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 196.000 m
109.000 196.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 162.000 m
109.000 162.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 128.000 m
109.000 128.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 94.0000 m
109.000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 59.0000 m
109.000 59.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
111.000 25.0000 m
109.000 25.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 232 232 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
