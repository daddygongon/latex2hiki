\section{初等関数とそのほかの関数(ElementaryFunction)}
\subsection{解説}
\subsubsubsection{四則演算とevalf}
四則演算は"+-*/"．割り切れない割り算は分数のまま表示される．
> 3/4;
                                      3
                                      -
                                      4
強制的に数値(浮動小数点数)で出力するにはevalfを用いる．
> evalf(3/4);
                                 0.7500000000
多項式関数(polynom)
かけ算も省略せずに打ち込む必要がある．またベキ乗は"^"である．
> 3*x^2-4*x+3;
                                   2          
                                3 x  - 4 x + 3
平方根(sqrt)
平方根はsquare rootを略したsqrtを使う．
> sqrt(4);
                                      2
三角関数(trigonal)
sin, cosなどの三角関数はラジアンで入力する．ただし， sin^2*xなどは
> sin^2 x;
Error, missing operator or `;`
ではだめで，
> sin(x)^2;
                                         2
                                   sin(x) 
と省略せずに打ち込まねばならない．三角関数でよく使う定数PiはPiと入力する．Mapleは大文字と小文字を区別するので注意．
ラジアン(radian)に度(degree)から変換するには以下のようにする．
> convert(180*degrees, radians);
                                      Pi
その他の関数(inifnc)
その他の初等関数の表記やよく使われる超越関数でMapleの起動状態で用意されている関数のリストは，
> ?inifnc;
ユーザー定義関数(unapply)
初等関数やその他の関数を組み合わせてユーザー定義関数を作ることができる．
関数f(x) = 2 x - 3とおくとする場合，Mapleでは，
> f:=x->2*x-3;
x -> 2 x - 3
と，矢印で書く．これが関数としてちゃんと定義されているかどうかを確かめるには，いくつかの数値や変数をf(x)に代入して確認できる．
> f(3);
> f(a);
> plot(f(x),x=-2..2);
                                      3
                                   2 a - 3

もう一つ関数定義のコマンドとして次のunapplyも同じ意味である．
> f:=unapply(2*x-3,x);
x -> 2 x - 3
packageの呼び出し(with)
Mapleが提供する膨大な数の関数から，目的とするものを捜し出すにはhelpを使う．
普段は使わない関数は，使う前に明示的に呼び出す必要がある．例えば，線形代数によく使われる関数群は，
> with(LinearAlgebra):
としておく必要がある．この他にもいくつもの有益な関数パッケージが用意されている．
> ?index[package];
で用意されているすべてのpackageが表示される．
課題
1. evalfのヘルプを参照して，Piを1000桁まで表示せよ．
2. 正接関数(tan)とその逆関数x/tanをx=-Pi/2..Pi/2,y=-Pi..Pi,scaling=constrainedで同時にプロットせよ．
3. 対数関数はln(x)で与えられる．ヘルプを参照しながら次の値を求めよ．
"log[10]1000 "（常用対数），log[2]1/16, "log[sqrt(5)]125"
4.次の関数はy=2^xとどのような位置関係にあるかx=-5..5,y=-5..5で同時にプロットして観察せよ．
y = -2^x, y = (1/2)^x,y = -(1/2)^x
5. 指数関数はexpで与えられる．e^xとlog*x関数およびy =
xを同時にx=-5..5,y=-5..5でplotせよ．またそれらの関数の位置関係を述べよ．

6. 階乗関数factorialに3を代入して何を求める関数か予測せよ．ヘルプを参照し，よりなじみの深い表記を試してみよ．
