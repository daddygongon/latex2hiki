自作したanimationをプレゼン資料に貼り付けたり，測定データなどを読み込んでMapleで手軽に表示，加工したくなります．このとき必要となるファイルとのやりとりを紹介します．


!!!ファイル名の取得 
ファイル名の取得は，Javaの標準関数を使ったMapletパッケージのGetFile関数を使う．GetFile関数を呼びだして開いたファイル選択ウィンドウでファイルを指定するとファイルのパスがfile1に入る．
<<<maple
> restart; with(Maplets[Examples]): file1:=GetFile();
>>>
<<<maple
                       "/Users/bob/MapleTest/data1.txt"
>>>
Windowsでは"\"を"/"に変換する必要がある．日本語のファイル名は文字化けして使えない．
<<<maple
> with(StringTools): file2:=SubstituteAll(file1,"\\\\","/");
>>>
<<<maple
                       "/Users/bob/MapleTest/data1.txt"
>>>
ファイル名の変更は手でやるか，あるいはSubstitute関数を使う．
<<<maple
<<<maple
> with(StringTools): file2:=Substitute(file1,"data1","data2");
>>>
<<<maple
                       "/Users/bob/MapleTest/data2.txt"
>>>


!!!簡単なデータのやりとり 
ファイルとの単純なデータのやりとりはwritedata,readdata関数を使う．
例えば，以下のようなデータ(T)を作ったとする．
<<<maple
> f1:=t->subs({a=10,b=40000,c=380,d=128},a+b/(c+(t-d)^2) ):
> T:=[seq(f1(i)*(0.6+0.8*evalf(rand()/10^12)),i=1..256)]:
>>>
これをファイル(file1)へ書きだすには，以下のようにする．
<<<maple
> writedata(file1,T);
>>>
読み込んで表示させてみる．readdataのoption(=1)は一列のデータを読み込むことを意図している．
<<<maple
> T:=readdata(file1,1): 
> with(plots): listplot(T);
>>>
||{{attach_view(InputOutputplot2d1.png,Etcetra)}}||


!!!少し高度なデータのやりとり 
writeto関数で出力を外部ファイルへ切り替えることも可能．
<<<maple
> interface(quiet=true); 
  writeto(file2); 
  for i from 1 to 10 do 
    s1:=data||i;
    printf("%10.5f %s\n",evalf(f1(i)),s1); 
  end do: 
  writeto(terminal):
  interface(quiet=false);
>>>
<<<maple
                                    false
                                     true
>>>
C言語の標準的なデータ読み込みに似せた動きもできる．以下はfopen, readline, sscanf, fcloseを使ったデータの入力．
<<<maple
> fd:=fopen(file2,READ); 
  for i from 1 to 2 do 
    l1:=readline(fd); 
    d:=sscanf(l1,"%f %s"); 
  end do; 
  fclose(fd):
>>>
<<<maple
                                      1
                              "  12.42292 data1"
                             [12.42292, "data1"]
                              "  12.46063 data2"
                             [12.46063, "data2"]
>>>
fdにファイル識別子(file descripter)を持っていき，readlineで1行ずつl1に読ませる．これをsscanfでformatにしたがってdに格納していく．dには自動的に適切な形式で変数を入れてくれる．
<<<maple
> d[1]; whattype(d[1]);
>>>
<<<maple
                                   12.46063
                                    float
>>>
なお，C言語と違って，配列の最初を指すindexは"1"であることをお忘れなく．


!!!animationの出力 
animationなどのgif形式のplotを外部ファイルへ出力して表示させるには，以下の一連のコマンドのようにする．
<<<maple
> plotsetup(gif,plotoutput=file2): 
> display(tmp,insequence=true);
> plotsetup(default):
>>>
こいつをquicktimeなどに食わせれば，Maple以外のソフトで動画表示が可能となる．3次元図形の標準規格であるvrmlも同じようにして作成することが可能です(?vrml;参照)．


!!!Mapleのフィルターとしての利用法 
linux版やMac版では文字ベースのmapleを使って，filterとして高度な作業をさせることが出来ます．スクリプトの中に外部ファイルとの入出力を組み込めば，いままで紹介してきた複雑な動作をブラックボックスの内部処理としてそのまま使えます．
<<<maple
[bob@asura0 ~/test]$ cat test.txt
T:=readdata("./data101");
interface(quiet=true);
writeto("./result");
print(T[1]);
writeto(terminal);
interface(quiet=false);
>>>
とすれば，data101から読み込んだデータに何らかの処理を施した結果をresultに打ち出すことが可能．interface(quiet=true)で余計な出力を抑止しています．これをmapleに食わせると
<<<maple
[bob@asura0 ~/test]$ /usr/local/maple9.5/bin/maple < test.txt
    |\^/|     Maple 9.5 (IBM INTEL LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2004
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> T:=readdata("./data101");
                           T := [1.23, 2.35]
> interface(quiet=true);
                                false
                                 true
> quit
bytes used=211000, alloc=262096, time=0.00
>>>
めでたく出力されているはず．
<<<maple
[bob@asura0 ~/test]$ cat result
1.23
>>>

Mac版でのパス(path)は下記を参照．
<<<maple
bob%  /Library/Frameworks/Maple.framework/Versions/15/bin/maple
    |\^/|     Maple 15 (APPLE UNIVERSAL OSX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2011
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
> quit
memory used=1.2MB, alloc=1.4MB, time=0.07
>>>

