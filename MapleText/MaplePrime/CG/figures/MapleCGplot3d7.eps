%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N7ŒŽ30“ú 17Žž10•ª27•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
302 302 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
302.000 0 l
302.000 302.000 l
0 302.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
5 5 292 292 rc
q
[ 512.000 0 0 512.000 5.00000 5.00000 ] concat
<<
/ImageType 1
/Width 512  /Height 512
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [512 0 0 512 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0W?#LG/r<I<2Z`sNu+AQlH!XYRF"3jbC8tn-G9%$`c`Mlh51a+GCWCiD^+gb,l,umkiBuO*?m7S^G
?/XF']Rf2SfWW(DJcAN)]%[2<39KBEn*KE(F0XF>miIP145Y,)S=)1BD?0_;zzzzzzzzzz!!$hsKnY4J
LCT<(NfK0]5Q:H<?[VB4Vq23)dbVQ]F7\P=Rl5+%)B'M2)!LGWn*B;OpYL6Y]j:]'X7*L_f<5uD+*lq0
D;2K^nA#-);cB5m0`]AfqqqE;>5em;$dB'gCt\CEX04u_@!6_%;_&&;W<NS4[r1$UZLIGHb7X_,]^Wf0
cTg<L[0!"#dCeALH1QRh#;0>qGj<eX'.6Np3HF3AacesgnW*nZ#+g;?l/CU[:9PlBD>*u+n+ZMJD;)?G
WdoHa\`_q,++Ee&-P%7\(iB8OWN!u=ihr!(PFZ#Y!8;%!BdmM@BP;'g@UeNGSJNn`3-t5\Nn^G/VpCkn
'A\60naZVXrcm2AbY4qd(P)1IT:`lCnR<a4UP0d5^O?"QW!+C7[r1"_2E!HU4<2Q=mFujYm+LS=[#>Is
ckRIMs6R)<(9&?,r0&L(?Fk5mEcU`_hu.FDI-[oDNZC1s;87JPmU,taQQLVE6+e@Erl(Ae%Ir+"+[4?=
^BT3M\pX>ER58KMl+T:L>?^Sp0,-#<aT(72]X.C\F3cucq;5FhPRq+)FTFaM/._Z'*_Tu<[sg6ls4cH1
G$n_9f)O(r#ljl#pTO@S8H)(s,&2e0(Y8/8!*H.4_aabul:+fEe/&Sb[0M/=A&jUhN/TmkcpJH['2`T,
q9m^>i8@uW]9Y=2.O0CbX@?^XG^b**ok+<PWkEtugn@)jqYU.7o8@=4MDIU!r9$<%m7K;%Jt`>[0+Am'
gm(@e2pTO(-PnC?LdWhoFWJFB5CS!%F>PJ!WMukt=0Jd5[&BIg[YcqD(BCP2jdaO(#lGE+D^'KCD(jAR
0gNYI^q\>I3ZG&Wr,63*)!F8$5:<dib0L$!NOlp@0i0[,"Fd7Mm>a([ru7Ir"E_7"n4Pf2B4F?p`l`LK
"Ul@Q'j()hR2s]Fr,63*(oW8PJ_uSgF@oQ4r,:.k(Do+9b#XXG1,i+\EUd[bH7cjbPDFat>:&ccj:HE7
jF;f5@j%lZr/.,1\WOHRs-jlc#$0=j-fK:#>,H_K\E:B<^bJg;='pA51c2T(J*sr;^:CebpATr8^otR'
3b>?Xr\nm2&QI,B.p%UR-NEk]5JI*ig\q*LPEV38,[R@kXQ;I1)m!ZIhlOJAj-c='J,J=Kn[Q*=fTlT4
hBMHan_\R/IJ1Ch^/Lq)7?+PFSS4;(2\)3Rj8<iHY(>Ud^A&ndYsemUT#>htC20d9CC>:Un])_)c^EDp
[qs`<nDM,qSpBHn+"RK.Vp<E>?p0\Q%4rq>h:9;\]Ibm'=u)^tnk$KQ[R[uhr#Zjs.s\7jMabfRp6t*d
7n,tB,o2K=`f_B*$,<fm/cV<rm7B^n>\Uo@E]A+#aO[ItUC)fh9_mu^h<3M"CQ\)g!s>fpmG,6nFEB@2
7s,BFVW'4-&OGm#s*bRT:=7a&Z-@.K>AG'8?<g`o+8tSFIr"jfZu(]jX:8E;kRKiP_%2F`V6PZC5(3:6
cT[hfRk#!&(B\`<>7dAcEC(4R4ScbIM?CoF5Q?+Pj$,G*e-J]?9C^J:]66WDAnGYPKBip\'Y@%\OLO+J
/;[X]Q5"\sF3d!Ne.,=`7+KZ32=493Is"1cnDJp0(1Y)K74l6YnJGQ`kfGa&JgVon42%pr/_@15095NY
cBj?RRr9hNVWLpF,Q&KVrdUuXhgW34p;UV7>GJek1c,n`rl,o:.m5XC1-@Z=Nu_J$W1_V;:WG($HcLm`
IX(PNe\D._muKX*=HPVqY$HtAlM0o0k&opQf]G*blA?fN&cVO[F&+nf49)_??Am%BEokHfbfluWITl@F
U+u8W+9&Ln.gsl?nIdq,l`\&e5!FG]s3E]Qq!d7pEL)oVRbqpfQ]39jQYThphL(;Sd08b&miNPjD&`V7
YOocO6uc&E[hMlMIJ``)?[b"]c*8?JkC;hUpYUK#SNc.=rXC"Mf6A$U,_'o8)[H2.[p.pCdC'(A/%P]c
%NL:q.s@Z>G<Z')o:jdB`Y)`V1^SOI@[$N>QFp/SYC;JQhS"92%iaEYYJ:)5<`AufBi.4#D*tf`Z*Qh;
.2l&P-bAM*kOtA(PRN0JD:&aeh]2FUM[F*0BB+=XKbR8[`c`l8@4?3`Te:6<\FJO5*tA_hIJMuklS#C9
>(2)-3OR*2P-,unET0B^rV#X5UC)hEp>Uu`7NXNl12WZ'(@%oqH]GHA*#gG2UBnjXCoBE!IbV%MJ,fKA
a2Z+;;ntiFs/W?;C1I'9HY(M`A)MV!\hsGV"2?()p?C#m"s(18F,meXq!,F:a/X;5[r0l::c08]F4/m^
<tsC42G9t"@Kgr_r/+J2nfMm553K/NbSmLFs4qhdcK]4)kUmn%s(4]*d'J?.S]\3T^NZURLR^uuJ$\9g
iuT'h-mEj;ISnAXh'r@IV^po"C`YR=nR+Y.q;2h[27o-Cr.gfFaT%"V"35O&/8/PmpXHl<2ltm>2:Gk,
hlM8/a6UjP<<Bq9\&hgpJ&nV0S<NWUat-RTre`SI\L$`,IM.)7aa_C28,bI5hQ+k$ci:"NF]BH+<GqpJ
oumAIAR&eioB+:rVbS6nF=9bqEofntf!E_dA#f`])h2Q2aFD:1jd_OX2$T)m3EYeIl`W8)I!g0`G[b.A
lIDqP=ipGG4Rp?'h/_%GFi]'Rl&km^ei[o!=+^ZtF)qr:gU:rL.ZWEbmW\3ln])`4\mTMt0sN(K:VqVH
WM]muh26%ds27[9"a$@Xbl;9,"37GQ((B'N]]?KP?5je$HJsPop@$o=XhX1+0=-pR3OTmfQoh?Wq7q"A
@):(29J!r-rHcYb7RotD,I$1`1RA@Gl6kO,8,M'<8+crZ%ls31\J;"ih7IlL&b7kugkb+hkF[8'l)10!
cHcFUB0V=Km+f/Cb:gU]5+'(L9)e"pJ&mcPX"+A^*dd7YBY?nN&Gb,5f/GfS4?bqMnK(J`gCD58N7q_+
eue8KbZ=`+fPZd\mZ_X4q!d7VgEPf"K*A$FUI>PT2IQGrBP8gZJp#pt4T5pi>.[hIGK>9TOoO>(NAo]B
_EV6!5QCQ*@rm(sp"(E5,O`ADmeQJ;?[:auihlk\"7^Cp^I\@eaFD9ns(cWIlI@*;UQN<4kK\=2\fe#'
4aZlbp=Nl[I)YX5]-[JuCcBEiGKLgmrkJ'M4$.WP-sef=2]^jA3B=YL?ZG>YV5$PAY.pK5,QAoWri]0U
oj<+:`G#'so[-1<Re$L$Pq,]hZt0^Vq4Ao3+\2O8;3CHg^A6p4aN2686?1gd`-sQB[r:0\Q<tg8F)3eV
0mCdo79pd2^r4/ZA:EV>rr)_P\U\^a5:e2&Ebm\UOoKW:AnGZ$Sj!&NrD<_dnjglQDJlU_Kh$nBWg.am
eiVqWjN.@k19R+1s#KWlEa1\u,QFg^G(Ue1T2S5Ycd0r+gUFB"AbH3$%ls2FVi9s(jF<3fLE-,^,QFg^
G(UcUVrX))rsK2BNU)L*48BCInioYD=,6^/*;Q4*`c]c$5K@r"*-8%=PVd<uVG3Q6?=rTHJ&mcP3V'pG
j?M_Hs.#7TS!O'\nfMmW4.dbt/&c[a"SnZ7s!u'3K*;"B;pof0E\,7SK*9fOkK*ZqZ/$Ngro]N1s#YDj
=BJ[=Ha0t+ruj]-kEL)ESG^]qs,c0mq&K3;.CL0@aT%cnnj!*inK2IlZ*btZ+[Q+jP]Y`Or6LN*OPnj7
*;NqjnfJM*IniT2s6R)<?G:ftmD[YJH4pqPIuaH1'_r8"cCITVl+1U)T-O@Z8,am#PlFTmPhbtACJVVM
3V#C#r`>!TLE-,^:ssL8nioYD6]V(?-n52>\?1-3:iA[\r(iFSPp65Oa0d]0-!`G]s)[6cjN.?(q-PTA
+*-Fl6:q!&p?^HgB?mltf\08B6B5ho&k]`Q>5m^+J&mcP$1bi/j?M_Hs+HR+s2'Ht-Vp=MHa0uVhLlm#
cK(40hQ6Y$OoLLfs)[7NFi]'ROoIFQjF;i4;uphh[eA4?OQ5-\*;Nq^nfMo5IuaH1%f$Vqnis%2r',8b
bh9=8gKn^`WAc!@\^NS0^H1F?jN.@k1?QiCs#KWlEo_^F)>RXfD<5P/r^2]eVfUpKFm(bMNr73PA)7Xi
T-O@Z8,h\ms6>^GO<adHb/jTUQS':AHF1@sp&an6jLB@[Vi5mWjF<3fLE-,^,QFf3r^2_DcRC+=UVJ:d
]k-m=od8`ZG<2X\Gr+N2Nr4YPq4Ao3X$ckRNr73P,QHrikP+AufA890Jc(9Ck>(3)0lMgEcd?Z_*;Q3O
s/SNd6]V)j.3nj/()D)[f[8P2H\)*M*9U)[P]>Ndr6Nc/JfOTY,QFf3r^2_DcRESbUbZg<<dXBZEh#4X
,QFf3^BnrAIniT,B#suTq%#LV5=b]SL\uoIkK`21s6>^GO<adH8t%\+ro_pOO<FREjF=#YDNNf3\X\iR
J&dQi$O[>Z0=LT85:">MS<E$ZOT.?3*tmXaNr6'pq%!eWS]E6/s._3,)S,7Set2ep"SnZgd_$Ig5=`Hp
''+P&r3$h1%lsL3#pn^5Zd1g^q=<XU(L)7W+*-Fl6:pc\aT!7U%ls2F62jrCj(=AtrtA#Is!TZqDL8Xr
-iY>[r[1*+QSEE5r6LN*O<ac=8t%\1roZ7Y#!']K''+P=aFD9nrs:"5s7GsU`JYPe?>T#NJ&mcP#pmic
,l_rXRioc(=b?RT'_r8"nirhDr',Q%m$TYBg0SU_aa_Bors:!rRjA#Tj?M]B4%k\8Q/]:kjN.@SP4JXi
KaT8(SnrbY[3ttt8,h\9ES[/_c]S6hj4J(+r3$UNbofOUkEM,/&cPW2[(Y,GPQ-^hs)[7NFi]'ROoIH4
^H*>nK,eB63G%9$1h*4/g\,)l:]<_Ar6Hg%hB_oh,QAoWro_B&lB)%-A*ba:r`=kp'?H=93Gm+B`Poe<
rTH``A[A_LD(N+3aFD9ns#KJ;2t-Y$s8JnqfmMP2'.;L6GjWV&aDpQ'ViCNPk*p9Ylq^>MSND%5H?snh
Y$KejD&XK94a?I(>KX-4a3>_sro^XCs!.FdoAdrh9:(Y[4W7+NL5+Q2l`H;3&Q:KfL&?]Gq4H-=H1MLf
5.l14k2LY2s(>qU@c=Ak^3\[bpT=Hse=QSn*61fqg6M]#oAelk[r.9,Sj.]gnis]#f</D;KtmW[YD7mg
fDd@9n)D<Ee'ld:?45s\nis$(q>ZYNr1l(64#AeDhqoNp`oH"8@+5RhE+EK)C4WgpE/hthaH?K_l^p+M
bEaaY[uHE./hAPAC%78:^3t@(=hL8mR>Jq5;uqDqI1C.r:B!V@A#D?Qbl:6/B^eOM7lrqUIV`gO>5n',
Gl$[&j%72gq"T*oFO4s?q50-e?9aEh'B$%7s.$^Gs7uKdBVn8W`s6hD(/Nq$2")[MUC%hX*/qp_3A<,u
?%\\0GK03J/r4^@2pJluG9[&18,h\!lb#e>#(FL8KN7'LiNKul.XD,Bp?Yq2$<DO:>5m^1S\'#+hr9-m
Dr88W,^s\0bM%4*=UiH%aDpQ'B6jJ0&,^ZJ9AhH>Xo2$[rH.j\5*M1oNUoIUU7;Mh-oMEnl6%R1@^)M2
IoMbts,\K*F(1oXp"!?lJKKHUQG@G/at'ZSNK$*ncpL`1;iQJQI.0FAfOpH[7WfBZ/)F2E-Ap@;g&(PL
^3hrL5c<38\rZbr]B0lX0gqK:r8mY=fs>PM[\sAhnP=Z2dt8/pfXN>;NJ_e4H?QMXr^2^[o.#X55C<*?
&Zs;0r:\F*GO!\WjqE2en(sTc-`WkLKpr;TC4Cb)r^2_DD\dn2%#?PIr0A&!rk,5LhpO8^d-6fF7Js"P
#BkDFT_nA+r^YH-:4^1V#J4d.V"c`M"q0^<J4TZ,:9X>]<t,"/Ejp>H?2<BZA[%g3B9UJfaJjUe0+\!?
d*4Tj^tkL[%Eeta](Bge=Q`fd:9OhCTDIZ!9Amj#>6;Q.%J%8:b@!V[SP:U6+f>NmkD]fG(,_[BYBd@F
/']K,s,b]hq-O8R1fe,22_=H&e2[Jt2%LI%G3TD0%lmpXs$_jQZ[q#.8+OEgH*Ern;bt?@U=6.Ch5?]Y
VeC6S/b!!:o"97-_1LrG4X'hKTaLU&h#1d&^ou\DL-dQVJ$Ykbf(#^ej?Fo3,l^pSr+JQ+]Qg]eJ_rfn
038PtFC^tXq%!cjDr-G$-QYqZ/^"72\GJi6"b$jNk,k?p/D/$hWoZJ#Q.ajDi[3^)S7DNrrJs2BGe4<$
$2hg1Y.?R]>KHh%g6d/cjZfhPjE$IZkKfc]IHTRE+!)==R[fo'[;/jT^`r8PmVc3s^i(Cr'/!Y+>fJnV
?[hf^I,Ee-n%BZ!DQLT0W4ace[RC*2?1O`WFR\5)rVQ?XhS&f_QX3ig#t<c*^S,LM"2@9cc^VCmbNGj"
Hu8lYc[ThI1,(DdD;2L*q"d;1io4G6/:[H4+,ZDE^2qd0J,S\?#6tK8r)@Z4[q>fXL&>kU($DQ&b@&07
dSbI&qtg/$AnL&/DnPU0I$5'\3"THTDnc$Z"4eI'd50*2dsQ)efP@3NLaOjipu:/DH_Y@12`GsH%X0T[
!l$c4rcF%q0>m@+W`L&hfX5Krj(fWAcM1.(h(_#SI,rA2SND%5e1*gE\U!dY1mqhQ)B0VG`d_LUM2lY^
0Z6^F1,@8`r:St)Ya4Q5DdLsF^Stdc2_uBPZ2F:H?S>_Ta.`:mq"T(bN%_MU/@9Zj^%W`*Mk%P2rHb_&
Edhb<CA[_lnKaFph\NnUcE:p$ao;gVi]Pc3Nup%OX\fZEF-ume07TC\SNV&V9QU<0CN0:Nq+e+Q<6O7<
LSJQ_2#I=Omsc,]?[hh4U;pQpGs%\:H_,TP\^%?m`QA.?-jC'NI.GCR%25!n1$fkT^ZDn;\eI@I)B*@t
E.Gg9F6ADorZgK^VLGeb%,P#)GHK,\Tuth!oB+S$A:C9_o?p8b4o4B;`Bh]Ir9$;`)kn]AITsIeZ`=EJ
'`1PQ!gAh3bC:5<e^gj,>C,()S*[BejF9\<QghqM'1IgjChtXDp[6j!4Zsg6fX\Q'cT_6mo]agnP:".2
hV%/dL!&)VCY*@*]bXKFp"*P00/)I>BXoCdJs/>uJc+CBGFCOf0i/Um5WfMb%#g4,7an1nR3B<!`@5Xh
M_Dg>@X*.mbr=Nr)<?btk>!E)(Fh2n@hm)bP,rZ'W+b&fl;t_=+!4ir6<"17,9n/;b0X_6pV$#)%1Q$*
9LP*/qXs0ZEtuCNX&lL-Z%Ub$f73a2pSu*Cg%CGr.dEF7SiLcJ5d^>_T0D(/>'u>0orik1^Z*VZ,/%L\
BhSODq&argU7C>sDt_$K,5Ik^QFR#4(Dl,4qhnhZ,!)jNT,P5AS/$g*>$>*E90"TUDq=[`Oo/Ruk.koq
bTXsTKi)#Q"E1sC`_V*\e"SR<jiWiHXuqfm't4Z[%s&6<8P+KJgt^]?SiqE=IFp,U[^;RQ!-D9%Csid)
)p$$\rscY"q_sU5$l5(U2is$HbP<g\Jb:GUDBKmqVt.UCDta6rAAnkhWdfPthYAhoJIU1N2JJEe&Ci?3
=1Q(Ap$6([At%$mXl'5SigqBc?Agps%s3Nb=@Au<2t"9T^XEYJgtrA#$:V!QEP'l3X+($UI%[Vdhq!7g
fX>SNF0I]+%"*9g"R<,NG-N!*J>`hN0CSu\2XKQ`*Qe?CJNl:\/ardE1nRLrp&d]%PQ(\+@%H"ro9t$p
]skM,Eq)+H2:]_>C^L$<AHY1^]<(2X2;>QVMqJ'TGJ<\0P>=XS!s8Xfs!&a5l#7F5!#mQm[cQX/X5='C
gpqJ<rZ?R\;*9oB7._TsS2`5c4FH)&Jc"oNIuV4M3Uie#JIg+1CUn^b?XM\RpY8\0O*;A7$*ba*Om!'U
^OCUMOp+$7[oi1_26eiAIe(T.`HrO!s7+,OO,],n9he'P(I)X;ISk^4#O"4nB9W&`pICS]%M$LBc'pX^
rboM&>5kch*of`l+.uBCq<".jjGS)7M??6W4Rg-":HVJWIaeXcq=18aY>='YeAc-nI9)m*3BB4tm^qrE
\ij/7nDM,ma,WRrs1eU4Dq"qZ^E=RZ]s7XF;cEcdo=f4uIrXNsQ5%N#P<q@ERK0_Pq"T)RT$Pj5d_]jZ
Mi5Q8*dmInRb\GXJ;-FH%R'C(,GV$/^\Q,m>(.1Qs2iC)NiWrqAXf<aO.:^_STj'J\c@`O7ueS:p]mb,
A&jT=$k2LZ]mF3tinCeU;%#M_kbAah:HeAMVcO=XE_T>*2b&?+L4')Ka,M#sk3(o?B4m\E"9AK&zzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzz5RmW5\%_$0~>
Q
cliprestore
0 0 302 302 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
