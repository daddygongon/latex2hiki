%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N7ŒŽ30“ú 17Žž10•ª26•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
218 218 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
218.000 0 l
218.000 218.000 l
0 218.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 208 208 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
newpath
13.9150 187.000 m
13.9150 8.00000 l
S
newpath
45.5104 187.000 m
45.5104 8.00000 l
S
newpath
77.1058 187.000 m
77.1058 8.00000 l
S
newpath
108.701 187.000 m
108.701 8.00000 l
S
newpath
140.296 187.000 m
140.296 8.00000 l
S
newpath
171.892 187.000 m
171.892 8.00000 l
S
newpath
203.487 187.000 m
203.487 8.00000 l
S
0.913725 0.913725 0.913725 RG
newpath
29.7127 187.000 m
29.7127 8.03225 l
S
newpath
61.3081 187.000 m
61.3081 8.03225 l
S
newpath
92.9036 187.000 m
92.9036 8.03225 l
S
newpath
124.499 187.000 m
124.499 8.03225 l
S
newpath
156.094 187.000 m
156.094 8.03225 l
S
newpath
187.689 187.000 m
187.689 8.03225 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
13.9150 187.000 m
13.9150 8.00000 l
S
newpath
45.5104 187.000 m
45.5104 8.00000 l
S
newpath
77.1058 187.000 m
77.1058 8.00000 l
S
newpath
108.701 187.000 m
108.701 8.00000 l
S
newpath
140.296 187.000 m
140.296 8.00000 l
S
newpath
171.892 187.000 m
171.892 8.00000 l
S
newpath
203.487 187.000 m
203.487 8.00000 l
S
0.913725 0.913725 0.913725 RG
newpath
29.7127 187.000 m
29.7127 8.03225 l
S
newpath
61.3081 187.000 m
61.3081 8.03225 l
S
newpath
92.9036 187.000 m
92.9036 8.03225 l
S
newpath
124.499 187.000 m
124.499 8.03225 l
S
newpath
156.094 187.000 m
156.094 8.03225 l
S
newpath
187.689 187.000 m
187.689 8.03225 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
14.0000 187.000 m
203.000 187.000 l
S
newpath
14.0000 157.172 m
203.000 157.172 l
S
newpath
14.0000 127.344 m
203.000 127.344 l
S
newpath
14.0000 97.5161 m
203.000 97.5161 l
S
newpath
14.0000 67.6881 m
203.000 67.6881 l
S
newpath
14.0000 37.8602 m
203.000 37.8602 l
S
newpath
14.0000 8.03225 m
203.000 8.03225 l
S
0.913725 0.913725 0.913725 RG
newpath
13.9150 172.086 m
203.487 172.086 l
S
newpath
13.9150 142.258 m
203.487 142.258 l
S
newpath
13.9150 112.430 m
203.487 112.430 l
S
newpath
13.9150 82.6021 m
203.487 82.6021 l
S
newpath
13.9150 52.7742 m
203.487 52.7742 l
S
newpath
13.9150 22.9462 m
203.487 22.9462 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
14.0000 187.000 m
203.000 187.000 l
S
newpath
14.0000 157.172 m
203.000 157.172 l
S
newpath
14.0000 127.344 m
203.000 127.344 l
S
newpath
14.0000 97.5161 m
203.000 97.5161 l
S
newpath
14.0000 67.6881 m
203.000 67.6881 l
S
newpath
14.0000 37.8602 m
203.000 37.8602 l
S
newpath
14.0000 8.03225 m
203.000 8.03225 l
S
0.913725 0.913725 0.913725 RG
newpath
13.9150 172.086 m
203.487 172.086 l
S
newpath
13.9150 142.258 m
203.487 142.258 l
S
newpath
13.9150 112.430 m
203.487 112.430 l
S
newpath
13.9150 82.6021 m
203.487 82.6021 l
S
newpath
13.9150 52.7742 m
203.487 52.7742 l
S
newpath
13.9150 22.9462 m
203.487 22.9462 l
S
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
13.9150 7.03225 190.572 179.967 rc
newpath
157.134 69.6519 m
171.892 67.6881 l
161.373 77.6556 l
h
f
newpath
157.134 69.6519 m
171.892 67.6881 l
161.373 77.6556 l
h
S
newpath
45.8636 128.011 m
45.1572 126.677 l
158.900 72.9867 l
159.607 74.3207 l
h
f
newpath
45.8636 128.011 m
45.1572 126.677 l
158.900 72.9867 l
159.607 74.3207 l
h
S
cliprestore
newpath
0 0 m
0 208.000 l
208.000 208.000 l
208.000 0 l
h
W
Q
q
0 0 1.00000 RG
12.9150 6.03225 192.572 181.967 rc
newpath
178.211 67.6881 m
178.161 66.9404 l
178.012 66.2045 l
177.767 65.4920 l
177.429 64.8142 l
177.004 64.1816 l
176.498 63.6044 l
175.920 63.0916 l
175.278 62.6512 l
174.582 62.2903 l
173.844 62.0145 l
173.076 61.8282 l
172.289 61.7343 l
171.495 61.7343 l
170.708 61.8282 l
169.939 62.0145 l
169.201 62.2903 l
168.506 62.6512 l
167.864 63.0916 l
167.285 63.6044 l
166.780 64.1816 l
166.354 64.8142 l
166.016 65.4920 l
165.771 66.2045 l
165.623 66.9404 l
165.573 67.6881 l
165.623 68.4358 l
165.771 69.1717 l
166.016 69.8842 l
166.354 70.5621 l
166.780 71.1946 l
167.285 71.7719 l
167.864 72.2847 l
168.506 72.7250 l
169.201 73.0860 l
169.939 73.3617 l
170.708 73.5481 l
171.495 73.6419 l
172.289 73.6419 l
173.076 73.5481 l
173.844 73.3617 l
174.582 73.0860 l
175.278 72.7250 l
175.920 72.2847 l
176.498 71.7719 l
177.004 71.1946 l
177.429 70.5621 l
177.767 69.8842 l
178.012 69.1717 l
178.161 68.4358 l
178.211 67.6881 l
h
f
0 0 0 RG
newpath
178.211 67.6881 m
178.161 66.9404 l
178.012 66.2045 l
177.767 65.4920 l
177.429 64.8142 l
177.004 64.1816 l
176.498 63.6044 l
175.920 63.0916 l
175.278 62.6512 l
174.582 62.2903 l
173.844 62.0145 l
173.076 61.8282 l
172.289 61.7343 l
171.495 61.7343 l
170.708 61.8282 l
169.939 62.0145 l
169.201 62.2903 l
168.506 62.6512 l
167.864 63.0916 l
167.285 63.6044 l
166.780 64.1816 l
166.354 64.8142 l
166.016 65.4920 l
165.771 66.2045 l
165.623 66.9404 l
165.573 67.6881 l
165.623 68.4358 l
165.771 69.1717 l
166.016 69.8842 l
166.354 70.5621 l
166.780 71.1946 l
167.285 71.7719 l
167.864 72.2847 l
168.506 72.7250 l
169.201 73.0860 l
169.939 73.3617 l
170.708 73.5481 l
171.495 73.6419 l
172.289 73.6419 l
173.076 73.5481 l
173.844 73.3617 l
174.582 73.0860 l
175.278 72.7250 l
175.920 72.2847 l
176.498 71.7719 l
177.004 71.1946 l
177.429 70.5621 l
177.767 69.8842 l
178.012 69.1717 l
178.161 68.4358 l
178.211 67.6881 l
h
S
cliprestore
newpath
0 0 m
0 208.000 l
208.000 208.000 l
208.000 0 l
h
W
Q
q
1.00000 0 0 RG
12.9150 6.03225 192.572 181.967 rc
newpath
51.8295 127.344 m
51.7797 126.596 l
51.6310 125.860 l
51.3857 125.148 l
51.0479 124.470 l
50.6227 123.837 l
50.1168 123.260 l
49.5383 122.747 l
48.8963 122.307 l
48.2009 121.946 l
47.4631 121.670 l
46.6945 121.484 l
45.9072 121.390 l
45.1136 121.390 l
44.3263 121.484 l
43.5577 121.670 l
42.8199 121.946 l
42.1245 122.307 l
41.4825 122.747 l
40.9040 123.260 l
40.3981 123.837 l
39.9729 124.470 l
39.6351 125.148 l
39.3898 125.860 l
39.2411 126.596 l
39.1913 127.344 l
39.2411 128.091 l
39.3898 128.827 l
39.6351 129.540 l
39.9729 130.218 l
40.3981 130.850 l
40.9040 131.427 l
41.4825 131.940 l
42.1245 132.381 l
42.8199 132.741 l
43.5577 133.017 l
44.3263 133.204 l
45.1136 133.297 l
45.9072 133.297 l
46.6945 133.204 l
47.4631 133.017 l
48.2009 132.741 l
48.8963 132.381 l
49.5383 131.940 l
50.1168 131.427 l
50.6227 130.850 l
51.0479 130.218 l
51.3857 129.540 l
51.6310 128.827 l
51.7797 128.091 l
51.8295 127.344 l
h
f
0 0 0 RG
newpath
51.8295 127.344 m
51.7797 126.596 l
51.6310 125.860 l
51.3857 125.148 l
51.0479 124.470 l
50.6227 123.837 l
50.1168 123.260 l
49.5383 122.747 l
48.8963 122.307 l
48.2009 121.946 l
47.4631 121.670 l
46.6945 121.484 l
45.9072 121.390 l
45.1136 121.390 l
44.3263 121.484 l
43.5577 121.670 l
42.8199 121.946 l
42.1245 122.307 l
41.4825 122.747 l
40.9040 123.260 l
40.3981 123.837 l
39.9729 124.470 l
39.6351 125.148 l
39.3898 125.860 l
39.2411 126.596 l
39.1913 127.344 l
39.2411 128.091 l
39.3898 128.827 l
39.6351 129.540 l
39.9729 130.218 l
40.3981 130.850 l
40.9040 131.427 l
41.4825 131.940 l
42.1245 132.381 l
42.8199 132.741 l
43.5577 133.017 l
44.3263 133.204 l
45.1136 133.297 l
45.9072 133.297 l
46.6945 133.204 l
47.4631 133.017 l
48.2009 132.741 l
48.8963 132.381 l
49.5383 131.940 l
50.1168 131.427 l
50.6227 130.850 l
51.0479 130.218 l
51.3857 129.540 l
51.6310 128.827 l
51.7797 128.091 l
51.8295 127.344 l
h
S
cliprestore
newpath
0 0 m
0 208.000 l
208.000 208.000 l
208.000 0 l
h
W
Q
q
12.9150 6.03225 192.572 181.967 rc
newpath
45.8636 128.011 m
45.1572 126.677 l
158.900 72.9867 l
157.134 69.6519 l
171.892 67.6881 l
161.373 77.6556 l
159.607 74.3207 l
45.8636 128.011 l
S
cliprestore
newpath
0 0 m
0 208.000 l
208.000 208.000 l
208.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
13.9150 187.000 m
203.487 187.000 l
S
Q
q
q
0 J
1 j
newpath
14.0000 187.000 m
14.0000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
15.4697 204.747 m
15.4697 203.765 15.6178 202.920 15.9140 202.211  c
16.2102 201.502 16.6038 200.974 17.0947 200.627  c
17.4755 200.352 17.8691 200.214 18.2753 200.214  c
18.9355 200.214 19.5279 200.551 20.0527 201.224  c
20.7086 202.057 21.0366 203.187 21.0366 204.613  c
21.0366 205.612 20.8927 206.460 20.6049 207.159  c
20.3172 207.857 19.9501 208.364 19.5036 208.679  c
19.0572 208.994 18.6266 209.152 18.2119 209.152  c
17.3909 209.152 16.7075 208.667 16.1616 207.698  c
15.7003 206.882 15.4697 205.898 15.4697 204.747  c
h
16.7138 204.905 m
16.7138 206.090 16.8598 207.057 17.1518 207.806  c
17.3930 208.437 17.7527 208.752 18.2309 208.752  c
18.4594 208.752 18.6964 208.649 18.9418 208.444  c
19.1873 208.239 19.3735 207.895 19.5004 207.413  c
19.6951 206.685 19.7924 205.659 19.7924 204.334  c
19.7924 203.352 19.6909 202.533 19.4877 201.877  c
19.3354 201.391 19.1386 201.046 18.8974 200.843  c
18.7239 200.703 18.5144 200.633 18.2690 200.633  c
17.9812 200.633 17.7252 200.762 17.5009 201.021  c
17.1962 201.372 16.9889 201.924 16.8789 202.677  c
16.7688 203.431 16.7138 204.173 16.7138 204.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 187.000 m
46.0000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
48.5234 201.236 m
50.6181 200.214 l
50.8276 200.214 l
50.8276 207.482 l
50.8276 207.965 50.8477 208.265 50.8879 208.384  c
50.9281 208.502 51.0117 208.593 51.1386 208.657  c
51.2656 208.720 51.5237 208.756 51.9130 208.765  c
51.9130 209.000 l
48.6757 209.000 l
48.6757 208.765 l
49.0820 208.756 49.3444 208.721 49.4628 208.660  c
49.5813 208.599 49.6639 208.516 49.7104 208.412  c
49.7570 208.309 49.7802 207.999 49.7802 207.482  c
49.7802 202.836 l
49.7802 202.210 49.7591 201.808 49.7168 201.630  c
49.6871 201.495 49.6332 201.395 49.5549 201.332  c
49.4766 201.268 49.3824 201.236 49.2724 201.236  c
49.1158 201.236 48.8979 201.302 48.6186 201.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
77.0000 187.000 m
77.0000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
84.9604 207.343 m
84.3574 209.000 l
79.2793 209.000 l
79.2793 208.765 l
80.7731 207.402 81.8247 206.289 82.4340 205.426  c
83.0434 204.563 83.3481 203.773 83.3481 203.058  c
83.3481 202.512 83.1809 202.064 82.8466 201.712  c
82.5123 201.361 82.1124 201.186 81.6469 201.186  c
81.2238 201.186 80.8439 201.309 80.5075 201.557  c
80.1711 201.804 79.9225 202.167 79.7617 202.646  c
79.5268 202.646 l
79.6326 201.863 79.9045 201.262 80.3425 200.843  c
80.7805 200.424 81.3274 200.214 81.9834 200.214  c
82.6816 200.214 83.2645 200.439 83.7321 200.887  c
84.1997 201.336 84.4335 201.865 84.4335 202.474  c
84.4335 202.910 84.3320 203.346 84.1289 203.782  c
83.8157 204.467 83.3079 205.193 82.6054 205.959  c
81.5517 207.110 80.8937 207.804 80.6313 208.041  c
82.8784 208.041 l
83.3354 208.041 83.6560 208.024 83.8400 207.990  c
84.0241 207.956 84.1902 207.888 84.3383 207.784  c
84.4864 207.680 84.6155 207.533 84.7255 207.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
109.000 187.000 m
109.000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
110.660 202.030 m
110.905 201.450 111.215 201.003 111.590 200.687  c
111.964 200.372 112.431 200.214 112.989 200.214  c
113.679 200.214 114.208 200.439 114.576 200.887  c
114.856 201.222 114.995 201.579 114.995 201.960  c
114.995 202.586 114.602 203.234 113.814 203.902  c
114.343 204.110 114.743 204.406 115.014 204.791  c
115.285 205.176 115.420 205.629 115.420 206.149  c
115.420 206.894 115.183 207.540 114.710 208.085  c
114.092 208.796 113.197 209.152 112.024 209.152  c
111.445 209.152 111.050 209.080 110.841 208.936  c
110.631 208.792 110.526 208.638 110.526 208.473  c
110.526 208.350 110.576 208.242 110.676 208.149  c
110.775 208.056 110.895 208.009 111.034 208.009  c
111.140 208.009 111.248 208.026 111.358 208.060  c
111.430 208.081 111.593 208.158 111.847 208.292  c
112.101 208.425 112.276 208.504 112.374 208.530  c
112.530 208.576 112.697 208.600 112.875 208.600  c
113.307 208.600 113.682 208.432 114.002 208.098  c
114.321 207.764 114.481 207.368 114.481 206.911  c
114.481 206.577 114.407 206.251 114.259 205.934  c
114.149 205.697 114.028 205.517 113.897 205.394  c
113.715 205.225 113.465 205.071 113.148 204.934  c
112.831 204.796 112.507 204.728 112.177 204.728  c
111.974 204.728 l
111.974 204.537 l
112.308 204.495 112.643 204.374 112.980 204.175  c
113.316 203.976 113.561 203.737 113.713 203.458  c
113.865 203.179 113.941 202.872 113.941 202.538  c
113.941 202.102 113.805 201.749 113.532 201.481  c
113.259 201.212 112.919 201.078 112.513 201.078  c
111.857 201.078 111.309 201.429 110.869 202.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
140.000 187.000 m
140.000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
148.049 205.826 m
148.049 206.727 l
146.894 206.727 l
146.894 209.000 l
145.846 209.000 l
145.846 206.727 l
142.203 206.727 l
142.203 205.915 l
146.195 200.214 l
146.894 200.214 l
146.894 205.826 l
h
145.846 205.826 m
145.846 201.554 l
142.825 205.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
172.000 187.000 m
172.000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.643 200.392 m
178.147 201.471 l
175.558 201.471 l
174.993 202.627 l
176.114 202.792 177.003 203.208 177.659 203.877  c
178.222 204.453 178.503 205.130 178.503 205.908  c
178.503 206.361 178.411 206.780 178.227 207.165  c
178.043 207.550 177.811 207.878 177.532 208.149  c
177.252 208.420 176.941 208.638 176.599 208.803  c
176.112 209.036 175.613 209.152 175.101 209.152  c
174.584 209.152 174.209 209.064 173.974 208.888  c
173.739 208.713 173.622 208.519 173.622 208.308  c
173.622 208.189 173.670 208.084 173.768 207.993  c
173.865 207.902 173.988 207.857 174.136 207.857  c
174.246 207.857 174.342 207.874 174.425 207.908  c
174.507 207.942 174.648 208.028 174.847 208.168  c
175.164 208.388 175.486 208.498 175.812 208.498  c
176.307 208.498 176.741 208.311 177.116 207.936  c
177.491 207.562 177.678 207.106 177.678 206.568  c
177.678 206.048 177.511 205.562 177.176 205.112  c
176.842 204.661 176.381 204.313 175.793 204.067  c
175.331 203.877 174.703 203.767 173.907 203.737  c
175.558 200.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
203.000 187.000 m
203.000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
210.827 200.214 m
210.827 200.449 l
210.268 200.504 209.812 200.615 209.459 200.783  c
209.105 200.950 208.756 201.205 208.411 201.547  c
208.067 201.890 207.781 202.272 207.554 202.693  c
207.328 203.114 207.139 203.615 206.986 204.194  c
207.596 203.775 208.207 203.566 208.821 203.566  c
209.409 203.566 209.919 203.803 210.351 204.277  c
210.782 204.751 210.998 205.360 210.998 206.105  c
210.998 206.824 210.780 207.480 210.344 208.073  c
209.820 208.792 209.126 209.152 208.262 209.152  c
207.674 209.152 207.175 208.957 206.764 208.568  c
205.960 207.810 205.558 206.829 205.558 205.623  c
205.558 204.852 205.713 204.120 206.022 203.426  c
206.330 202.732 206.772 202.117 207.345 201.579  c
207.918 201.042 208.467 200.680 208.992 200.494  c
209.517 200.307 210.006 200.214 210.459 200.214  c
h
206.878 204.658 m
206.802 205.229 206.764 205.690 206.764 206.042  c
206.764 206.448 206.839 206.889 206.990 207.365  c
207.140 207.841 207.363 208.219 207.659 208.498  c
207.875 208.697 208.137 208.796 208.446 208.796  c
208.814 208.796 209.144 208.623 209.433 208.276  c
209.723 207.929 209.868 207.434 209.868 206.791  c
209.868 206.067 209.724 205.441 209.437 204.912  c
209.149 204.383 208.740 204.118 208.211 204.118  c
208.051 204.118 207.878 204.152 207.694 204.220  c
207.510 204.287 207.238 204.433 206.878 204.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
30.0000 187.000 m
30.0000 189.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
61.0000 187.000 m
61.0000 189.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 187.000 m
93.0000 189.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
124.000 187.000 m
124.000 189.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
156.000 187.000 m
156.000 189.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
188.000 187.000 m
188.000 189.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
14.0000 187.000 m
14.0000 8.03225 l
S
Q
q
q
0 J
1 j
newpath
14.0000 187.000 m
11.0000 187.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 192.747 m
6.46972 191.765 6.61783 190.920 6.91406 190.211  c
7.21028 189.502 7.60384 188.974 8.09472 188.627  c
8.47558 188.352 8.86914 188.214 9.27539 188.214  c
9.93554 188.214 10.5279 188.551 11.0527 189.224  c
11.7086 190.057 12.0366 191.187 12.0366 192.613  c
12.0366 193.612 11.8927 194.460 11.6049 195.159  c
11.3172 195.857 10.9501 196.364 10.5036 196.679  c
10.0572 196.994 9.62662 197.152 9.21191 197.152  c
8.39095 197.152 7.70752 196.667 7.16162 195.698  c
6.70035 194.882 6.46972 193.898 6.46972 192.747  c
h
7.71386 192.905 m
7.71386 194.090 7.85986 195.057 8.15185 195.806  c
8.39306 196.437 8.75276 196.752 9.23095 196.752  c
9.45947 196.752 9.69645 196.649 9.94189 196.444  c
10.1873 196.239 10.3735 195.895 10.5004 195.413  c
10.6951 194.685 10.7924 193.659 10.7924 192.334  c
10.7924 191.352 10.6909 190.533 10.4877 189.877  c
10.3354 189.391 10.1386 189.046 9.89746 188.843  c
9.72395 188.703 9.51448 188.633 9.26904 188.633  c
8.98128 188.633 8.72526 188.762 8.50097 189.021  c
8.19628 189.372 7.98893 189.924 7.87890 190.677  c
7.76888 191.431 7.71386 192.173 7.71386 192.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 157.000 m
11.0000 157.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.52343 159.236 m
9.61816 158.214 l
9.82763 158.214 l
9.82763 165.482 l
9.82763 165.965 9.84773 166.265 9.88793 166.384  c
9.92814 166.502 10.0117 166.593 10.1386 166.657  c
10.2656 166.720 10.5237 166.756 10.9130 166.765  c
10.9130 167.000 l
7.67578 167.000 l
7.67578 166.765 l
8.08203 166.756 8.34440 166.721 8.46289 166.660  c
8.58138 166.599 8.66390 166.516 8.71044 166.412  c
8.75699 166.309 8.78027 165.999 8.78027 165.482  c
8.78027 160.836 l
8.78027 160.210 8.75911 159.808 8.71679 159.630  c
8.68717 159.495 8.63321 159.395 8.55493 159.332  c
8.47664 159.268 8.38248 159.236 8.27246 159.236  c
8.11588 159.236 7.89794 159.302 7.61865 159.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 127.000 m
11.0000 127.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.9604 135.343 m
11.3574 137.000 l
6.27929 137.000 l
6.27929 136.765 l
7.77311 135.402 8.82470 134.289 9.43408 133.426  c
10.0434 132.563 10.3481 131.773 10.3481 131.058  c
10.3481 130.512 10.1809 130.064 9.84668 129.712  c
9.51237 129.361 9.11246 129.186 8.64697 129.186  c
8.22379 129.186 7.84399 129.309 7.50756 129.557  c
7.17114 129.804 6.92252 130.167 6.76171 130.646  c
6.52685 130.646 l
6.63265 129.863 6.90454 129.262 7.34252 128.843  c
7.78051 128.424 8.32747 128.214 8.98339 128.214  c
9.68164 128.214 10.2645 128.439 10.7321 128.887  c
11.1997 129.336 11.4335 129.865 11.4335 130.474  c
11.4335 130.910 11.3320 131.346 11.1289 131.782  c
10.8157 132.467 10.3079 133.193 9.60546 133.959  c
8.55175 135.110 7.89371 135.804 7.63134 136.041  c
9.87841 136.041 l
10.3354 136.041 10.6560 136.024 10.8400 135.990  c
11.0241 135.956 11.1902 135.888 11.3383 135.784  c
11.4864 135.680 11.6155 135.533 11.7255 135.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 98.0000 m
11.0000 98.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.66015 100.030 m
6.90559 99.4505 7.21557 99.0030 7.59008 98.6877  c
7.96460 98.3724 8.43115 98.2148 8.98974 98.2148  c
9.67952 98.2148 10.2085 98.4391 10.5766 98.8877  c
10.8559 99.2220 10.9956 99.5795 10.9956 99.9604  c
10.9956 100.586 10.6020 101.234 9.81494 101.902  c
10.3439 102.110 10.7438 102.406 11.0146 102.791  c
11.2854 103.176 11.4209 103.629 11.4209 104.149  c
11.4209 104.894 11.1839 105.540 10.7099 106.085  c
10.0921 106.796 9.19710 107.152 8.02490 107.152  c
7.44515 107.152 7.05053 107.080 6.84106 106.936  c
6.63159 106.792 6.52685 106.638 6.52685 106.473  c
6.52685 106.350 6.57657 106.242 6.67602 106.149  c
6.77547 106.056 6.89502 106.009 7.03466 106.009  c
7.14046 106.009 7.24837 106.026 7.35839 106.060  c
7.43033 106.081 7.59326 106.158 7.84716 106.292  c
8.10107 106.425 8.27669 106.504 8.37402 106.530  c
8.53059 106.576 8.69775 106.600 8.87548 106.600  c
9.30712 106.600 9.68269 106.432 10.0022 106.098  c
10.3217 105.764 10.4814 105.368 10.4814 104.911  c
10.4814 104.577 10.4073 104.251 10.2592 103.934  c
10.1492 103.697 10.0286 103.517 9.89746 103.394  c
9.71549 103.225 9.46582 103.071 9.14843 102.934  c
8.83105 102.796 8.50732 102.728 8.17724 102.728  c
7.97412 102.728 l
7.97412 102.537 l
8.30843 102.495 8.64379 102.374 8.98022 102.175  c
9.31665 101.976 9.56103 101.737 9.71337 101.458  c
9.86572 101.179 9.94189 100.872 9.94189 100.538  c
9.94189 100.102 9.80542 99.7499 9.53247 99.4812  c
9.25952 99.2124 8.91992 99.0781 8.51367 99.0781  c
7.85774 99.0781 7.30973 99.4293 6.86962 100.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 68.0000 m
11.0000 68.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
12.0493 73.8261 m
12.0493 74.7275 l
10.8940 74.7275 l
10.8940 77.0000 l
9.84668 77.0000 l
9.84668 74.7275 l
6.20312 74.7275 l
6.20312 73.9150 l
10.1958 68.2148 l
10.8940 68.2148 l
10.8940 73.8261 l
h
9.84668 73.8261 m
9.84668 69.5542 l
6.82519 73.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 38.0000 m
11.0000 38.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.6430 38.3925 m
11.1479 39.4716 l
8.55810 39.4716 l
7.99316 40.6269 l
9.11458 40.7919 10.0032 41.2088 10.6591 41.8774  c
11.2220 42.4529 11.5034 43.1300 11.5034 43.9086  c
11.5034 44.3614 11.4113 44.7804 11.2272 45.1655  c
11.0432 45.5506 10.8115 45.8785 10.5322 46.1494  c
10.2529 46.4202 9.94189 46.6381 9.59912 46.8032  c
9.11246 47.0359 8.61311 47.1523 8.10107 47.1523  c
7.58479 47.1523 7.20922 47.0645 6.97436 46.8889  c
6.73950 46.7133 6.62207 46.5196 6.62207 46.3081  c
6.62207 46.1896 6.67073 46.0848 6.76806 45.9939  c
6.86539 45.9029 6.98811 45.8574 7.13623 45.8574  c
7.24625 45.8574 7.34252 45.8743 7.42504 45.9082  c
7.50756 45.9420 7.64827 46.0288 7.84716 46.1684  c
8.16455 46.3885 8.48616 46.4985 8.81201 46.4985  c
9.30712 46.4985 9.74194 46.3112 10.1164 45.9367  c
10.4909 45.5622 10.6782 45.1062 10.6782 44.5688  c
10.6782 44.0483 10.5110 43.5627 10.1767 43.1120  c
9.84244 42.6613 9.38118 42.3133 8.79296 42.0678  c
8.33170 41.8774 7.70328 41.7674 6.90771 41.7377  c
8.55810 38.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 8.00000 m
11.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.8271 9.21484 m
11.8271 9.44970 l
11.2685 9.50472 10.8125 9.61580 10.4592 9.78295  c
10.1058 9.95011 9.75675 10.2050 9.41186 10.5478  c
9.06697 10.8906 8.78133 11.2725 8.55493 11.6936  c
8.32853 12.1146 8.13916 12.6150 7.98681 13.1948  c
8.59619 12.7758 9.20768 12.5664 9.82128 12.5664  c
10.4095 12.5664 10.9194 12.8033 11.3510 13.2773  c
11.7827 13.7513 11.9985 14.3606 11.9985 15.1054  c
11.9985 15.8248 11.7806 16.4807 11.3447 17.0732  c
10.8199 17.7926 10.1259 18.1523 9.26269 18.1523  c
8.67447 18.1523 8.17513 17.9576 7.76464 17.5683  c
6.96061 16.8108 6.55859 15.8291 6.55859 14.6230  c
6.55859 13.8528 6.71305 13.1207 7.02197 12.4267  c
7.33089 11.7327 7.77205 11.1170 8.34545 10.5795  c
8.91886 10.0421 9.46793 9.68033 9.99267 9.49414  c
10.5174 9.30794 11.0061 9.21484 11.4589 9.21484  c
h
7.87890 13.6582 m
7.80273 14.2294 7.76464 14.6907 7.76464 15.0419  c
7.76464 15.4482 7.83976 15.8894 7.98999 16.3654  c
8.14021 16.8415 8.36344 17.2192 8.65966 17.4985  c
8.87548 17.6974 9.13785 17.7968 9.44677 17.7968  c
9.81494 17.7968 10.1439 17.6233 10.4338 17.2763  c
10.7237 16.9293 10.8686 16.4342 10.8686 15.7910  c
10.8686 15.0673 10.7247 14.4410 10.4370 13.9121  c
10.1492 13.3831 9.74088 13.1186 9.21191 13.1186  c
9.05110 13.1186 8.87866 13.1525 8.69458 13.2202  c
8.51049 13.2879 8.23860 13.4339 7.87890 13.6582  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 172.000 m
12.0000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 142.000 m
12.0000 142.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 112.000 m
12.0000 112.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 83.0000 m
12.0000 83.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 53.0000 m
12.0000 53.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
14.0000 23.0000 m
12.0000 23.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 218 218 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
