%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N5ŒŽ31“ú 11Žž17•ª35•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
156 156 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
156.000 0 l
156.000 156.000 l
0 156.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 146 146 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
4.84074 6.04426 142.159 132.455 rc
newpath
5.84074 72.7719 m
8.87401 81.6091 l
11.5132 89.1694 l
14.4813 97.3887 l
17.4691 105.216 l
20.4427 112.421 l
23.1995 118.467 l
26.0541 123.980 l
29.0063 128.787 l
31.9491 132.590 l
34.9761 135.402 l
36.3092 136.271 l
37.6423 136.911 l
39.1430 137.354 l
40.6437 137.500 l
42.1506 137.347 l
43.6575 136.896 l
45.1097 136.180 l
46.5619 135.192 l
49.1993 132.715 l
52.3355 128.669 l
54.9922 124.361 l
58.0827 118.423 l
60.8182 112.422 l
63.8195 105.146 l
66.6775 97.6647 l
69.6595 89.4190 l
72.3979 81.5777 l
78.4197 64.0328 l
81.0905 56.3810 l
83.9751 48.3874 l
86.9551 40.5646 l
89.8704 33.4740 l
92.6912 27.2594 l
95.8231 21.2269 l
98.6373 16.6811 l
101.642 12.8273 l
104.364 10.2851 l
105.853 9.29235 l
107.341 8.58610 l
108.742 8.18612 l
110.142 8.04426 l
111.606 8.17253 l
113.070 8.58287 l
114.501 9.25508 l
115.932 10.1924 l
118.929 12.9951 l
121.815 16.7282 l
124.766 21.5280 l
127.693 27.1858 l
130.383 33.0882 l
133.465 40.5663 l
136.223 47.7871 l
139.162 55.9091 l
141.976 63.9627 l
145.000 72.7719 l
S
cliprestore
newpath
0 0 m
0 146.000 l
146.000 146.000 l
146.000 0 l
h
W
Q
q
0.196078 0.803922 0.196078 RG
4.84074 6.04426 142.159 132.455 rc
newpath
5.84074 137.500 m
7.35737 137.348 l
8.87401 136.893 l
10.1936 136.253 l
11.5132 135.388 l
14.4813 132.636 l
17.4691 128.781 l
20.4427 123.934 l
23.1995 118.616 l
26.0541 112.362 l
29.0063 105.205 l
31.9491 97.4989 l
34.9761 89.1183 l
37.6423 81.4787 l
43.6575 63.9529 l
46.5619 55.6437 l
49.1993 48.3494 l
52.3355 40.1340 l
54.9922 33.6795 l
58.0827 26.8842 l
60.8182 21.6096 l
63.8195 16.7220 l
66.6775 13.0219 l
69.6595 10.2212 l
71.0287 9.31227 l
72.3979 8.64573 l
73.8748 8.20150 l
75.3516 8.04428 l
76.8857 8.18559 l
78.4197 8.63662 l
79.7551 9.27977 l
81.0905 10.1536 l
83.9751 12.8127 l
86.9551 16.6256 l
89.8704 21.3386 l
92.6912 26.7467 l
95.8231 33.6206 l
98.6373 40.4682 l
101.642 48.3515 l
104.364 55.8866 l
107.341 64.4119 l
113.070 81.1071 l
115.932 89.3102 l
118.929 97.6003 l
121.815 105.157 l
124.766 112.316 l
127.693 118.724 l
130.383 123.908 l
133.465 128.919 l
136.223 132.483 l
139.162 135.264 l
140.569 136.209 l
141.976 136.897 l
143.488 137.349 l
145.000 137.500 l
S
cliprestore
newpath
0 0 m
0 146.000 l
146.000 146.000 l
146.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
5.84074 73.0000 m
145.000 73.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
103 91 14 15 rc
newpath
109.278 97.2553 m
109.486 97.4754 109.642 97.6954 109.748 97.9155  c
109.824 98.0678 109.949 98.4677 110.123 99.1152  c
110.681 98.2773 l
110.829 98.0742 111.009 97.8806 111.221 97.6965  c
111.432 97.5124 111.619 97.3865 111.779 97.3188  c
111.881 97.2765 111.993 97.2553 112.116 97.2553  c
112.298 97.2553 112.443 97.3040 112.551 97.4013  c
112.658 97.4987 112.712 97.6171 112.712 97.7568  c
112.712 97.9176 112.681 98.0276 112.617 98.0869  c
112.499 98.1927 112.363 98.2456 112.211 98.2456  c
112.122 98.2456 112.027 98.2265 111.925 98.1884  c
111.726 98.1207 111.593 98.0869 111.525 98.0869  c
111.424 98.0869 111.303 98.1461 111.164 98.2646  c
110.901 98.4847 110.588 98.9099 110.224 99.5405  c
110.745 101.724 l
110.825 102.058 110.893 102.258 110.948 102.324  c
111.003 102.389 111.058 102.422 111.113 102.422  c
111.202 102.422 111.305 102.373 111.424 102.276  c
111.657 102.081 111.856 101.827 112.021 101.514  c
112.243 101.628 l
111.976 102.128 111.638 102.543 111.227 102.873  c
110.994 103.059 110.798 103.152 110.637 103.152  c
110.400 103.152 110.211 103.019 110.072 102.752  c
109.983 102.587 109.799 101.876 109.520 100.619  c
108.859 101.766 108.330 102.504 107.933 102.835  c
107.675 103.046 107.425 103.152 107.184 103.152  c
107.014 103.152 106.860 103.091 106.720 102.968  c
106.619 102.875 106.568 102.750 106.568 102.593  c
106.568 102.454 106.614 102.337 106.708 102.244  c
106.801 102.151 106.915 102.105 107.050 102.105  c
107.186 102.105 107.330 102.172 107.482 102.308  c
107.592 102.405 107.677 102.454 107.736 102.454  c
107.787 102.454 107.852 102.420 107.933 102.352  c
108.132 102.191 108.402 101.844 108.745 101.311  c
109.088 100.778 109.312 100.393 109.418 100.156  c
109.156 99.1279 109.014 98.5841 108.993 98.5249  c
108.895 98.2498 108.768 98.0551 108.612 97.9409  c
108.455 97.8266 108.225 97.7695 107.920 97.7695  c
107.823 97.7695 107.710 97.7737 107.584 97.7822  c
107.584 97.5537 l
h
f
Q
cliprestore
newpath
0 0 m
0 146.000 l
146.000 146.000 l
146.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
9.00000 73.0000 m
9.00000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
5 82 7 13 rc
newpath
15.7900 89.4380 m
7.21000 89.4380 l
7.21000 88.7620 l
15.7900 88.7620 l
h
f
Q
newpath
14.6601 86.0302 m
14.9056 85.4505 15.2155 85.0030 15.5900 84.6877  c
15.9646 84.3724 16.4311 84.2148 16.9897 84.2148  c
17.6795 84.2148 18.2085 84.4391 18.5766 84.8877  c
18.8559 85.2220 18.9956 85.5795 18.9956 85.9604  c
18.9956 86.5867 18.6020 87.2342 17.8149 87.9028  c
18.3439 88.1101 18.7438 88.4064 19.0146 88.7915  c
19.2854 89.1766 19.4209 89.6293 19.4209 90.1499  c
19.4209 90.8946 19.1839 91.5400 18.7099 92.0859  c
18.0921 92.7968 17.1971 93.1523 16.0249 93.1523  c
15.4451 93.1523 15.0505 93.0804 14.8410 92.9365  c
14.6315 92.7926 14.5268 92.6381 14.5268 92.4731  c
14.5268 92.3504 14.5765 92.2425 14.6760 92.1494  c
14.7754 92.0563 14.8950 92.0097 15.0346 92.0097  c
15.1404 92.0097 15.2483 92.0266 15.3584 92.0605  c
15.4303 92.0817 15.5932 92.1589 15.8471 92.2922  c
16.1010 92.4255 16.2766 92.5048 16.3740 92.5302  c
16.5306 92.5768 16.6977 92.6001 16.8754 92.6001  c
17.3071 92.6001 17.6827 92.4329 18.0022 92.0986  c
18.3217 91.7643 18.4814 91.3686 18.4814 90.9116  c
18.4814 90.5773 18.4073 90.2514 18.2592 89.9340  c
18.1492 89.6971 18.0286 89.5172 17.8974 89.3945  c
17.7154 89.2252 17.4658 89.0718 17.1484 88.9343  c
16.8310 88.7967 16.5073 88.7280 16.1772 88.7280  c
15.9741 88.7280 l
15.9741 88.5376 l
16.3084 88.4952 16.6438 88.3746 16.9802 88.1757  c
17.3166 87.9768 17.5610 87.7377 17.7133 87.4585  c
17.8657 87.1792 17.9418 86.8724 17.9418 86.5380  c
17.9418 86.1022 17.8054 85.7499 17.5324 85.4812  c
17.2595 85.2124 16.9199 85.0781 16.5136 85.0781  c
15.8577 85.0781 15.3097 85.4293 14.8696 86.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
31.0000 73.0000 m
31.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
28 82 7 13 rc
newpath
38.7900 89.4380 m
30.2100 89.4380 l
30.2100 88.7620 l
38.7900 88.7620 l
h
f
Q
newpath
42.9604 91.3432 m
42.3574 93.0000 l
37.2793 93.0000 l
37.2793 92.7651 l
38.7731 91.4025 39.8247 90.2895 40.4340 89.4262  c
41.0434 88.5629 41.3481 87.7737 41.3481 87.0585  c
41.3481 86.5127 41.1809 86.0641 40.8466 85.7128  c
40.5123 85.3616 40.1124 85.1860 39.6469 85.1860  c
39.2238 85.1860 38.8439 85.3098 38.5075 85.5573  c
38.1711 85.8049 37.9225 86.1678 37.7617 86.6460  c
37.5268 86.6460 l
37.6326 85.8631 37.9045 85.2622 38.3425 84.8432  c
38.7805 84.4243 39.3274 84.2148 39.9834 84.2148  c
40.6816 84.2148 41.2645 84.4391 41.7321 84.8877  c
42.1997 85.3362 42.4335 85.8652 42.4335 86.4746  c
42.4335 86.9104 42.3320 87.3463 42.1289 87.7822  c
41.8157 88.4677 41.3079 89.1935 40.6054 89.9594  c
39.5517 91.1105 38.8937 91.8045 38.6313 92.0415  c
40.8784 92.0415 l
41.3354 92.0415 41.6560 92.0245 41.8400 91.9907  c
42.0241 91.9568 42.1902 91.8881 42.3383 91.7844  c
42.4864 91.6807 42.6155 91.5336 42.7255 91.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
53.0000 73.0000 m
53.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
50 82 7 13 rc
newpath
60.7900 89.4380 m
52.2100 89.4380 l
52.2100 88.7620 l
60.7900 88.7620 l
h
f
Q
newpath
60.5234 85.2368 m
62.6181 84.2148 l
62.8276 84.2148 l
62.8276 91.4829 l
62.8276 91.9653 62.8477 92.2657 62.8879 92.3842  c
62.9281 92.5027 63.0117 92.5937 63.1386 92.6572  c
63.2656 92.7207 63.5237 92.7566 63.9130 92.7651  c
63.9130 93.0000 l
60.6757 93.0000 l
60.6757 92.7651 l
61.0820 92.7566 61.3444 92.7217 61.4628 92.6604  c
61.5813 92.5990 61.6639 92.5165 61.7104 92.4128  c
61.7570 92.3091 61.7802 91.9991 61.7802 91.4829  c
61.7802 86.8364 l
61.7802 86.2101 61.7591 85.8081 61.7168 85.6303  c
61.6871 85.4949 61.6332 85.3955 61.5549 85.3320  c
61.4766 85.2685 61.3824 85.2368 61.2724 85.2368  c
61.1158 85.2368 60.8979 85.3024 60.6186 85.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 73.0000 m
75.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
72.4697 87.7470 m
72.4697 86.7653 72.6178 85.9200 72.9140 85.2111  c
73.2102 84.5023 73.6038 83.9744 74.0947 83.6274  c
74.4755 83.3523 74.8691 83.2148 75.2753 83.2148  c
75.9355 83.2148 76.5279 83.5512 77.0527 84.2241  c
77.7086 85.0577 78.0366 86.1876 78.0366 87.6137  c
78.0366 88.6124 77.8927 89.4609 77.6049 90.1591  c
77.3172 90.8574 76.9501 91.3641 76.5036 91.6794  c
76.0572 91.9947 75.6266 92.1523 75.2119 92.1523  c
74.3909 92.1523 73.7075 91.6678 73.1616 90.6987  c
72.7003 89.8820 72.4697 88.8981 72.4697 87.7470  c
h
73.7138 87.9057 m
73.7138 89.0906 73.8598 90.0576 74.1518 90.8066  c
74.3930 91.4371 74.7527 91.7524 75.2309 91.7524  c
75.4594 91.7524 75.6964 91.6498 75.9418 91.4445  c
76.1873 91.2393 76.3735 90.8955 76.5004 90.4130  c
76.6951 89.6852 76.7924 88.6590 76.7924 87.3344  c
76.7924 86.3527 76.6909 85.5338 76.4877 84.8779  c
76.3354 84.3912 76.1386 84.0463 75.8974 83.8432  c
75.7239 83.7036 75.5144 83.6337 75.2690 83.6337  c
74.9812 83.6337 74.7252 83.7628 74.5009 84.0210  c
74.1962 84.3722 73.9889 84.9244 73.8789 85.6777  c
73.7688 86.4309 73.7138 87.1736 73.7138 87.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
98.0000 73.0000 m
98.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
100.523 85.2368 m
102.618 84.2148 l
102.827 84.2148 l
102.827 91.4829 l
102.827 91.9653 102.847 92.2657 102.887 92.3842  c
102.928 92.5027 103.011 92.5937 103.138 92.6572  c
103.265 92.7207 103.523 92.7566 103.913 92.7651  c
103.913 93.0000 l
100.675 93.0000 l
100.675 92.7651 l
101.082 92.7566 101.344 92.7217 101.462 92.6604  c
101.581 92.5990 101.663 92.5165 101.710 92.4128  c
101.757 92.3091 101.780 91.9991 101.780 91.4829  c
101.780 86.8364 l
101.780 86.2101 101.759 85.8081 101.716 85.6303  c
101.687 85.4949 101.633 85.3955 101.554 85.3320  c
101.476 85.2685 101.382 85.2368 101.272 85.2368  c
101.115 85.2368 100.897 85.3024 100.618 85.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
120.000 73.0000 m
120.000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
126.960 91.3432 m
126.357 93.0000 l
121.279 93.0000 l
121.279 92.7651 l
122.773 91.4025 123.824 90.2895 124.434 89.4262  c
125.043 88.5629 125.348 87.7737 125.348 87.0585  c
125.348 86.5127 125.181 86.0641 124.846 85.7128  c
124.512 85.3616 124.112 85.1860 123.647 85.1860  c
123.223 85.1860 122.844 85.3098 122.507 85.5573  c
122.171 85.8049 121.922 86.1678 121.761 86.6460  c
121.526 86.6460 l
121.632 85.8631 121.904 85.2622 122.342 84.8432  c
122.780 84.4243 123.327 84.2148 123.983 84.2148  c
124.681 84.2148 125.264 84.4391 125.732 84.8877  c
126.199 85.3362 126.433 85.8652 126.433 86.4746  c
126.433 86.9104 126.332 87.3463 126.128 87.7822  c
125.815 88.4677 125.307 89.1935 124.605 89.9594  c
123.551 91.1105 122.893 91.8045 122.631 92.0415  c
124.878 92.0415 l
125.335 92.0415 125.656 92.0245 125.840 91.9907  c
126.024 91.9568 126.190 91.8881 126.338 91.7844  c
126.486 91.6807 126.615 91.5336 126.725 91.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
142.000 73.0000 m
142.000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
143.660 86.0302 m
143.905 85.4505 144.215 85.0030 144.590 84.6877  c
144.964 84.3724 145.431 84.2148 145.989 84.2148  c
146.679 84.2148 147.208 84.4391 147.576 84.8877  c
147.856 85.2220 147.995 85.5795 147.995 85.9604  c
147.995 86.5867 147.602 87.2342 146.814 87.9028  c
147.343 88.1101 147.743 88.4064 148.014 88.7915  c
148.285 89.1766 148.420 89.6293 148.420 90.1499  c
148.420 90.8946 148.183 91.5400 147.710 92.0859  c
147.092 92.7968 146.197 93.1523 145.024 93.1523  c
144.445 93.1523 144.050 93.0804 143.841 92.9365  c
143.631 92.7926 143.526 92.6381 143.526 92.4731  c
143.526 92.3504 143.576 92.2425 143.676 92.1494  c
143.775 92.0563 143.895 92.0097 144.034 92.0097  c
144.140 92.0097 144.248 92.0266 144.358 92.0605  c
144.430 92.0817 144.593 92.1589 144.847 92.2922  c
145.101 92.4255 145.276 92.5048 145.374 92.5302  c
145.530 92.5768 145.697 92.6001 145.875 92.6001  c
146.307 92.6001 146.682 92.4329 147.002 92.0986  c
147.321 91.7643 147.481 91.3686 147.481 90.9116  c
147.481 90.5773 147.407 90.2514 147.259 89.9340  c
147.149 89.6971 147.028 89.5172 146.897 89.3945  c
146.715 89.2252 146.465 89.0718 146.148 88.9343  c
145.831 88.7967 145.507 88.7280 145.177 88.7280  c
144.974 88.7280 l
144.974 88.5376 l
145.308 88.4952 145.643 88.3746 145.980 88.1757  c
146.316 87.9768 146.561 87.7377 146.713 87.4585  c
146.865 87.1792 146.941 86.8724 146.941 86.5380  c
146.941 86.1022 146.805 85.7499 146.532 85.4812  c
146.259 85.2124 145.919 85.0781 145.513 85.0781  c
144.857 85.0781 144.309 85.4293 143.869 86.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
20.0000 73.0000 m
20.0000 74.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
42.0000 73.0000 m
42.0000 74.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
64.0000 73.0000 m
64.0000 74.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
86.0000 73.0000 m
86.0000 74.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
109.000 73.0000 m
109.000 74.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
131.000 73.0000 m
131.000 74.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
75.0000 137.500 m
75.0000 8.04426 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
35 33 8 15 rc
Q
cliprestore
newpath
0 0 m
0 146.000 l
146.000 146.000 l
146.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
75.0000 138.000 m
73.0000 138.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
60 136 7 13 rc
newpath
70.7900 143.438 m
62.2100 143.438 l
62.2100 142.762 l
70.7900 142.762 l
h
f
Q
newpath
70.5234 139.236 m
72.6181 138.214 l
72.8276 138.214 l
72.8276 145.482 l
72.8276 145.965 72.8477 146.265 72.8879 146.384  c
72.9281 146.502 73.0117 146.593 73.1386 146.657  c
73.2656 146.720 73.5237 146.756 73.9130 146.765  c
73.9130 147.000 l
70.6757 147.000 l
70.6757 146.765 l
71.0820 146.756 71.3444 146.721 71.4628 146.660  c
71.5813 146.599 71.6639 146.516 71.7104 146.412  c
71.7570 146.309 71.7802 145.999 71.7802 145.482  c
71.7802 140.836 l
71.7802 140.210 71.7591 139.808 71.7168 139.630  c
71.6871 139.495 71.6332 139.395 71.5549 139.332  c
71.4766 139.268 71.3824 139.236 71.2724 139.236  c
71.1158 139.236 70.8979 139.302 70.6186 139.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 105.000 m
73.0000 105.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
50 104 7 13 rc
newpath
60.7900 111.438 m
52.2100 111.438 l
52.2100 110.762 l
60.7900 110.762 l
h
f
Q
newpath
59.4697 110.747 m
59.4697 109.765 59.6178 108.920 59.9140 108.211  c
60.2102 107.502 60.6038 106.974 61.0947 106.627  c
61.4755 106.352 61.8691 106.214 62.2753 106.214  c
62.9355 106.214 63.5279 106.551 64.0527 107.224  c
64.7086 108.057 65.0366 109.187 65.0366 110.613  c
65.0366 111.612 64.8927 112.460 64.6049 113.159  c
64.3172 113.857 63.9501 114.364 63.5036 114.679  c
63.0572 114.994 62.6266 115.152 62.2119 115.152  c
61.3909 115.152 60.7075 114.667 60.1616 113.698  c
59.7003 112.882 59.4697 111.898 59.4697 110.747  c
h
60.7138 110.905 m
60.7138 112.090 60.8598 113.057 61.1518 113.806  c
61.3930 114.437 61.7527 114.752 62.2309 114.752  c
62.4594 114.752 62.6964 114.649 62.9418 114.444  c
63.1873 114.239 63.3735 113.895 63.5004 113.413  c
63.6951 112.685 63.7924 111.659 63.7924 110.334  c
63.7924 109.352 63.6909 108.533 63.4877 107.877  c
63.3354 107.391 63.1386 107.046 62.8974 106.843  c
62.7239 106.703 62.5144 106.633 62.2690 106.633  c
61.9812 106.633 61.7252 106.762 61.5009 107.021  c
61.1962 107.372 60.9889 107.924 60.8789 108.677  c
60.7688 109.431 60.7138 110.173 60.7138 110.905  c
h
67.6250 113.768 m
67.8238 113.768 67.9910 113.837 68.1264 113.974  c
68.2618 114.112 68.3295 114.278 68.3295 114.473  c
68.3295 114.667 68.2608 114.833 68.1232 114.971  c
67.9857 115.109 67.8196 115.177 67.6250 115.177  c
67.4303 115.177 67.2642 115.109 67.1267 114.971  c
66.9891 114.833 66.9204 114.667 66.9204 114.473  c
66.9204 114.274 66.9891 114.107 67.1267 113.971  c
67.2642 113.836 67.4303 113.768 67.6250 113.768  c
h
74.6430 106.392 m
74.1479 107.471 l
71.5581 107.471 l
70.9931 108.627 l
72.1145 108.792 73.0032 109.208 73.6591 109.877  c
74.2220 110.453 74.5034 111.130 74.5034 111.908  c
74.5034 112.361 74.4113 112.780 74.2272 113.165  c
74.0432 113.550 73.8115 113.878 73.5322 114.149  c
73.2529 114.420 72.9418 114.638 72.5991 114.803  c
72.1124 115.036 71.6131 115.152 71.1010 115.152  c
70.5848 115.152 70.2092 115.064 69.9743 114.888  c
69.7395 114.713 69.6220 114.519 69.6220 114.308  c
69.6220 114.189 69.6707 114.084 69.7680 113.993  c
69.8654 113.902 69.9881 113.857 70.1362 113.857  c
70.2462 113.857 70.3425 113.874 70.4250 113.908  c
70.5075 113.942 70.6482 114.028 70.8471 114.168  c
71.1645 114.388 71.4861 114.498 71.8120 114.498  c
72.3071 114.498 72.7419 114.311 73.1164 113.936  c
73.4909 113.562 73.6782 113.106 73.6782 112.568  c
73.6782 112.048 73.5110 111.562 73.1767 111.112  c
72.8424 110.661 72.3811 110.313 71.7929 110.067  c
71.3317 109.877 70.7032 109.767 69.9077 109.737  c
71.5581 106.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 73.0000 m
73.0000 73.0000 l
S
Q
q
0 J
1 j
newpath
75.0000 40.0000 m
73.0000 40.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
59.4697 45.7470 m
59.4697 44.7653 59.6178 43.9200 59.9140 43.2111  c
60.2102 42.5023 60.6038 41.9744 61.0947 41.6274  c
61.4755 41.3523 61.8691 41.2148 62.2753 41.2148  c
62.9355 41.2148 63.5279 41.5512 64.0527 42.2241  c
64.7086 43.0577 65.0366 44.1876 65.0366 45.6137  c
65.0366 46.6124 64.8927 47.4609 64.6049 48.1591  c
64.3172 48.8574 63.9501 49.3641 63.5036 49.6794  c
63.0572 49.9947 62.6266 50.1523 62.2119 50.1523  c
61.3909 50.1523 60.7075 49.6678 60.1616 48.6987  c
59.7003 47.8820 59.4697 46.8981 59.4697 45.7470  c
h
60.7138 45.9057 m
60.7138 47.0906 60.8598 48.0576 61.1518 48.8066  c
61.3930 49.4371 61.7527 49.7524 62.2309 49.7524  c
62.4594 49.7524 62.6964 49.6498 62.9418 49.4445  c
63.1873 49.2393 63.3735 48.8955 63.5004 48.4130  c
63.6951 47.6852 63.7924 46.6590 63.7924 45.3344  c
63.7924 44.3527 63.6909 43.5338 63.4877 42.8779  c
63.3354 42.3912 63.1386 42.0463 62.8974 41.8432  c
62.7239 41.7036 62.5144 41.6337 62.2690 41.6337  c
61.9812 41.6337 61.7252 41.7628 61.5009 42.0210  c
61.1962 42.3722 60.9889 42.9244 60.8789 43.6777  c
60.7688 44.4309 60.7138 45.1736 60.7138 45.9057  c
h
67.6250 48.7685 m
67.8238 48.7685 67.9910 48.8373 68.1264 48.9748  c
68.2618 49.1123 68.3295 49.2784 68.3295 49.4731  c
68.3295 49.6678 68.2608 49.8339 68.1232 49.9714  c
67.9857 50.1089 67.8196 50.1777 67.6250 50.1777  c
67.4303 50.1777 67.2642 50.1089 67.1267 49.9714  c
66.9891 49.8339 66.9204 49.6678 66.9204 49.4731  c
66.9204 49.2742 66.9891 49.1071 67.1267 48.9716  c
67.2642 48.8362 67.4303 48.7685 67.6250 48.7685  c
h
74.6430 41.3925 m
74.1479 42.4716 l
71.5581 42.4716 l
70.9931 43.6269 l
72.1145 43.7919 73.0032 44.2088 73.6591 44.8774  c
74.2220 45.4529 74.5034 46.1300 74.5034 46.9086  c
74.5034 47.3614 74.4113 47.7804 74.2272 48.1655  c
74.0432 48.5506 73.8115 48.8785 73.5322 49.1494  c
73.2529 49.4202 72.9418 49.6381 72.5991 49.8032  c
72.1124 50.0359 71.6131 50.1523 71.1010 50.1523  c
70.5848 50.1523 70.2092 50.0645 69.9743 49.8889  c
69.7395 49.7133 69.6220 49.5196 69.6220 49.3081  c
69.6220 49.1896 69.6707 49.0848 69.7680 48.9939  c
69.8654 48.9029 69.9881 48.8574 70.1362 48.8574  c
70.2462 48.8574 70.3425 48.8743 70.4250 48.9082  c
70.5075 48.9420 70.6482 49.0288 70.8471 49.1684  c
71.1645 49.3885 71.4861 49.4985 71.8120 49.4985  c
72.3071 49.4985 72.7419 49.3112 73.1164 48.9367  c
73.4909 48.5622 73.6782 48.1062 73.6782 47.5688  c
73.6782 47.0483 73.5110 46.5627 73.1767 46.1120  c
72.8424 45.6613 72.3811 45.3133 71.7929 45.0678  c
71.3317 44.8774 70.7032 44.7674 69.9077 44.7377  c
71.5581 41.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 8.00000 m
73.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
70.5234 10.2368 m
72.6181 9.21484 l
72.8276 9.21484 l
72.8276 16.4829 l
72.8276 16.9653 72.8477 17.2657 72.8879 17.3842  c
72.9281 17.5027 73.0117 17.5937 73.1386 17.6572  c
73.2656 17.7207 73.5237 17.7566 73.9130 17.7651  c
73.9130 18.0000 l
70.6757 18.0000 l
70.6757 17.7651 l
71.0820 17.7566 71.3444 17.7217 71.4628 17.6604  c
71.5813 17.5990 71.6639 17.5165 71.7104 17.4128  c
71.7570 17.3091 71.7802 16.9991 71.7802 16.4829  c
71.7802 11.8364 l
71.7802 11.2101 71.7591 10.8081 71.7168 10.6303  c
71.6871 10.4949 71.6332 10.3955 71.5549 10.3320  c
71.4766 10.2685 71.3824 10.2368 71.2724 10.2368  c
71.1158 10.2368 70.8979 10.3024 70.6186 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 131.000 m
74.0000 131.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 125.000 m
74.0000 125.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 118.000 m
74.0000 118.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 112.000 m
74.0000 112.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 99.0000 m
74.0000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 92.0000 m
74.0000 92.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 86.0000 m
74.0000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 79.0000 m
74.0000 79.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 66.0000 m
74.0000 66.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 60.0000 m
74.0000 60.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 53.0000 m
74.0000 53.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 47.0000 m
74.0000 47.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 34.0000 m
74.0000 34.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 27.0000 m
74.0000 27.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 21.0000 m
74.0000 21.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
75.0000 15.0000 m
74.0000 15.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 156 156 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
