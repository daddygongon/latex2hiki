%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (bob) ()%%Title: (EigenVectors3plot1.eps)%%CreationDate: 11/12/02 14:11%%Canvassize: 16383%%BoundingBox: 242 153 598 440%%HiResBoundingBox: 242 153.1953 598 440%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentFonts: Helvetica%%DocumentSuppliedFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 1%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.929717 0.879728 0.890196 0.799985 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623] 1)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7754 421.5 296.7754%AI3_TileBox: 141.4448 -82.3623 700.4453 700.6377%AI3_DocumentPreview: Header%AI5_ArtSize: 841.8896 595.2754%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -172 649.2754 1 1172 652 26 0 0 38 141 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 104 8%%BeginData: 8354 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFD25FF7DFD7EFF5227A8A87DA87D7D%7DA87D7D7DA87D7D7DA87D7D7DA87DA87DA87D7D7DA87D7D7DA87D7D7DA8%7D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D%7DA87D7D7DA87D7D7DA87D7D7DA87DA8FD2CFF7D52FF5252FD127D769AFD%397DA852A8FD2EFF7D52FD13FFC3FD3AFF7D7DFD2EFF7D7DFD13FFCAC3FD%39FF7DA8FD2EFF7D52FD14FFC3CAFD38FF7D7DFD2EFF527DFD14FFCAC3FD%38FF7DA8FD2EFF7D52FD15FFBCCAFD37FF7D7DFD2EFF7D7DFD15FFCBBDFD%37FF7DA8FD2DFFA85252FD16FFC3CAFD36FF7D7DFD2EFF527DFD16FFCAC3%FD36FF7DA8FD2EFF7D52FD17FFBCCAFD35FF7D7DFD2EFF7D7DFD17FFCBC3%FD35FF7DA8FD2DFFA85252FD18FFC3CAFD34FF7D7DFD2EFF527DFD18FFCA%C3FD34FF7DA8FD2EFF7D52FD19FFBDCAFD33FF7D7DFD2EFF7D7DFD19FFCB%C3FD33FF7DA8FD2DFFA85252FD1AFFC3CAFD32FF7D7DFD2EFF527DFD1AFF%CAC4FD32FF7DA8FD2EFF7D52FD1BFFBDFD32FF7D7DFD2BFFA87DFF7D7DFD%1BFFCAC3FD16FF7DA8FFFFFFA852FD14FF7DA8FD2BFF7D52A85252FD1CFF%C3CAFD0FFF52A8FFFFFFA827A8FFFFFF5227FFFFFF2752FD0FFF837DFD2B%FF7D52FF527DFD1CFFCAC3FD0EFFA827A8FFFFA852FFFFFFA87DA8FFFFFF%7D527DFD0DFFAE8957A8FD2BFFA8A8FF7D52FD1DFFBDCAFD07FF7D27FD04%FF7DA8FFFFA852FFFFFFA87DA8FFFFA852A8FFFFFFA8F87DFD07FFAE8889%AE7D7DFD2EFF7D7DFD1EFFBDFD07FF7D7DFFFFFFA87DFFFFFF7DFFFFFFA8%7DFFFFFFA87DFD04FFA87D7DA8FD05FFAE8989FFFFFF7DA8FD2EFF7D52FD%1EFFC3C4AFA8FD04FF7DA8FFFFA852FFFFFF52FFFFFF7D7DFFFFA87D7DFF%FFFF7D7D7DFFFFFFA87DFFAE8989AEFD04FF7D7DFD2EFF527DFD1EFFCAC3%2752FD04FF7DFFFFFF7DFFFFFF52FFFFFF7DA8FFFFA87DA8FFFFFF7DA8FD%04FFA8522D8989AEFD06FF7DA8FD2EFF7D52FD1FFFC3A17DFFFFFFA87DFF%FF7DA8FFFF52A8FFFF52A8FFFF7D7DFFFFA87D52A8FFFFFFA877838289AE%FD08FF7D7DFD2EFF7D7DFD1FFFCAC3A8FFFFFFA8A8FFA87DFFFF52FFFFA8%52FFFFFF52A8FFFFA87DA8FFFFFFA87D588989CFFD0AFF7DA8FD2EFF7D52%FD19FFA85252FD04FFC37DA8FFFF7DFFFF7DA8FF52A8FFA852FFFFA852FF%FFFF7D7DA8FFFFA8777D5EADAEFFCB7DF8A8FD07FF7D7DFD2EFF527DFD1A%FF7D7D7DFFFFFFCABD7DFFFF7DFFA8A8FF7DA8FF7D7DFFFF7D7DFFFFA87D%FFFFFFA87D588989FFFFA97D7DA8A8FD08FF7DA8FD2EFF7D52FD1CFFA852%A8FFFFBD76FF7D527D27A827A8FF7D7DFF7D7DA8FF7D7D7DFFFFCB77585E%AEAEFF7D7D7DA8FD04FFA8FD06FF7D7DFD2EFF7D7DFD1EFF7DA8FFFF4483%7D7D52FD047D27A8FF7D7DFFFF7D7DFFFFA8A25864ADFFFFA87DA8FD05FF%7DA8FD07FF7DA8FD2EFF5252FD14FF7D27A8A8FFA8FD05FFA852529A7DFD%06FFA87D7D27FFFFA852A8FFFF7D585DAEFFCB7D7D7DFD05FFA87D27A8FD%07FF7D7DFD2EFF527DFD14FFFD04A87DA87DA87DA8A8A87D7DCAC3FD08FF%FD057DFFFFA82D5EADFFA87D7DA8FD04FFA8A87DA8A8FD09FF7DA8FD2EFF%7D52FD1BFFA8FFA8A827A8FFFFBCCAFD08FFA827A8FF7D585DAEAEA8777D%A8FFFFFFA8A87D7DA8FD0CFF7D7DFD2EFF7D7DFD16FFA8FFA8FFFD04A852%FD05FFC3FD09FFA8522D8289AE7E7D7DFD04FFA87D7DA8FD05FFA8FD09FF%7DA8FD2EFF7D52FD0FFF7D2752A87D7D7DA87D7D7DA8A8A87D52A8FD04FF%C3CAFD08FFAE3289837D7DA8FFFFFFA87D7D7DFD05FFA8A82727FD09FF7D%7DFD2EFF527DFD10FF7DFFA8FD09FFA852A8FD05FFCAC3FD06FFAE8989FF%4C7DA8FFFFFF7D7D7DFD05FF7D7D7DA8A8FFA8FD09FF7DA8FD2EFF7D52FD%15FFA8A8FD057DA852FD07FFBCCAFFFFFFAE6489AEFFA87DFFFF7D7D7DA8%FFFFFFA87D7D7DA8A8FD0EFF7D7DFD2BFFA87DFF7D7DFD10FFA8A87DA87D%A87DFD05FF527DFD08FFBDFFFF8989FD05FF7D527DA8FD04FF7D7D7DA8FD%12FF7DA8FD2BFF527D7D5252FD0BFFA8FD067DA8A8FD05FFFD057DFD08FF%A08289AEFD06FF7D7DFFA8A87D7D7DA8FD06FFA8A827FD0CFF7D7DFD2BFF%7D52FF527DFD0CFF27A8FD07FFA87D7D7DA8FFFF7D7DFD06FFAE8983C3FD%08FFFD057DFD05FFA8A87DA8FD047DFD0CFF7DA8FD2BFFA8A8FF7D52FD11%FFA8A87D7D7DA8FFFFA8A87D5252FD05FF8989AEFFBDCAFD07FF7D52FFFF%FFA8A8FD057DA8A8FD10FF7D7DFD2EFF7D7DFD0EFFA8A87D7D7DFD04FFA8%7D7DA8FFFF7DFFFFAE8989AEFFFFFFCBC3FD07FF52A87D7D7DA87DFFA8FD%15FF7DA8FD2DFFA85252FD09FFA8FFA87D7D7DA8FD04FFA87D7D7DFFFFFF%A87D27AE8989AEFD06FFC3CAFD05FFA8527DFD09FFA8A852A8FD0FFF7D7D%FD2EFF527DFD09FF5227A8A8FD05FF7D7D7DA8FFFFFFA87DA8AE832CAEFD%08FFCAC3FD04FFA8527DA87DA87DA87DA87DA87DA87D527DFD0FFF7DA8FD%2EFF7D52FD09FFA8FD05FF7D7D7DA8A8FFFFFF7D7D7DAE895E2D52A8FD09%FFBCCAFFFFFFA8277DA8A8A8FFA8A8A8FFA8FD14FF7D7DFD2EFF7D7DFD0C%FFA87D7DA8FD04FFA87D7DA8AE895E7DA2FFA827A8FD09FFC3FFFFFF27A8%A8FFA8FD1BFF7DA8FD2DFFA85252FD09FFA87D52A8A8FD04FFA877A2A8FF%895E52A2FFFFFD047D52FD08FFC3CA7D7DA8A8A8FD057DFD04A8FD14FF7D%7DFD2EFF527DFD07FFA8277DA8FD05FF7D7D7DFFAEAE5E587DFFFFA852A8%FFFF527D7DA8FD06FFA19A5952A8FD05FFA8FFA8A8277DFD14FF7DA8FD2E%FF7D52FD07FFA87DA8FFFFFFA87D52A8CBFF895E52A2A8FFA87D7DFFFF7D%7DFFA8277D52527D527D527D44CAFF7D52FD09FFA8FD14FF7D7DFD2EFF7D%7DFD0CFF7D7DA8FFAEAE5E7D7DFFFFFF7D7DA8FFA87DA8FF7D7DFFA852A8%527D527DFF7DC3FFFFFF7DA8FD1CFF7DA8FD2DFFA85252FD08FFA8A87D7D%A8FFFF8983587DA8FFFFA8527DFFFF7D7DA8FF7D7DFFA852FF7DA8FF7DA8%FF7D9ACAFFFFFF7D7D7DFD1AFF7D7DFD2EFF527DFD07FFA8F87DCBFFCFAE%5E837DCBFFFFFF7D7DFFFFFF52A8FFFF52A8FFA87DFFA87DFFFF7DFFFFAF%76CAFD04FF7D52FD1AFF7DA8FD2EFF7D52FD07FFA8FFFFAE8989587DA8FF%FFFF7D7DA8FFFFA852A8FFFF52A8FFA852FFFF7DA8FF7DA8FFFFA87DBCFD%05FFA8FD1AFF7D7DFD2EFF7D7DFD09FF8989837DA8FFFFFFA87DA8FFFFFF%7D7DFFFFA87DFFFFFF7DFFFFA87DFFFFA8A8FFFFFF7DA1C3FD1FFF7DA8FD%2DFFA85252FD06FFAE89890452A2FFFFFFA87D7DFFFFFFA87DA8FFFF7D52%FFFFA852FFFFA852FFFFFF7DFD04FF5227C3CAFD1EFF7D7DFD2EFF527DFD%04FFAE8989FFFF7DA8FFFFFF7D7DA8FFFFFF7D7DFFFFFF7D7DFFFFFF52FF%FFFF7DFFFFFFA8A8FD04FFA8FFCAC3FD1EFF7DA8FD2EFF7D52FFFFCF8989%AEFD05FFA87D527DFD04FF52A8FFFFA87D7DFFFFFF52FFFFFF7DA8FFFFFF%527DFD07FFBDCAFD1DFF7D7DFD2BFFA87DFF7D7DCFAD89AEFD07FFA827FD%04FFA87DFFFFFFA87DA8FFFFFF52FFFFFFA87DFD04FF52A8FD08FFBDFD1D%FF7DA8FD2AFFA87D52A87D2D89AEFD0DFF7D527DFFFFFF7D7DA8FFFFFF52%A8FFFFA827A8FD0EFFC3C3FD1CFF7D7DFD2AFFA87D52FF527DFD0FFF5252%FFFFFF2752FFFFFFA827A8FFFFFFA852FD10FFC3FD1CFF7DA8FD2BFFA8A8%FF7D52FD0FFFA8FFFFFFA852A8FFFFFFA852FD16FFC3CAFD1BFF7D7DFD2E%FF7D7DFD32FFBCFD1BFF7DA8FD2EFF5252FD32FFC3C3FD1AFF7D7DFD2EFF%527DFD33FFC3FD1AFF7DA8FD2EFF7D52FD33FFC3CAFD19FF7D7DFD2EFF7D%7DFD34FFC3FD19FF7DA8FD2EFF7D52FD34FFC3CAFD18FF7D7DFD2EFF527D%FD34FFCAC3FD18FF7DA8FD2EFF7D52FD35FFBCCAFD17FF7D7DFD2EFF7D7D%FD35FFCAC3FD17FF7DA8FD2DFFA85252FD36FFC3CAFD16FF7D7DFD2EFF52%7DFD36FFCAC3FD16FF7DA8FD2EFF7D52FD37FFBCFD16FF7D7DFD2EFF7D7D%FD37FFCAC3FD15FF7DA8FD2DFFA85252FD38FFC3CAFD14FF7D7DFD2EFF52%7DFD38FFCAC3FD14FF7DA8FD2EFF7D52FD39FFBDCAFD13FF7D7DFD2CFF7D%FF7D7DFD3AFFC3FD13FF7DA8FD2AFFA85227A852277D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D526F527D527D527D527D527D%527D527D527D527D52527DFD2AFFA87D27FF7D527DA852527DA852527DA8%527D7DA8527D7DA8527D7D7D52527D7D52527DA852527DA852527DA85252%7DA8527D7DA8527D7DA8527D7DA8527D7D847D527DA852527DA852527DA8%52527DA8527D7D7D52A8FD2FFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFFA8A8%FFFFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFFA8%A8FFFFA8FFFFFFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFF%FFA8FD56FFA8FD13FFA8FD42FFA8FF52A8FD10FFA8A852A8FD10FFA87D7D%FD11FFA87D52FD12FF7D52FD2DFFA852277DFD10FF7D7D7DA8FD10FFA852%7DFD12FF7D7DFD12FF2752FD2FFF7DA8FD11FF7D52FD12FF7D7DFD12FF7D%7DFD12FFA87DFDFCFFFDD9FFA8A8A8FD7EFF277DFD7DFFA87DA8FDFCFFFD%42FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpacking/Helvetica havefont not {%%BeginFont: Helvetica/Helvetica15 dict dup begin
/FontName /Helvetica def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -493 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
5 dict dup begin/K2D {{43 239 m294 239 l294 332 l43 332 l43 239 lclosepath} execfill} bind def/K30 {{277 717 m174 717 103 663 63 554 c42 496 32 426 32 344 c32 239 49 155 84 93 c126 18 190 -19 276 -19 c371 -19 440 27 482 118 c511 182 525 262 525 360 c525 462 509 543 477 602 c436 679 369 717 277 717 c277 717 lclosepath275 63 m217 63 176 97 152 164 c137 209 129 267 129 340 c129 437 141 511 166 560 c190 610 229 635 282 635 c339 635 378 609 398 556 c418 504 428 437 428 356 c428 243 414 166 387 125 c359 84 322 63 275 63 c275 63 lclosepath} execfill} bind def/K32 {{32 0 m523 0 l523 85 l133 85 l142 120 163 153 196 182 c215 198 240 215 273 233 c341 271 l401 305 443 333 466 357 c507 398 527 447 527 504 c527 559 508 608 470 652 c433 697 373 719 291 719 c192 719 123 684 84 615 c62 575 51 524 50 462 c142 462 l143 507 150 541 163 567 c186 614 229 637 290 637 c332 637 365 625 390 600 c415 576 427 542 427 500 c427 465 413 433 386 405 c369 387 339 366 296 341 c200 286 l136 248 93 207 71 161 c48 115 35 62 32 0 c32 0 lclosepath} execfill} bind def/K34 {{109 255 m338 578 l338 255 l109 255 lclosepath430 0 m430 175 l536 175 l536 255 l430 255 l430 718 l354 718 l26 264 l26 175 l340 175 l340 0 l430 0 lclosepath} execfill} bind def/K78 {{194 275 m6 0 l120 0 l249 201 l382 0 l497 0 l308 275 l489 534 l379 536 l255 347 l132 536 l15 536 l194 275 lclosepath} execfill} bind defend /CharStrings exch def5 dict dup begin/K2D [341 0 42 239 293 331] defEncoding 45 /K2D put/K30 [570 0 32 -19 524 717] defEncoding 48 /K30 put/K32 [570 0 32 0 526 719] defEncoding 50 /K32 put/K34 [570 0 26 0 536 718] defEncoding 52 /K34 put/K78 [512 0 6 0 496 536] defEncoding 120 /K78 putend /CharMetrics exch defenddefinefont pop%%EndFont} ifsetpacking%AI3_EndRider[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI55J_Tsume: None%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 0 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe \203\211\203C\203u\203y\203C\203\223\203g\203v\203\211\203O\203C\203\223) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (\203g\203\214\201[\203X) (Adobe Illustrator.app)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.929717 0.879728 0.890196 0.799985 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623] 1) 0 Xs([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623] 1)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 1) Ln0 Au0 O0 0 0 0 1 1 1 Xa0 J 0 j 1 w 4 M []0 d0 XR242 440 m598 440 l598 162 l242 162 l242 440 lf*u0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M309 412 m309 412 lS531 412 m531 412 lS531 190 m531 190 lS309 190 m309 190 lS309 412 m309 190 lS531 412 m309 412 lS531 190 m531 412 lS309 190 m531 190 lS*Uu0 To1 0 0 1 416.9927 158.0049 0 Tp0 TvTP1 0 0 1 416.9927 158.0049 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(\170) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M422 158 mSu0 To1 0 0 1 298.0005 409.0049 0 Tp0 TvTP1 0 0 1 298.0005 409.0049 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(4) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M303.561 409 mSu0 To1 0 0 1 528 174.0127 0 Tp0 TvTP1 0 0 1 528 174.0127 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(4) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M533.5605 174 mSu0 To1 0 0 1 298.0005 354.0127 0 Tp0 TvTP1 0 0 1 298.0005 354.0127 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(2) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M303.561 354 mSu0 To1 0 0 1 298.0005 298.0049 0 Tp0 TvTP1 0 0 1 298.0005 298.0049 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(0) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M303.561 298 mSu0 To1 0 0 1 473 174.0127 0 Tp0 TvTP1 0 0 1 473 174.0127 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(2) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M478.5605 174 mSu0 To1 0 0 1 294.9927 241.9971 0 Tp0 TvTP1 0 0 1 294.9927 241.9971 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(\055\62) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M303.8911 242 mSu0 To1 0 0 1 294.9927 186.9971 0 Tp0 TvTP1 0 0 1 294.9927 186.9971 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(\055\64) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M303.8911 187 mSu0 To1 0 0 1 416.9927 174.0127 0 Tp0 TvTP1 0 0 1 416.9927 174.0127 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(0) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M422.5605 174 mSu0 To1 0 0 1 359.0005 174.0127 0 Tp0 TvTP1 0 0 1 359.0005 174.0127 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(\055\62) Tx 0 0 TkTOU0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M367.8911 174 mSu0 To1 0 0 1 304.0005 174.0127 0 Tp0 TvTP1 0 0 1 304.0005 174.0127 Tm0 Tr0 O0.929717 0.879728 0.890196 0.799985 0 0 0 Xa4 M/_Helvetica 10 8.58643 -4.80957 Tf100 100 Tz0 Tt%_ 0 XL0 0 Tl0 TV0 Tc(\055\64) Tx 0 0 TkTOU*u0 R0.929717 0.879728 0.890196 0.799985 0 0 0 XA10 M312.8911 174 mS422 273 m420 272 lS*U0.613275 0 1 0 0 1 0 XA517 350 m522 352 lS0 0.960204 0.946044 0 1 0 0 XA392 356 m397 348 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA309 212 m305 212 lS464 190 m464 185 lS446 294 m448 292 lS*U0.613275 0 1 0 0 1 0 XA383 283 m387 285 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA448 296 m446 298 lS392 298 m335 277 lS309 401 m305 401 lS396 287 m339 257 lS448 300 m449 298 lS404 279 m356 245 lS*U0.613275 0 1 0 0 1 0 XA374 278 m378 280 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA414 274 m385 243 lS505 324 m503 325 lS426 274 m419 250 lS394 310 m346 301 lS436 279 m454 267 lS505 327 m507 325 lS444 287 m483 289 lS*U0.613275 0 1 0 0 1 0 XA364 273 m369 276 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA448 298 m501 314 lS448 302 m446 304 lS446 310 m505 336 lS309 379 m305 379 lS441 320 m494 352 lS448 306 m449 304 lS431 326 m471 359 lS*U0.613275 0 1 0 0 1 0 XA355 269 m360 271 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA420 329 m439 357 lS505 334 m503 336 lS414 327 m413 328 lS309 190 m531 190 lS414 330 m416 328 lS505 337 m507 336 lS421 350 m419 352 lS*U0.613275 0 1 0 0 1 0 XA346 264 m351 266 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA421 353 m422 352 lS446 308 m445 310 lS403 343 m401 344 lS309 357 m305 357 lS403 346 m405 344 lS446 311 m448 310 lS409 325 m407 326 lS*U0.613275 0 1 0 0 1 0 XA337 259 m341 262 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA409 328 m410 326 lS444 313 m442 315 lS386 333 m384 335 lS409 190 m409 185 lS386 337 m388 335 lS444 317 m446 315 lS404 322 m402 323 lS*U0.613275 0 1 0 0 1 0 XA327 255 m332 257 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA404 325 m405 323 lS501 343 m500 345 lS399 318 m398 320 lS309 334 m305 334 lS399 321 m401 320 lS501 347 m503 345 lS370 323 m369 324 lS*U0.613275 0 1 0 0 1 0 XA318 250 m323 252 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA370 326 m372 324 lS494 350 m493 352 lS396 313 m394 315 lS520 190 m520 185 lS396 317 m398 315 lS494 354 m496 352 lS357 311 m355 313 lS*U0.613275 0 1 0 0 1 0 XA309 245 m314 248 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA357 314 m359 313 lS441 318 m439 320 lS346 299 m345 301 lS309 312 m305 312 lS346 302 m348 301 lS441 321 m442 320 lS394 308 m392 310 lS*U0 0.960204 0.946044 0 1 0 0 XA471 199 m475 190 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA394 311 m395 310 lS484 355 m482 357 lS339 287 m337 288 lS342 190 m342 185 lS339 290 m341 288 lS484 359 m486 357 lS392 302 m391 304 lS*U0 0.960204 0.946044 0 1 0 0 XA462 217 m466 208 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA392 306 m394 304 lS436 322 m435 323 lS335 275 m333 277 lS309 290 m305 290 lS335 278 m337 277 lS436 325 m438 323 lS392 296 m391 298 lS*U0 0.960204 0.946044 0 1 0 0 XA453 236 m457 227 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA392 300 m394 298 lS471 358 m469 359 lS335 265 m333 266 lS498 190 m498 185 lS335 268 m337 266 lS471 361 m473 359 lS394 291 m392 292 lS*U0 0.960204 0.946044 0 1 0 0 XA443 255 m448 246 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA394 294 m395 292 lS431 325 m430 326 lS339 255 m337 257 lS309 268 m305 268 lS339 259 m340 257 lS431 328 m433 326 lS396 285 m394 287 lS*U0 0.960204 0.946044 0 1 0 0 XA434 274 m438 264 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA396 289 m398 287 lS426 327 m424 328 lS399 281 m398 282 lS387 190 m387 185 lS399 284 m401 282 lS426 330 m427 328 lS346 248 m344 250 lS*U0 0.960204 0.946044 0 1 0 0 XA425 291 m429 283 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA346 252 m347 250 lS455 358 m454 359 lS404 277 m402 279 lS309 245 m305 245 lS404 280 m405 279 lS455 361 m457 359 lS356 243 m354 245 lS*U0 0.960204 0.946044 0 1 0 0 XA415 311 m420 301 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA356 247 m358 245 lS439 355 m437 357 lS369 241 m367 243 lS476 190 m476 185 lS369 244 m371 243 lS439 358 m440 357 lS409 274 m407 276 lS*U0 0.960204 0.946044 0 1 0 0 XA406 329 m411 319 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA409 277 m410 276 lS420 327 m418 329 lS385 241 m383 243 lS309 223 m305 223 lS385 244 m386 243 lS420 330 m422 329 lS414 272 m413 274 lS*U0 0.960204 0.946044 0 1 0 0 XA397 348 m401 338 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA414 275 m416 274 lS0.613275 0 1 0 0 1 0 XA522 352 m526 354 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA420 275 m422 273 lS420 272 m418 273 lS*U0.613275 0 1 0 0 1 0 XA513 347 m517 350 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA401 244 m400 245 lS0 0.960204 0.946044 0 1 0 0 XA387 366 m392 356 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA401 247 m403 245 lS0.613275 0 1 0 0 1 0 XA504 343 m508 345 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA419 249 m418 250 lS309 201 m305 201 lS419 252 m421 250 lS*U0.613275 0 1 0 0 1 0 XA494 338 m499 340 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA426 272 m424 274 lS0 0.960204 0.946044 0 1 0 0 XA378 385 m383 375 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA426 275 m427 274 lS0.613275 0 1 0 0 1 0 XA485 333 m490 336 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA437 256 m435 258 lS376 190 m376 185 lS437 259 m439 258 lS*U0.613275 0 1 0 0 1 0 XA475 329 m480 331 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA431 274 m430 276 lS0 0.960204 0.946044 0 1 0 0 XA369 403 m374 393 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA431 277 m433 276 lS0.613275 0 1 0 0 1 0 XA466 324 m471 327 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA454 265 m452 267 lS453 190 m453 185 lS454 269 m456 267 lS*U0.613275 0 1 0 0 1 0 XA457 320 m462 322 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA436 277 m435 279 lS0 0.960204 0.946044 0 1 0 0 XA364 412 m364 412 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA436 280 m438 279 lS0.613275 0 1 0 0 1 0 XA448 315 m453 317 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA470 276 m468 278 lS399 320 m370 324 lS470 279 m471 278 lS*U0.613275 0 1 0 0 1 0 XA438 310 m443 313 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA441 281 m439 282 lS531 412 m309 412 lS441 284 m442 282 lS*U0.613275 0 1 0 0 1 0 XA429 306 m434 308 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA483 288 m481 289 lS364 190 m364 185 lS483 291 m485 289 lS*U0.613275 0 1 0 0 1 0 XA420 301 m425 303 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA444 285 m442 287 lS0.613275 0 1 0 0 1 0 XA392 287 m397 289 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA444 289 m446 287 lS0.613275 0 1 0 0 1 0 XA411 296 m415 299 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA494 300 m492 301 lS501 315 m503 314 lS494 303 m495 301 lS431 190 m431 185 lS446 291 m445 292 lS*U0.613275 0 1 0 0 1 0 XA397 289 m401 292 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA531 190 m531 412 lS309 190 m309 412 lS501 312 m499 314 lS409 326 m403 344 lS404 323 m386 335 lS446 298 m448 300 lS392 304 m339 288 lS*U0.613275 0 1 0 0 1 0 XA378 280 m383 283 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA399 282 m346 250 lS503 325 m505 327 lS420 273 m401 245 lS320 190 m320 185 lS441 282 m470 278 lS446 304 m448 306 lS448 304 m505 325 lS*U0.613275 0 1 0 0 1 0 XA360 271 m364 273 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA436 323 m484 357 lS503 336 m505 337 lS413 328 m414 330 lS309 368 m305 368 lS419 352 m421 353 lS445 310 m446 311 lS401 344 m403 346 lS*U0.613275 0 1 0 0 1 0 XA341 262 m346 264 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA407 326 m409 328 lS442 315 m444 317 lS384 335 m386 337 lS531 190 m531 185 lS402 323 m404 325 lS500 345 m501 347 lS398 320 m399 321 lS*U0.613275 0 1 0 0 1 0 XA323 252 m327 255 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA369 324 m370 326 lS493 352 m494 354 lS394 315 m396 317 lS309 323 m305 323 lS355 313 m357 314 lS439 320 m441 321 lS345 301 m346 302 lS*U0 0.960204 0.946044 0 1 0 0 XA475 190 m476 190 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA392 310 m394 311 lS482 357 m484 359 lS337 288 m339 290 lS398 190 m398 185 lS391 304 m392 306 lS435 323 m436 325 lS333 277 m335 278 lS*U0 0.960204 0.946044 0 1 0 0 XA457 227 m462 217 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA391 298 m392 300 lS469 359 m471 361 lS333 266 m335 268 lS309 279 m305 279 lS392 292 m394 294 lS430 326 m431 328 lS337 257 m339 259 lS*U0 0.960204 0.946044 0 1 0 0 XA438 264 m443 255 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA394 287 m396 289 lS424 328 m426 330 lS398 282 m399 284 lS487 190 m487 185 lS344 250 m346 252 lS454 359 m455 361 lS402 279 m404 280 lS*U0 0.960204 0.946044 0 1 0 0 XA420 301 m425 291 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA354 245 m356 247 lS437 357 m439 358 lS367 243 m369 244 lS309 234 m305 234 lS407 276 m409 277 lS418 329 m420 330 lS383 243 m385 244 lS*U0 0.960204 0.946044 0 1 0 0 XA401 338 m406 329 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA413 274 m414 275 lS0.613275 0 1 0 0 1 0 XA526 354 m531 357 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA400 245 m401 247 lS418 273 m420 275 lS*U0.613275 0 1 0 0 1 0 XA508 345 m513 347 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA418 250 m419 252 lS0 0.960204 0.946044 0 1 0 0 XA383 375 m387 366 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA424 274 m426 275 lS0.613275 0 1 0 0 1 0 XA490 336 m494 338 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA435 258 m437 259 lS309 190 m305 190 lS430 276 m431 277 lS*U0.613275 0 1 0 0 1 0 XA471 327 m475 329 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA452 267 m454 269 lS0 0.960204 0.946044 0 1 0 0 XA364 412 m369 403 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA435 279 m436 280 lS0.613275 0 1 0 0 1 0 XA453 317 m457 320 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA468 278 m470 279 lS309 190 m309 185 lS439 282 m441 284 lS*U0.613275 0 1 0 0 1 0 XA434 308 m438 310 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA481 289 m483 291 lS0.613275 0 1 0 0 1 0 XA401 292 m406 294 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA442 287 m444 289 lS0.613275 0 1 0 0 1 0 XA415 299 m420 301 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA492 301 m494 303 lS309 412 m305 412 lS445 292 m446 294 lS448 292 m446 291 lS499 314 m501 315 lS*U0.613275 0 1 0 0 1 0 XA387 285 m392 287 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA396 315 m357 313 lS449 298 m448 296 lS409 276 m369 243 lS353 190 m353 185 lS446 292 m494 301 lS449 304 m448 302 lS426 328 m455 359 lS*U0.613275 0 1 0 0 1 0 XA351 266 m355 269 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA422 352 m421 350 lS448 310 m446 308 lS410 326 m409 325 lS309 345 m305 345 lS405 323 m404 322 lS503 345 m501 343 lS372 324 m370 323 lS*U0.613275 0 1 0 0 1 0 XA314 248 m318 250 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA359 313 m357 311 lS442 320 m441 318 lS395 310 m394 308 lS509 190 m509 185 lS394 304 m392 302 lS438 323 m436 322 lS394 298 m392 296 lS*U0 0.960204 0.946044 0 1 0 0 XA448 246 m453 236 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA395 292 m394 291 lS433 326 m431 325 lS398 287 m396 285 lS309 257 m305 257 lS347 250 m346 248 lS457 359 m455 358 lS358 245 m356 243 lS*U0 0.960204 0.946044 0 1 0 0 XA411 319 m415 311 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA410 276 m409 274 lS422 329 m420 327 lS403 245 m401 244 lS416 274 m414 272 lS*U0.613275 0 1 0 0 1 0 XA499 340 m504 343 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA427 274 m426 272 lS0 0.960204 0.946044 0 1 0 0 XA374 393 m378 385 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA433 276 m431 274 lS0.613275 0 1 0 0 1 0 XA462 322 m466 324 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA438 279 m436 277 lS309 190 m531 190 lS442 282 m441 281 lS*U0.613275 0 1 0 0 1 0 XA425 303 m429 306 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA446 287 m444 285 lS331 190 m331 185 lS309 412 m309 190 lS503 314 m501 312 lS394 292 m335 266 lS420 190 m420 185 lS444 315 m501 345 lS507 336 m505 334 lS405 344 m403 343 lS*U0.613275 0 1 0 0 1 0 XA332 257 m337 259 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA401 320 m399 318 lS496 352 m494 350 lS348 301 m346 299 lS309 301 m305 301 lS337 277 m335 275 lS473 359 m471 358 lS340 257 m339 255 lS*U0 0.960204 0.946044 0 1 0 0 XA429 283 m434 274 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA405 279 m404 277 lS440 357 m439 355 lS421 250 m419 249 lS386 243 m385 241 lS*U0.613275 0 1 0 0 1 0 XA480 331 m485 333 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA456 267 m454 265 lS442 190 m442 185 lS485 289 m483 288 lS*U0.613275 0 1 0 0 1 0 XA406 294 m411 296 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA414 328 m421 352 lS309 390 m305 390 lS416 328 m414 327 lS446 315 m444 313 lS398 315 m396 313 lS*U0 0.960204 0.946044 0 1 0 0 XA466 208 m471 199 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA337 266 m335 265 lS427 328 m426 327 lS439 258 m437 256 lS371 243 m369 241 lS*U0.613275 0 1 0 0 1 0 XA443 313 m448 315 lS0.929717 0.879728 0.890196 0.799985 0 0 0 XA495 301 m494 300 lS0.613275 0 1 0 0 1 0 XA369 276 m374 278 lS*u0.929717 0.879728 0.890196 0.799985 0 0 0 XA388 335 m386 333 lS486 357 m484 355 lS471 278 m470 276 lS401 282 m399 281 lS507 325 m505 324 lS431 276 m437 258 lS341 288 m339 287 lS*UU/BBAccumRotation (0.000000) XTLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF