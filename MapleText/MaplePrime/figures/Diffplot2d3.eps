%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 185 575 606
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N6ŒŽ23“ú 18Žž33•ª47•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
236 179 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
236.000 0 l
236.000 179.000 l
0 179.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 226 169 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
2.99682 2.39034 224.003 162.810 rc
newpath
3.99682 84.2955 m
8.81406 87.7681 l
13.0055 90.7388 l
17.7192 93.9686 l
22.4642 97.0444 l
27.1866 99.8757 l
31.5649 102.251 l
36.0984 104.417 l
40.7869 106.306 l
45.4604 107.801 l
50.2676 108.905 l
52.3847 109.247 l
54.5018 109.499 l
56.8852 109.672 l
59.2686 109.730 l
61.6617 109.670 l
64.0549 109.493 l
66.3611 109.211 l
68.6674 108.823 l
72.8560 107.850 l
77.8366 106.260 l
82.0559 104.567 l
86.9639 102.234 l
91.3083 99.8759 l
96.0748 97.0170 l
100.613 94.0771 l
105.349 90.8369 l
109.698 87.7557 l
119.261 80.8615 l
123.503 77.8548 l
128.084 74.7137 l
132.817 71.6398 l
137.447 68.8535 l
141.926 66.4116 l
146.900 64.0411 l
151.370 62.2548 l
156.142 60.7405 l
160.466 59.7416 l
162.829 59.3515 l
165.193 59.0739 l
167.417 58.9168 l
169.641 58.8610 l
171.966 58.9114 l
174.291 59.0727 l
176.564 59.3368 l
178.837 59.7051 l
183.596 60.8065 l
188.179 62.2733 l
192.866 64.1594 l
197.515 66.3826 l
201.786 68.7020 l
206.682 71.6405 l
211.061 74.4778 l
215.729 77.6693 l
220.198 80.8340 l
225.000 84.2955 l
S
cliprestore
newpath
0 0 m
0 169.000 l
226.000 169.000 l
226.000 0 l
h
W
Q
q
0.196078 0.803922 0.196078 RG
2.99682 2.39034 224.003 162.810 rc
newpath
3.99682 164.200 m
225.000 4.39035 l
S
cliprestore
newpath
0 0 m
0 169.000 l
226.000 169.000 l
226.000 0 l
h
W
Q
q
0.854902 0.647059 0.125490 RG
2.99682 2.39034 224.003 162.810 rc
newpath
3.99682 32.7619 m
6.40544 39.4292 l
8.81406 45.7300 l
10.9097 50.9204 l
13.0055 55.8449 l
15.3623 61.0720 l
17.7192 65.9773 l
20.0917 70.5977 l
22.4642 74.9076 l
27.1866 82.5929 l
31.5649 88.7001 l
36.0984 94.0451 l
40.7869 98.5830 l
45.4604 102.163 l
50.2676 104.928 l
54.5018 106.642 l
59.2686 107.821 l
64.0549 108.268 l
68.6674 108.058 l
72.8560 107.373 l
77.8366 106.006 l
82.0559 104.428 l
86.9639 102.172 l
91.3083 99.8497 l
96.0748 97.0087 l
100.613 94.0750 l
105.349 90.8367 l
109.698 87.7557 l
119.261 80.8615 l
123.503 77.8550 l
128.084 74.7155 l
132.817 71.6479 l
137.447 68.8783 l
141.926 66.4718 l
146.900 64.1789 l
151.370 62.5162 l
156.142 61.2174 l
160.466 60.5175 l
165.193 60.3288 l
169.641 60.7548 l
174.291 61.8826 l
178.837 63.7152 l
183.596 66.4672 l
188.179 69.9818 l
192.866 74.5121 l
197.515 79.9985 l
201.786 85.9630 l
206.682 93.9465 l
211.061 102.179 l
213.395 107.006 l
215.729 112.149 l
217.963 117.374 l
220.198 122.900 l
222.599 129.182 l
225.000 135.829 l
S
cliprestore
newpath
0 0 m
0 169.000 l
226.000 169.000 l
226.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
3.99682 84.0000 m
225.000 84.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
162 104 14 15 rc
newpath
168.278 110.255 m
168.486 110.475 168.642 110.695 168.748 110.915  c
168.824 111.067 168.949 111.467 169.123 112.115  c
169.681 111.277 l
169.829 111.074 170.009 110.880 170.221 110.696  c
170.432 110.512 170.619 110.386 170.779 110.318  c
170.881 110.276 170.993 110.255 171.116 110.255  c
171.298 110.255 171.443 110.304 171.551 110.401  c
171.658 110.498 171.712 110.617 171.712 110.756  c
171.712 110.917 171.681 111.027 171.617 111.086  c
171.499 111.192 171.363 111.245 171.211 111.245  c
171.122 111.245 171.027 111.226 170.925 111.188  c
170.726 111.120 170.593 111.086 170.525 111.086  c
170.424 111.086 170.303 111.146 170.164 111.264  c
169.901 111.484 169.588 111.910 169.224 112.540  c
169.745 114.724 l
169.825 115.058 169.893 115.258 169.948 115.324  c
170.003 115.389 170.058 115.422 170.113 115.422  c
170.202 115.422 170.305 115.373 170.424 115.276  c
170.657 115.081 170.856 114.827 171.021 114.514  c
171.243 114.628 l
170.976 115.128 170.638 115.543 170.227 115.873  c
169.994 116.059 169.798 116.152 169.637 116.152  c
169.400 116.152 169.211 116.019 169.072 115.752  c
168.983 115.587 168.799 114.876 168.520 113.619  c
167.859 114.766 167.330 115.504 166.933 115.835  c
166.675 116.046 166.425 116.152 166.184 116.152  c
166.014 116.152 165.860 116.091 165.720 115.968  c
165.619 115.875 165.568 115.750 165.568 115.593  c
165.568 115.454 165.614 115.337 165.708 115.244  c
165.801 115.151 165.915 115.105 166.050 115.105  c
166.186 115.105 166.330 115.172 166.482 115.308  c
166.592 115.405 166.677 115.454 166.736 115.454  c
166.787 115.454 166.852 115.420 166.933 115.352  c
167.132 115.191 167.402 114.844 167.745 114.311  c
168.088 113.778 168.312 113.393 168.418 113.156  c
168.156 112.127 168.014 111.584 167.993 111.524  c
167.895 111.249 167.768 111.055 167.612 110.940  c
167.455 110.826 167.225 110.769 166.920 110.769  c
166.823 110.769 166.710 110.773 166.584 110.782  c
166.584 110.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 169.000 l
226.000 169.000 l
226.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
9.00000 84.0000 m
9.00000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
5 94 7 13 rc
newpath
15.7900 101.438 m
7.21000 101.438 l
7.21000 100.762 l
15.7900 100.762 l
h
f
Q
newpath
14.6601 98.0302 m
14.9056 97.4505 15.2155 97.0030 15.5900 96.6877  c
15.9646 96.3724 16.4311 96.2148 16.9897 96.2148  c
17.6795 96.2148 18.2085 96.4391 18.5766 96.8877  c
18.8559 97.2220 18.9956 97.5795 18.9956 97.9604  c
18.9956 98.5867 18.6020 99.2342 17.8149 99.9028  c
18.3439 100.110 18.7438 100.406 19.0146 100.791  c
19.2854 101.176 19.4209 101.629 19.4209 102.149  c
19.4209 102.894 19.1839 103.540 18.7099 104.085  c
18.0921 104.796 17.1971 105.152 16.0249 105.152  c
15.4451 105.152 15.0505 105.080 14.8410 104.936  c
14.6315 104.792 14.5268 104.638 14.5268 104.473  c
14.5268 104.350 14.5765 104.242 14.6760 104.149  c
14.7754 104.056 14.8950 104.009 15.0346 104.009  c
15.1404 104.009 15.2483 104.026 15.3584 104.060  c
15.4303 104.081 15.5932 104.158 15.8471 104.292  c
16.1010 104.425 16.2766 104.504 16.3740 104.530  c
16.5306 104.576 16.6977 104.600 16.8754 104.600  c
17.3071 104.600 17.6827 104.432 18.0022 104.098  c
18.3217 103.764 18.4814 103.368 18.4814 102.911  c
18.4814 102.577 18.4073 102.251 18.2592 101.934  c
18.1492 101.697 18.0286 101.517 17.8974 101.394  c
17.7154 101.225 17.4658 101.071 17.1484 100.934  c
16.8310 100.796 16.5073 100.728 16.1772 100.728  c
15.9741 100.728 l
15.9741 100.537 l
16.3084 100.495 16.6438 100.374 16.9802 100.175  c
17.3166 99.9768 17.5610 99.7377 17.7133 99.4585  c
17.8657 99.1792 17.9418 98.8724 17.9418 98.5380  c
17.9418 98.1022 17.8054 97.7499 17.5324 97.4812  c
17.2595 97.2124 16.9199 97.0781 16.5136 97.0781  c
15.8577 97.0781 15.3097 97.4293 14.8696 98.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
44.0000 84.0000 m
44.0000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
41 94 7 13 rc
newpath
51.7900 101.438 m
43.2100 101.438 l
43.2100 100.762 l
51.7900 100.762 l
h
f
Q
newpath
55.9604 103.343 m
55.3574 105.000 l
50.2793 105.000 l
50.2793 104.765 l
51.7731 103.402 52.8247 102.289 53.4340 101.426  c
54.0434 100.563 54.3481 99.7737 54.3481 99.0585  c
54.3481 98.5127 54.1809 98.0641 53.8466 97.7128  c
53.5123 97.3616 53.1124 97.1860 52.6469 97.1860  c
52.2238 97.1860 51.8439 97.3098 51.5075 97.5573  c
51.1711 97.8049 50.9225 98.1678 50.7617 98.6460  c
50.5268 98.6460 l
50.6326 97.8631 50.9045 97.2622 51.3425 96.8432  c
51.7805 96.4243 52.3274 96.2148 52.9834 96.2148  c
53.6816 96.2148 54.2645 96.4391 54.7321 96.8877  c
55.1997 97.3362 55.4335 97.8652 55.4335 98.4746  c
55.4335 98.9104 55.3320 99.3463 55.1289 99.7822  c
54.8157 100.467 54.3079 101.193 53.6054 101.959  c
52.5517 103.110 51.8937 103.804 51.6313 104.041  c
53.8784 104.041 l
54.3354 104.041 54.6560 104.024 54.8400 103.990  c
55.0241 103.956 55.1902 103.888 55.3383 103.784  c
55.4864 103.680 55.6155 103.533 55.7255 103.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
79.0000 84.0000 m
79.0000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
76 94 7 13 rc
newpath
86.7900 101.438 m
78.2100 101.438 l
78.2100 100.762 l
86.7900 100.762 l
h
f
Q
newpath
86.5234 97.2368 m
88.6181 96.2148 l
88.8276 96.2148 l
88.8276 103.482 l
88.8276 103.965 88.8477 104.265 88.8879 104.384  c
88.9281 104.502 89.0117 104.593 89.1386 104.657  c
89.2656 104.720 89.5237 104.756 89.9130 104.765  c
89.9130 105.000 l
86.6757 105.000 l
86.6757 104.765 l
87.0820 104.756 87.3444 104.721 87.4628 104.660  c
87.5813 104.599 87.6639 104.516 87.7104 104.412  c
87.7570 104.309 87.7802 103.999 87.7802 103.482  c
87.7802 98.8364 l
87.7802 98.2101 87.7591 97.8081 87.7168 97.6303  c
87.6871 97.4949 87.6332 97.3955 87.5549 97.3320  c
87.4766 97.2685 87.3824 97.2368 87.2724 97.2368  c
87.1158 97.2368 86.8979 97.3024 86.6186 97.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 84.0000 m
114.000 88.0000 l
S
Q
q
0 J
1 j
newpath
150.000 84.0000 m
150.000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
152.523 97.2368 m
154.618 96.2148 l
154.827 96.2148 l
154.827 103.482 l
154.827 103.965 154.847 104.265 154.887 104.384  c
154.928 104.502 155.011 104.593 155.138 104.657  c
155.265 104.720 155.523 104.756 155.913 104.765  c
155.913 105.000 l
152.675 105.000 l
152.675 104.765 l
153.082 104.756 153.344 104.721 153.462 104.660  c
153.581 104.599 153.663 104.516 153.710 104.412  c
153.757 104.309 153.780 103.999 153.780 103.482  c
153.780 98.8364 l
153.780 98.2101 153.759 97.8081 153.716 97.6303  c
153.687 97.4949 153.633 97.3955 153.554 97.3320  c
153.476 97.2685 153.382 97.2368 153.272 97.2368  c
153.115 97.2368 152.897 97.3024 152.618 97.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
185.000 84.0000 m
185.000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.960 103.343 m
191.357 105.000 l
186.279 105.000 l
186.279 104.765 l
187.773 103.402 188.824 102.289 189.434 101.426  c
190.043 100.563 190.348 99.7737 190.348 99.0585  c
190.348 98.5127 190.181 98.0641 189.846 97.7128  c
189.512 97.3616 189.112 97.1860 188.647 97.1860  c
188.223 97.1860 187.844 97.3098 187.507 97.5573  c
187.171 97.8049 186.922 98.1678 186.761 98.6460  c
186.526 98.6460 l
186.632 97.8631 186.904 97.2622 187.342 96.8432  c
187.780 96.4243 188.327 96.2148 188.983 96.2148  c
189.681 96.2148 190.264 96.4391 190.732 96.8877  c
191.199 97.3362 191.433 97.8652 191.433 98.4746  c
191.433 98.9104 191.332 99.3463 191.128 99.7822  c
190.815 100.467 190.307 101.193 189.605 101.959  c
188.551 103.110 187.893 103.804 187.631 104.041  c
189.878 104.041 l
190.335 104.041 190.656 104.024 190.840 103.990  c
191.024 103.956 191.190 103.888 191.338 103.784  c
191.486 103.680 191.615 103.533 191.725 103.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
220.000 84.0000 m
220.000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
222.660 98.0302 m
222.905 97.4505 223.215 97.0030 223.590 96.6877  c
223.964 96.3724 224.431 96.2148 224.989 96.2148  c
225.679 96.2148 226.208 96.4391 226.576 96.8877  c
226.856 97.2220 226.995 97.5795 226.995 97.9604  c
226.995 98.5867 226.602 99.2342 225.814 99.9028  c
226.343 100.110 226.743 100.406 227.014 100.791  c
227.285 101.176 227.420 101.629 227.420 102.149  c
227.420 102.894 227.183 103.540 226.710 104.085  c
226.092 104.796 225.197 105.152 224.024 105.152  c
223.445 105.152 223.050 105.080 222.841 104.936  c
222.631 104.792 222.526 104.638 222.526 104.473  c
222.526 104.350 222.576 104.242 222.676 104.149  c
222.775 104.056 222.895 104.009 223.034 104.009  c
223.140 104.009 223.248 104.026 223.358 104.060  c
223.430 104.081 223.593 104.158 223.847 104.292  c
224.101 104.425 224.276 104.504 224.374 104.530  c
224.530 104.576 224.697 104.600 224.875 104.600  c
225.307 104.600 225.682 104.432 226.002 104.098  c
226.321 103.764 226.481 103.368 226.481 102.911  c
226.481 102.577 226.407 102.251 226.259 101.934  c
226.149 101.697 226.028 101.517 225.897 101.394  c
225.715 101.225 225.465 101.071 225.148 100.934  c
224.831 100.796 224.507 100.728 224.177 100.728  c
223.974 100.728 l
223.974 100.537 l
224.308 100.495 224.643 100.374 224.980 100.175  c
225.316 99.9768 225.561 99.7377 225.713 99.4585  c
225.865 99.1792 225.941 98.8724 225.941 98.5380  c
225.941 98.1022 225.805 97.7499 225.532 97.4812  c
225.259 97.2124 224.919 97.0781 224.513 97.0781  c
223.857 97.0781 223.309 97.4293 222.869 98.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
27.0000 84.0000 m
27.0000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
62.0000 84.0000 m
62.0000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 84.0000 m
97.0000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
132.000 84.0000 m
132.000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
167.000 84.0000 m
167.000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
202.000 84.0000 m
202.000 86.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
114.000 164.200 m
114.000 4.39035 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
81 37 8 15 rc
Q
cliprestore
newpath
0 0 m
0 169.000 l
226.000 169.000 l
226.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
114.000 161.000 m
111.000 161.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
98 159 7 13 rc
newpath
108.790 166.438 m
100.210 166.438 l
100.210 165.762 l
108.790 165.762 l
h
f
Q
newpath
107.660 163.030 m
107.905 162.450 108.215 162.003 108.590 161.687  c
108.964 161.372 109.431 161.214 109.989 161.214  c
110.679 161.214 111.208 161.439 111.576 161.887  c
111.856 162.222 111.995 162.579 111.995 162.960  c
111.995 163.586 111.602 164.234 110.814 164.902  c
111.343 165.110 111.743 165.406 112.014 165.791  c
112.285 166.176 112.420 166.629 112.420 167.149  c
112.420 167.894 112.183 168.540 111.710 169.085  c
111.092 169.796 110.197 170.152 109.024 170.152  c
108.445 170.152 108.050 170.080 107.841 169.936  c
107.631 169.792 107.526 169.638 107.526 169.473  c
107.526 169.350 107.576 169.242 107.676 169.149  c
107.775 169.056 107.895 169.009 108.034 169.009  c
108.140 169.009 108.248 169.026 108.358 169.060  c
108.430 169.081 108.593 169.158 108.847 169.292  c
109.101 169.425 109.276 169.504 109.374 169.530  c
109.530 169.576 109.697 169.600 109.875 169.600  c
110.307 169.600 110.682 169.432 111.002 169.098  c
111.321 168.764 111.481 168.368 111.481 167.911  c
111.481 167.577 111.407 167.251 111.259 166.934  c
111.149 166.697 111.028 166.517 110.897 166.394  c
110.715 166.225 110.465 166.071 110.148 165.934  c
109.831 165.796 109.507 165.728 109.177 165.728  c
108.974 165.728 l
108.974 165.537 l
109.308 165.495 109.643 165.374 109.980 165.175  c
110.316 164.976 110.561 164.737 110.713 164.458  c
110.865 164.179 110.941 163.872 110.941 163.538  c
110.941 163.102 110.805 162.749 110.532 162.481  c
110.259 162.212 109.919 162.078 109.513 162.078  c
108.857 162.078 108.309 162.429 107.869 163.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 135.000 m
111.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
98 134 7 13 rc
newpath
108.790 141.438 m
100.210 141.438 l
100.210 140.762 l
108.790 140.762 l
h
f
Q
newpath
112.960 143.343 m
112.357 145.000 l
107.279 145.000 l
107.279 144.765 l
108.773 143.402 109.824 142.289 110.434 141.426  c
111.043 140.563 111.348 139.773 111.348 139.058  c
111.348 138.512 111.181 138.064 110.846 137.712  c
110.512 137.361 110.112 137.186 109.647 137.186  c
109.223 137.186 108.844 137.309 108.507 137.557  c
108.171 137.804 107.922 138.167 107.761 138.646  c
107.526 138.646 l
107.632 137.863 107.904 137.262 108.342 136.843  c
108.780 136.424 109.327 136.214 109.983 136.214  c
110.681 136.214 111.264 136.439 111.732 136.887  c
112.199 137.336 112.433 137.865 112.433 138.474  c
112.433 138.910 112.332 139.346 112.128 139.782  c
111.815 140.467 111.307 141.193 110.605 141.959  c
109.551 143.110 108.893 143.804 108.631 144.041  c
110.878 144.041 l
111.335 144.041 111.656 144.024 111.840 143.990  c
112.024 143.956 112.190 143.888 112.338 143.784  c
112.486 143.680 112.615 143.533 112.725 143.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 110.000 m
111.000 110.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
98 108 7 13 rc
newpath
108.790 115.438 m
100.210 115.438 l
100.210 114.762 l
108.790 114.762 l
h
f
Q
newpath
108.523 111.236 m
110.618 110.214 l
110.827 110.214 l
110.827 117.482 l
110.827 117.965 110.847 118.265 110.887 118.384  c
110.928 118.502 111.011 118.593 111.138 118.657  c
111.265 118.720 111.523 118.756 111.913 118.765  c
111.913 119.000 l
108.675 119.000 l
108.675 118.765 l
109.082 118.756 109.344 118.721 109.462 118.660  c
109.581 118.599 109.663 118.516 109.710 118.412  c
109.757 118.309 109.780 117.999 109.780 117.482  c
109.780 112.836 l
109.780 112.210 109.759 111.808 109.716 111.630  c
109.687 111.495 109.633 111.395 109.554 111.332  c
109.476 111.268 109.382 111.236 109.272 111.236  c
109.115 111.236 108.897 111.302 108.618 111.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 84.0000 m
111.000 84.0000 l
S
Q
q
0 J
1 j
newpath
114.000 59.0000 m
111.000 59.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
108.523 60.2368 m
110.618 59.2148 l
110.827 59.2148 l
110.827 66.4829 l
110.827 66.9653 110.847 67.2657 110.887 67.3842  c
110.928 67.5027 111.011 67.5937 111.138 67.6572  c
111.265 67.7207 111.523 67.7566 111.913 67.7651  c
111.913 68.0000 l
108.675 68.0000 l
108.675 67.7651 l
109.082 67.7566 109.344 67.7217 109.462 67.6604  c
109.581 67.5990 109.663 67.5165 109.710 67.4128  c
109.757 67.3091 109.780 66.9991 109.780 66.4829  c
109.780 61.8364 l
109.780 61.2101 109.759 60.8081 109.716 60.6303  c
109.687 60.4949 109.633 60.3955 109.554 60.3320  c
109.476 60.2685 109.382 60.2368 109.272 60.2368  c
109.115 60.2368 108.897 60.3024 108.618 60.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 33.0000 m
111.000 33.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
112.960 41.3432 m
112.357 43.0000 l
107.279 43.0000 l
107.279 42.7651 l
108.773 41.4025 109.824 40.2895 110.434 39.4262  c
111.043 38.5629 111.348 37.7737 111.348 37.0585  c
111.348 36.5127 111.181 36.0641 110.846 35.7128  c
110.512 35.3616 110.112 35.1860 109.647 35.1860  c
109.223 35.1860 108.844 35.3098 108.507 35.5573  c
108.171 35.8049 107.922 36.1678 107.761 36.6460  c
107.526 36.6460 l
107.632 35.8631 107.904 35.2622 108.342 34.8432  c
108.780 34.4243 109.327 34.2148 109.983 34.2148  c
110.681 34.2148 111.264 34.4391 111.732 34.8877  c
112.199 35.3362 112.433 35.8652 112.433 36.4746  c
112.433 36.9104 112.332 37.3463 112.128 37.7822  c
111.815 38.4677 111.307 39.1935 110.605 39.9594  c
109.551 41.1105 108.893 41.8045 108.631 42.0415  c
110.878 42.0415 l
111.335 42.0415 111.656 42.0245 111.840 41.9907  c
112.024 41.9568 112.190 41.8881 112.338 41.7844  c
112.486 41.6807 112.615 41.5336 112.725 41.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 8.00000 m
111.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
107.660 10.0302 m
107.905 9.45052 108.215 9.00301 108.590 8.68774  c
108.964 8.37247 109.431 8.21484 109.989 8.21484  c
110.679 8.21484 111.208 8.43912 111.576 8.88769  c
111.856 9.22200 111.995 9.57959 111.995 9.96044  c
111.995 10.5867 111.602 11.2342 110.814 11.9028  c
111.343 12.1101 111.743 12.4064 112.014 12.7915  c
112.285 13.1766 112.420 13.6293 112.420 14.1499  c
112.420 14.8946 112.183 15.5400 111.710 16.0859  c
111.092 16.7968 110.197 17.1523 109.024 17.1523  c
108.445 17.1523 108.050 17.0804 107.841 16.9365  c
107.631 16.7926 107.526 16.6381 107.526 16.4731  c
107.526 16.3504 107.576 16.2425 107.676 16.1494  c
107.775 16.0563 107.895 16.0097 108.034 16.0097  c
108.140 16.0097 108.248 16.0266 108.358 16.0605  c
108.430 16.0817 108.593 16.1589 108.847 16.2922  c
109.101 16.4255 109.276 16.5048 109.374 16.5302  c
109.530 16.5768 109.697 16.6001 109.875 16.6001  c
110.307 16.6001 110.682 16.4329 111.002 16.0986  c
111.321 15.7643 111.481 15.3686 111.481 14.9116  c
111.481 14.5773 111.407 14.2514 111.259 13.9340  c
111.149 13.6971 111.028 13.5172 110.897 13.3945  c
110.715 13.2252 110.465 13.0718 110.148 12.9343  c
109.831 12.7967 109.507 12.7280 109.177 12.7280  c
108.974 12.7280 l
108.974 12.5376 l
109.308 12.4952 109.643 12.3746 109.980 12.1757  c
110.316 11.9768 110.561 11.7377 110.713 11.4585  c
110.865 11.1792 110.941 10.8724 110.941 10.5380  c
110.941 10.1022 110.805 9.74991 110.532 9.48120  c
110.259 9.21248 109.919 9.07812 109.513 9.07812  c
108.857 9.07812 108.309 9.42936 107.869 10.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 148.000 m
113.000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 122.000 m
113.000 122.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 97.0000 m
113.000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 72.0000 m
113.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 46.0000 m
113.000 46.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 21.0000 m
113.000 21.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 236 179 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
