%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 201 575 590
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N7ŒŽ30“ú 17Žž10•ª27•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
237 166 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
237.000 0 l
237.000 166.000 l
0 166.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
0 0 227 141 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
Q
q
q
1.00000 0 0 RG
42.0000 6.04564 186.000 127.454 rc
newpath
43.0000 70.2728 m
44.9944 59.6718 l
46.9888 49.3807 l
48.7242 40.9133 l
50.4595 33.0960 l
52.4111 25.2963 l
54.3627 18.7556 l
56.3272 13.6287 l
58.2917 10.1085 l
59.2693 8.98848 l
60.2469 8.29964 l
60.7357 8.11859 l
61.2245 8.04693 l
61.7133 8.08480 l
62.2021 8.23211 l
64.0148 9.72759 l
65.8275 12.6859 l
67.7045 17.2140 l
69.5814 23.1164 l
71.5226 30.5033 l
73.4637 38.9917 l
75.3986 48.3154 l
77.3336 58.2434 l
79.3239 68.7982 l
81.3142 79.3959 l
83.0672 88.5204 l
84.8203 97.2325 l
86.7938 106.301 l
88.7674 114.339 l
90.7490 121.141 l
92.7306 126.474 l
94.6403 130.080 l
96.5500 132.082 l
96.9835 132.307 l
97.4170 132.446 l
97.8506 132.499 l
98.2841 132.466 l
98.7177 132.346 l
99.1512 132.141 l
99.5847 131.850 l
100.018 131.474 l
102.080 128.536 l
104.142 123.778 l
105.889 118.432 l
107.636 112.005 l
109.668 103.361 l
111.700 93.7142 l
113.498 84.5711 l
115.297 75.0879 l
117.271 64.5600 l
119.244 54.1957 l
121.123 44.7498 l
123.002 35.9666 l
124.963 27.7550 l
126.924 20.7448 l
128.724 15.5360 l
130.525 11.6320 l
131.496 10.1022 l
132.467 8.99020 l
132.953 8.59339 l
133.438 8.30370 l
133.924 8.12163 l
134.409 8.04750 l
134.914 8.08491 l
135.418 8.23885 l
135.922 8.50904 l
136.427 8.89494 l
137.435 10.0108 l
138.444 11.5781 l
140.200 15.3473 l
141.956 20.3621 l
143.853 27.0456 l
145.749 34.8722 l
147.709 43.9385 l
149.668 53.7479 l
151.585 63.7977 l
153.502 74.0225 l
155.357 83.8219 l
157.211 93.2787 l
159.271 103.087 l
161.330 111.873 l
163.180 118.669 l
165.031 124.246 l
167.007 128.699 l
168.982 131.475 l
169.430 131.862 l
169.877 132.157 l
170.325 132.362 l
170.773 132.475 l
171.220 132.496 l
171.668 132.426 l
172.115 132.263 l
172.563 132.009 l
174.520 129.837 l
176.477 125.987 l
178.319 120.929 l
180.160 114.609 l
182.086 106.823 l
184.011 98.0417 l
185.893 88.7230 l
187.775 78.9238 l
189.745 68.4280 l
191.715 57.9848 l
193.613 48.2549 l
195.511 39.1078 l
197.451 30.6087 l
199.392 23.2077 l
201.317 17.1542 l
203.241 12.5471 l
205.010 9.69706 l
206.778 8.24019 l
207.285 8.08506 l
207.791 8.04756 l
208.298 8.12776 l
208.805 8.32550 l
209.818 9.07192 l
210.832 10.2811 l
212.645 13.5677 l
214.458 18.2246 l
216.390 24.5720 l
218.323 32.1744 l
220.173 40.4340 l
222.023 49.4445 l
224.011 59.7051 l
226.000 70.2728 l
S
cliprestore
newpath
0 0 m
0 141.000 l
227.000 141.000 l
227.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
43.0000 70.0000 m
226.000 70.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
127 90 15 15 rc
newpath
131.171 96.1855 m
133.907 96.1855 l
133.907 96.4204 l
133.733 96.4204 133.612 96.4500 133.542 96.5092  c
133.472 96.5685 133.437 96.6468 133.437 96.7441  c
133.437 96.8457 133.511 97.0022 133.659 97.2138  c
133.706 97.2815 133.776 97.3873 133.869 97.5312  c
134.281 98.1914 l
134.757 97.5312 l
135.062 97.1123 135.214 96.8478 135.214 96.7377  c
135.214 96.6489 135.178 96.5738 135.106 96.5124  c
135.035 96.4510 134.918 96.4204 134.757 96.4204  c
134.757 96.1855 l
136.725 96.1855 l
136.725 96.4204 l
136.518 96.4331 136.338 96.4902 136.186 96.5918  c
135.978 96.7356 135.695 97.0488 135.335 97.5312  c
134.542 98.5913 l
135.989 100.673 l
136.344 101.185 136.598 101.493 136.751 101.596  c
136.903 101.700 137.100 101.758 137.341 101.771  c
137.341 102.000 l
134.599 102.000 l
134.599 101.771 l
134.789 101.771 134.937 101.729 135.043 101.644  c
135.123 101.585 135.164 101.507 135.164 101.409  c
135.164 101.312 135.028 101.066 134.757 100.673  c
133.907 99.4292 l
132.974 100.673 l
132.686 101.058 132.542 101.286 132.542 101.358  c
132.542 101.460 132.590 101.552 132.685 101.635  c
132.780 101.717 132.923 101.763 133.113 101.771  c
133.113 102.000 l
131.215 102.000 l
131.215 101.771 l
131.368 101.750 131.501 101.697 131.615 101.612  c
131.776 101.490 132.047 101.176 132.428 100.673  c
133.647 99.0546 l
132.542 97.4550 l
132.229 96.9980 131.987 96.7113 131.815 96.5949  c
131.644 96.4786 131.429 96.4204 131.171 96.4204  c
h
f
Q
cliprestore
newpath
0 0 m
0 141.000 l
227.000 141.000 l
227.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
43.0000 70.0000 m
43.0000 73.0000 l
S
Q
q
0 J
1 j
newpath
101.000 70.0000 m
101.000 73.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
newpath
108.643 97.3925 m
108.147 98.4716 l
105.558 98.4716 l
104.993 99.6269 l
106.114 99.7919 107.003 100.208 107.659 100.877  c
108.222 101.453 108.503 102.130 108.503 102.908  c
108.503 103.361 108.411 103.780 108.227 104.165  c
108.043 104.550 107.811 104.878 107.532 105.149  c
107.252 105.420 106.941 105.638 106.599 105.803  c
106.112 106.036 105.613 106.152 105.101 106.152  c
104.584 106.152 104.209 106.064 103.974 105.888  c
103.739 105.713 103.622 105.519 103.622 105.308  c
103.622 105.189 103.670 105.084 103.768 104.993  c
103.865 104.902 103.988 104.857 104.136 104.857  c
104.246 104.857 104.342 104.874 104.425 104.908  c
104.507 104.942 104.648 105.028 104.847 105.168  c
105.164 105.388 105.486 105.498 105.812 105.498  c
106.307 105.498 106.741 105.311 107.116 104.936  c
107.491 104.562 107.678 104.106 107.678 103.568  c
107.678 103.048 107.511 102.562 107.176 102.112  c
106.842 101.661 106.381 101.313 105.793 101.067  c
105.331 100.877 104.703 100.767 103.907 100.737  c
105.558 97.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
160.000 70.0000 m
160.000 73.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
newpath
158.523 98.2368 m
160.618 97.2148 l
160.827 97.2148 l
160.827 104.482 l
160.827 104.965 160.847 105.265 160.887 105.384  c
160.928 105.502 161.011 105.593 161.138 105.657  c
161.265 105.720 161.523 105.756 161.913 105.765  c
161.913 106.000 l
158.675 106.000 l
158.675 105.765 l
159.082 105.756 159.344 105.721 159.462 105.660  c
159.581 105.599 159.663 105.516 159.710 105.412  c
159.757 105.309 159.780 104.999 159.780 104.482  c
159.780 99.8364 l
159.780 99.2101 159.759 98.8081 159.716 98.6303  c
159.687 98.4949 159.633 98.3955 159.554 98.3320  c
159.476 98.2685 159.382 98.2368 159.272 98.2368  c
159.115 98.2368 158.897 98.3024 158.618 98.4335  c
h
164.469 101.747 m
164.469 100.765 164.617 99.9200 164.914 99.2111  c
165.210 98.5023 165.603 97.9744 166.094 97.6274  c
166.475 97.3523 166.869 97.2148 167.275 97.2148  c
167.935 97.2148 168.528 97.5512 169.052 98.2241  c
169.708 99.0577 170.036 100.187 170.036 101.613  c
170.036 102.612 169.892 103.460 169.605 104.159  c
169.317 104.857 168.950 105.364 168.503 105.679  c
168.057 105.994 167.626 106.152 167.211 106.152  c
166.391 106.152 165.707 105.667 165.161 104.698  c
164.700 103.882 164.469 102.898 164.469 101.747  c
h
165.713 101.905 m
165.713 103.090 165.859 104.057 166.151 104.806  c
166.393 105.437 166.752 105.752 167.231 105.752  c
167.459 105.752 167.696 105.649 167.941 105.444  c
168.187 105.239 168.373 104.895 168.500 104.413  c
168.695 103.685 168.792 102.659 168.792 101.334  c
168.792 100.352 168.690 99.5338 168.487 98.8779  c
168.335 98.3912 168.138 98.0463 167.897 97.8432  c
167.724 97.7036 167.514 97.6337 167.269 97.6337  c
166.981 97.6337 166.725 97.7628 166.501 98.0210  c
166.196 98.3722 165.988 98.9244 165.878 99.6777  c
165.768 100.431 165.713 101.173 165.713 101.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
218.000 70.0000 m
218.000 73.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
newpath
216.523 98.2368 m
218.618 97.2148 l
218.827 97.2148 l
218.827 104.482 l
218.827 104.965 218.847 105.265 218.887 105.384  c
218.928 105.502 219.011 105.593 219.138 105.657  c
219.265 105.720 219.523 105.756 219.913 105.765  c
219.913 106.000 l
216.675 106.000 l
216.675 105.765 l
217.082 105.756 217.344 105.721 217.462 105.660  c
217.581 105.599 217.663 105.516 217.710 105.412  c
217.757 105.309 217.780 104.999 217.780 104.482  c
217.780 99.8364 l
217.780 99.2101 217.759 98.8081 217.716 98.6303  c
217.687 98.4949 217.633 98.3955 217.554 98.3320  c
217.476 98.2685 217.382 98.2368 217.272 98.2368  c
217.115 98.2368 216.897 98.3024 216.618 98.4335  c
h
227.643 97.3925 m
227.147 98.4716 l
224.558 98.4716 l
223.993 99.6269 l
225.114 99.7919 226.003 100.208 226.659 100.877  c
227.222 101.453 227.503 102.130 227.503 102.908  c
227.503 103.361 227.411 103.780 227.227 104.165  c
227.043 104.550 226.811 104.878 226.532 105.149  c
226.252 105.420 225.941 105.638 225.599 105.803  c
225.112 106.036 224.613 106.152 224.101 106.152  c
223.584 106.152 223.209 106.064 222.974 105.888  c
222.739 105.713 222.622 105.519 222.622 105.308  c
222.622 105.189 222.670 105.084 222.768 104.993  c
222.865 104.902 222.988 104.857 223.136 104.857  c
223.246 104.857 223.342 104.874 223.425 104.908  c
223.507 104.942 223.648 105.028 223.847 105.168  c
224.164 105.388 224.486 105.498 224.812 105.498  c
225.307 105.498 225.741 105.311 226.116 104.936  c
226.491 104.562 226.678 104.106 226.678 103.568  c
226.678 103.048 226.511 102.562 226.176 102.112  c
225.842 101.661 225.381 101.313 224.793 101.067  c
224.331 100.877 223.703 100.767 222.907 100.737  c
224.558 97.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
55.0000 70.0000 m
55.0000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
66.0000 70.0000 m
66.0000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
78.0000 70.0000 m
78.0000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
90.0000 70.0000 m
90.0000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
113.000 70.0000 m
113.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
125.000 70.0000 m
125.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
136.000 70.0000 m
136.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
148.000 70.0000 m
148.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
171.000 70.0000 m
171.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
183.000 70.0000 m
183.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
194.000 70.0000 m
194.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
206.000 70.0000 m
206.000 72.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
Q
q
newpath
43.0000 132.500 m
43.0000 8.04563 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 32 8 15 rc
Q
cliprestore
newpath
0 0 m
0 141.000 l
227.000 141.000 l
227.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
43.0000 133.000 m
40.0000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
q
27 146 7 13 rc
newpath
37.7900 153.438 m
29.2100 153.438 l
29.2100 152.762 l
37.7900 152.762 l
h
f
Q
newpath
37.5234 149.236 m
39.6181 148.214 l
39.8276 148.214 l
39.8276 155.482 l
39.8276 155.965 39.8477 156.265 39.8879 156.384  c
39.9281 156.502 40.0117 156.593 40.1386 156.657  c
40.2656 156.720 40.5237 156.756 40.9130 156.765  c
40.9130 157.000 l
37.6757 157.000 l
37.6757 156.765 l
38.0820 156.756 38.3444 156.721 38.4628 156.660  c
38.5813 156.599 38.6639 156.516 38.7104 156.412  c
38.7570 156.309 38.7802 155.999 38.7802 155.482  c
38.7802 150.836 l
38.7802 150.210 38.7591 149.808 38.7168 149.630  c
38.6871 149.495 38.6332 149.395 38.5549 149.332  c
38.4766 149.268 38.3824 149.236 38.2724 149.236  c
38.1158 149.236 37.8979 149.302 37.6186 149.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 101.000 m
40.0000 101.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
q
17 115 7 13 rc
newpath
27.7900 122.438 m
19.2100 122.438 l
19.2100 121.762 l
27.7900 121.762 l
h
f
Q
newpath
26.4697 121.747 m
26.4697 120.765 26.6178 119.920 26.9140 119.211  c
27.2102 118.502 27.6038 117.974 28.0947 117.627  c
28.4755 117.352 28.8691 117.214 29.2753 117.214  c
29.9355 117.214 30.5279 117.551 31.0527 118.224  c
31.7086 119.057 32.0366 120.187 32.0366 121.613  c
32.0366 122.612 31.8927 123.460 31.6049 124.159  c
31.3172 124.857 30.9501 125.364 30.5036 125.679  c
30.0572 125.994 29.6266 126.152 29.2119 126.152  c
28.3909 126.152 27.7075 125.667 27.1616 124.698  c
26.7003 123.882 26.4697 122.898 26.4697 121.747  c
h
27.7138 121.905 m
27.7138 123.090 27.8598 124.057 28.1518 124.806  c
28.3930 125.437 28.7527 125.752 29.2309 125.752  c
29.4594 125.752 29.6964 125.649 29.9418 125.444  c
30.1873 125.239 30.3735 124.895 30.5004 124.413  c
30.6951 123.685 30.7924 122.659 30.7924 121.334  c
30.7924 120.352 30.6909 119.533 30.4877 118.877  c
30.3354 118.391 30.1386 118.046 29.8974 117.843  c
29.7239 117.703 29.5144 117.633 29.2690 117.633  c
28.9812 117.633 28.7252 117.762 28.5009 118.021  c
28.1962 118.372 27.9889 118.924 27.8789 119.677  c
27.7688 120.431 27.7138 121.173 27.7138 121.905  c
h
34.6250 124.768 m
34.8238 124.768 34.9910 124.837 35.1264 124.974  c
35.2618 125.112 35.3295 125.278 35.3295 125.473  c
35.3295 125.667 35.2608 125.833 35.1232 125.971  c
34.9857 126.109 34.8196 126.177 34.6250 126.177  c
34.4303 126.177 34.2642 126.109 34.1267 125.971  c
33.9891 125.833 33.9204 125.667 33.9204 125.473  c
33.9204 125.274 33.9891 125.107 34.1267 124.971  c
34.2642 124.836 34.4303 124.768 34.6250 124.768  c
h
41.6430 117.392 m
41.1479 118.471 l
38.5581 118.471 l
37.9931 119.627 l
39.1145 119.792 40.0032 120.208 40.6591 120.877  c
41.2220 121.453 41.5034 122.130 41.5034 122.908  c
41.5034 123.361 41.4113 123.780 41.2272 124.165  c
41.0432 124.550 40.8115 124.878 40.5322 125.149  c
40.2529 125.420 39.9418 125.638 39.5991 125.803  c
39.1124 126.036 38.6131 126.152 38.1010 126.152  c
37.5848 126.152 37.2092 126.064 36.9743 125.888  c
36.7395 125.713 36.6220 125.519 36.6220 125.308  c
36.6220 125.189 36.6707 125.084 36.7680 124.993  c
36.8654 124.902 36.9881 124.857 37.1362 124.857  c
37.2462 124.857 37.3425 124.874 37.4250 124.908  c
37.5075 124.942 37.6482 125.028 37.8471 125.168  c
38.1645 125.388 38.4861 125.498 38.8120 125.498  c
39.3071 125.498 39.7419 125.311 40.1164 124.936  c
40.4909 124.562 40.6782 124.106 40.6782 123.568  c
40.6782 123.048 40.5110 122.562 40.1767 122.112  c
39.8424 121.661 39.3811 121.313 38.7929 121.067  c
38.3317 120.877 37.7032 120.767 36.9077 120.737  c
38.5581 117.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 70.0000 m
40.0000 70.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
newpath
36.4697 90.7470 m
36.4697 89.7653 36.6178 88.9200 36.9140 88.2111  c
37.2102 87.5023 37.6038 86.9744 38.0947 86.6274  c
38.4755 86.3523 38.8691 86.2148 39.2753 86.2148  c
39.9355 86.2148 40.5279 86.5512 41.0527 87.2241  c
41.7086 88.0577 42.0366 89.1876 42.0366 90.6137  c
42.0366 91.6124 41.8927 92.4609 41.6049 93.1591  c
41.3172 93.8574 40.9501 94.3641 40.5036 94.6794  c
40.0572 94.9947 39.6266 95.1523 39.2119 95.1523  c
38.3909 95.1523 37.7075 94.6678 37.1616 93.6987  c
36.7003 92.8820 36.4697 91.8981 36.4697 90.7470  c
h
37.7138 90.9057 m
37.7138 92.0906 37.8598 93.0576 38.1518 93.8066  c
38.3930 94.4371 38.7527 94.7524 39.2309 94.7524  c
39.4594 94.7524 39.6964 94.6498 39.9418 94.4445  c
40.1873 94.2393 40.3735 93.8955 40.5004 93.4130  c
40.6951 92.6852 40.7924 91.6590 40.7924 90.3344  c
40.7924 89.3527 40.6909 88.5338 40.4877 87.8779  c
40.3354 87.3912 40.1386 87.0463 39.8974 86.8432  c
39.7239 86.7036 39.5144 86.6337 39.2690 86.6337  c
38.9812 86.6337 38.7252 86.7628 38.5009 87.0210  c
38.1962 87.3722 37.9889 87.9244 37.8789 88.6777  c
37.7688 89.4309 37.7138 90.1736 37.7138 90.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 39.0000 m
40.0000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
newpath
26.4697 59.7470 m
26.4697 58.7653 26.6178 57.9200 26.9140 57.2111  c
27.2102 56.5023 27.6038 55.9744 28.0947 55.6274  c
28.4755 55.3523 28.8691 55.2148 29.2753 55.2148  c
29.9355 55.2148 30.5279 55.5512 31.0527 56.2241  c
31.7086 57.0577 32.0366 58.1876 32.0366 59.6137  c
32.0366 60.6124 31.8927 61.4609 31.6049 62.1591  c
31.3172 62.8574 30.9501 63.3641 30.5036 63.6794  c
30.0572 63.9947 29.6266 64.1523 29.2119 64.1523  c
28.3909 64.1523 27.7075 63.6678 27.1616 62.6987  c
26.7003 61.8820 26.4697 60.8981 26.4697 59.7470  c
h
27.7138 59.9057 m
27.7138 61.0906 27.8598 62.0576 28.1518 62.8066  c
28.3930 63.4371 28.7527 63.7524 29.2309 63.7524  c
29.4594 63.7524 29.6964 63.6498 29.9418 63.4445  c
30.1873 63.2393 30.3735 62.8955 30.5004 62.4130  c
30.6951 61.6852 30.7924 60.6590 30.7924 59.3344  c
30.7924 58.3527 30.6909 57.5338 30.4877 56.8779  c
30.3354 56.3912 30.1386 56.0463 29.8974 55.8432  c
29.7239 55.7036 29.5144 55.6337 29.2690 55.6337  c
28.9812 55.6337 28.7252 55.7628 28.5009 56.0210  c
28.1962 56.3722 27.9889 56.9244 27.8789 57.6777  c
27.7688 58.4309 27.7138 59.1736 27.7138 59.9057  c
h
34.6250 62.7685 m
34.8238 62.7685 34.9910 62.8373 35.1264 62.9748  c
35.2618 63.1123 35.3295 63.2784 35.3295 63.4731  c
35.3295 63.6678 35.2608 63.8339 35.1232 63.9714  c
34.9857 64.1089 34.8196 64.1777 34.6250 64.1777  c
34.4303 64.1777 34.2642 64.1089 34.1267 63.9714  c
33.9891 63.8339 33.9204 63.6678 33.9204 63.4731  c
33.9204 63.2742 33.9891 63.1071 34.1267 62.9716  c
34.2642 62.8362 34.4303 62.7685 34.6250 62.7685  c
h
41.6430 55.3925 m
41.1479 56.4716 l
38.5581 56.4716 l
37.9931 57.6269 l
39.1145 57.7919 40.0032 58.2088 40.6591 58.8774  c
41.2220 59.4529 41.5034 60.1300 41.5034 60.9086  c
41.5034 61.3614 41.4113 61.7804 41.2272 62.1655  c
41.0432 62.5506 40.8115 62.8785 40.5322 63.1494  c
40.2529 63.4202 39.9418 63.6381 39.5991 63.8032  c
39.1124 64.0359 38.6131 64.1523 38.1010 64.1523  c
37.5848 64.1523 37.2092 64.0645 36.9743 63.8889  c
36.7395 63.7133 36.6220 63.5196 36.6220 63.3081  c
36.6220 63.1896 36.6707 63.0848 36.7680 62.9939  c
36.8654 62.9029 36.9881 62.8574 37.1362 62.8574  c
37.2462 62.8574 37.3425 62.8743 37.4250 62.9082  c
37.5075 62.9420 37.6482 63.0288 37.8471 63.1684  c
38.1645 63.3885 38.4861 63.4985 38.8120 63.4985  c
39.3071 63.4985 39.7419 63.3112 40.1164 62.9367  c
40.4909 62.5622 40.6782 62.1062 40.6782 61.5688  c
40.6782 61.0483 40.5110 60.5627 40.1767 60.1120  c
39.8424 59.6613 39.3811 59.3133 38.7929 59.0678  c
38.3317 58.8774 37.7032 58.7674 36.9077 58.7377  c
38.5581 55.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 8.00000 m
40.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
newpath
37.5234 25.2368 m
39.6181 24.2148 l
39.8276 24.2148 l
39.8276 31.4829 l
39.8276 31.9653 39.8477 32.2657 39.8879 32.3842  c
39.9281 32.5027 40.0117 32.5937 40.1386 32.6572  c
40.2656 32.7207 40.5237 32.7566 40.9130 32.7651  c
40.9130 33.0000 l
37.6757 33.0000 l
37.6757 32.7651 l
38.0820 32.7566 38.3444 32.7217 38.4628 32.6604  c
38.5813 32.5990 38.6639 32.5165 38.7104 32.4128  c
38.7570 32.3091 38.7802 31.9991 38.7802 31.4829  c
38.7802 26.8364 l
38.7802 26.2101 38.7591 25.8081 38.7168 25.6303  c
38.6871 25.4949 38.6332 25.3955 38.5549 25.3320  c
38.4766 25.2685 38.3824 25.2368 38.2724 25.2368  c
38.1158 25.2368 37.8979 25.3024 37.6186 25.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 126.000 m
41.0000 126.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 120.000 m
41.0000 120.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 114.000 m
41.0000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 108.000 m
41.0000 108.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 95.0000 m
41.0000 95.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 89.0000 m
41.0000 89.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 83.0000 m
41.0000 83.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 76.0000 m
41.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 64.0000 m
41.0000 64.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 58.0000 m
41.0000 58.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 52.0000 m
41.0000 52.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 45.0000 m
41.0000 45.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 33.0000 m
41.0000 33.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 27.0000 m
41.0000 27.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 20.0000 m
41.0000 20.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
q
0 J
1 j
newpath
43.0000 14.0000 m
41.0000 14.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -20.0000 ] concat
[ 1.00000 0 0 1.00000 5.00000 20.0000 ] concat
Q
Q
Q
Q
cliprestore
0 0 237 166 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
5 5 228 16 rc
q
5 5 228 16 rc
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 229 15 rc
newpath
103.094 4.27490 m
103.094 6.18554 l
104.453 6.18554 l
104.453 6.62988 l
103.094 6.62988 l
103.094 10.4003 l
103.094 10.7770 103.148 11.0309 103.256 11.1621  c
103.364 11.2932 103.503 11.3588 103.672 11.3588  c
103.812 11.3588 103.947 11.3155 104.078 11.2287  c
104.209 11.1420 104.311 11.0140 104.383 10.8447  c
104.630 10.8447 l
104.482 11.2594 104.273 11.5715 104.002 11.7810  c
103.731 11.9904 103.452 12.0952 103.164 12.0952  c
102.969 12.0952 102.779 12.0412 102.593 11.9333  c
102.407 11.8254 102.269 11.6709 102.180 11.4699  c
102.091 11.2689 102.047 10.9589 102.047 10.5400  c
102.047 6.62988 l
101.127 6.62988 l
101.127 6.42041 l
101.359 6.32731 101.597 6.16967 101.841 5.94751  c
102.084 5.72534 102.301 5.46191 102.491 5.15722  c
102.589 4.99641 102.724 4.70231 102.897 4.27490  c
h
108.234 6.39502 m
115.084 6.39502 l
115.084 6.91552 l
108.234 6.91552 l
h
108.234 8.46435 m
115.084 8.46435 l
115.084 8.98486 l
108.234 8.98486 l
h
118.469 7.74707 m
118.469 6.76529 118.617 5.92000 118.914 5.21118  c
119.210 4.50236 119.603 3.97444 120.094 3.62744  c
120.475 3.35237 120.869 3.21484 121.275 3.21484  c
121.935 3.21484 122.528 3.55127 123.052 4.22412  c
123.708 5.05778 124.036 6.18766 124.036 7.61377  c
124.036 8.61246 123.892 9.46093 123.605 10.1591  c
123.317 10.8574 122.950 11.3641 122.503 11.6794  c
122.057 11.9947 121.626 12.1523 121.211 12.1523  c
120.391 12.1523 119.707 11.6678 119.161 10.6987  c
118.700 9.88199 118.469 8.89811 118.469 7.74707  c
h
119.713 7.90576 m
119.713 9.09065 119.859 10.0576 120.151 10.8066  c
120.393 11.4371 120.752 11.7524 121.231 11.7524  c
121.459 11.7524 121.696 11.6498 121.941 11.4445  c
122.187 11.2393 122.373 10.8955 122.500 10.4130  c
122.695 9.68522 122.792 8.65901 122.792 7.33447  c
122.792 6.35270 122.690 5.53385 122.487 4.87793  c
122.335 4.39127 122.138 4.04638 121.897 3.84326  c
121.724 3.70361 121.514 3.63378 121.269 3.63378  c
120.981 3.63378 120.725 3.76285 120.501 4.02099  c
120.196 4.37223 119.988 4.92447 119.878 5.67773  c
119.768 6.43099 119.713 7.17366 119.713 7.90576  c
h
126.625 10.7685 m
126.823 10.7685 126.991 10.8373 127.126 10.9748  c
127.261 11.1123 127.329 11.2784 127.329 11.4731  c
127.329 11.6678 127.260 11.8339 127.123 11.9714  c
126.985 12.1089 126.819 12.1777 126.625 12.1777  c
126.430 12.1777 126.264 12.1089 126.126 11.9714  c
125.989 11.8339 125.920 11.6678 125.920 11.4731  c
125.920 11.2742 125.989 11.1071 126.126 10.9716  c
126.264 10.8362 126.430 10.7685 126.625 10.7685  c
h
f
Q
cliprestore
newpath
0 0 m
0 16.0000 l
228.000 16.0000 l
228.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
cliprestore
newpath
5.00000 5.00000 m
5.00000 21.0000 l
233.000 21.0000 l
233.000 5.00000 l
h
W
Q
cliprestore
Q
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
