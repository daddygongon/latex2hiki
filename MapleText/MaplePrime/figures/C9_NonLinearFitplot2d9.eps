%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 260 575 531
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ15“ú 18Žž29•ª29•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 194 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 194.000 l
0 194.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 184 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
37.0000 2.01351 350.994 147.986 rc
newpath
38.0000 138.937 m
39.3646 140.152 l
40.7293 141.167 l
42.0940 135.892 l
43.4587 138.238 l
44.8234 135.317 l
46.1881 138.072 l
47.5528 133.961 l
48.9174 137.965 l
50.2821 135.694 l
51.6468 134.984 l
53.0115 135.104 l
54.3762 139.308 l
55.7409 137.102 l
57.1056 133.018 l
58.4702 138.077 l
59.8349 133.999 l
61.1996 135.938 l
62.5643 133.662 l
63.9290 136.448 l
65.2937 134.098 l
66.6584 132.115 l
68.0230 134.713 l
69.3877 135.070 l
70.7524 131.377 l
72.1171 133.919 l
73.4818 135.622 l
74.8465 136.518 l
76.2112 131.063 l
77.5758 132.045 l
78.9405 130.060 l
80.3052 132.449 l
81.6699 128.398 l
83.0346 127.995 l
84.3993 126.699 l
85.7639 130.372 l
87.1286 129.425 l
88.4933 130.717 l
89.8580 124.542 l
91.2227 126.347 l
92.5874 126.829 l
93.9521 126.445 l
95.3168 131.477 l
96.6814 130.840 l
98.0461 126.253 l
99.4108 126.286 l
100.775 122.014 l
102.140 120.672 l
103.504 126.561 l
104.869 118.302 l
106.234 123.083 l
107.599 118.211 l
108.963 114.614 l
110.328 119.165 l
111.693 119.365 l
113.057 112.350 l
114.422 110.694 l
115.787 111.305 l
117.151 117.326 l
118.516 113.213 l
119.881 111.111 l
121.245 112.546 l
122.610 111.402 l
123.975 99.1152 l
125.339 102.024 l
126.704 92.8294 l
128.069 107.256 l
129.433 97.4224 l
130.798 103.965 l
132.163 89.5305 l
133.528 94.8753 l
134.892 77.1246 l
136.257 94.2107 l
137.622 79.6308 l
138.986 86.0532 l
140.351 71.4719 l
141.716 74.1432 l
143.080 79.2272 l
144.445 57.7594 l
145.810 68.9971 l
147.174 46.9151 l
148.539 44.8099 l
149.904 62.9396 l
151.268 53.6097 l
152.633 31.5378 l
153.998 30.6140 l
155.363 50.8970 l
156.727 22.8561 l
158.092 35.0822 l
159.457 39.9561 l
160.821 49.4666 l
162.186 31.1288 l
163.551 36.9102 l
164.915 34.6878 l
166.280 44.3965 l
167.645 34.7173 l
169.009 34.6936 l
170.374 58.1631 l
171.739 60.3649 l
173.103 52.2947 l
174.468 44.9991 l
175.833 34.6530 l
177.197 39.9818 l
178.562 53.9289 l
179.927 65.3940 l
181.292 61.4122 l
182.656 37.8401 l
184.021 43.2566 l
185.386 59.7237 l
186.750 59.2314 l
188.115 43.7530 l
189.480 47.1754 l
190.844 39.1832 l
192.209 52.5595 l
193.574 56.8983 l
194.938 39.0270 l
196.303 36.7411 l
197.668 44.0907 l
199.032 31.3904 l
200.397 35.4142 l
201.762 42.8004 l
203.127 26.6144 l
204.491 35.7219 l
205.856 35.6161 l
207.221 48.2245 l
208.585 50.0599 l
209.950 38.2493 l
211.315 44.1821 l
212.679 44.3693 l
214.044 40.0878 l
215.409 50.6347 l
216.773 39.7663 l
218.138 56.9474 l
219.503 51.3101 l
220.867 42.8250 l
222.232 59.2017 l
223.597 50.1154 l
224.961 75.5610 l
226.326 73.5829 l
227.691 57.3671 l
229.056 79.3179 l
230.420 75.3958 l
231.785 68.4285 l
233.150 92.3364 l
234.514 80.1360 l
235.879 88.7551 l
237.244 83.7241 l
238.608 82.8530 l
239.973 98.9549 l
241.338 96.1696 l
242.702 98.8839 l
244.067 107.308 l
245.432 99.2630 l
246.796 98.5281 l
248.161 108.888 l
249.526 111.549 l
250.890 105.552 l
252.255 106.076 l
253.620 106.640 l
254.985 112.404 l
256.349 119.023 l
257.714 114.739 l
259.079 115.988 l
260.443 118.509 l
261.808 121.513 l
263.173 123.715 l
264.537 126.411 l
265.902 127.128 l
267.267 118.146 l
268.631 125.921 l
269.996 122.224 l
271.361 122.567 l
272.725 128.170 l
274.090 125.766 l
275.455 129.839 l
276.820 130.643 l
278.184 129.597 l
279.549 126.696 l
280.914 128.851 l
282.278 130.972 l
283.643 128.471 l
285.008 127.044 l
286.372 128.293 l
287.737 132.776 l
289.102 131.141 l
290.466 131.551 l
291.831 129.871 l
293.196 133.530 l
294.560 136.359 l
295.925 130.450 l
297.290 130.381 l
298.654 131.092 l
300.019 135.014 l
301.384 130.859 l
302.749 133.039 l
304.113 132.602 l
305.478 133.807 l
306.843 134.080 l
308.207 132.723 l
309.572 138.822 l
310.937 137.000 l
312.301 133.682 l
313.666 137.651 l
315.031 137.397 l
316.395 136.534 l
317.760 138.782 l
319.125 137.851 l
320.489 139.273 l
321.854 139.076 l
323.219 139.476 l
324.584 139.929 l
325.948 136.079 l
327.313 135.581 l
328.678 135.648 l
330.042 138.781 l
331.407 140.189 l
332.772 138.761 l
334.136 139.591 l
335.501 140.717 l
336.866 135.537 l
338.230 140.167 l
339.595 139.865 l
340.960 137.957 l
342.324 137.112 l
343.689 139.859 l
345.054 136.289 l
346.418 137.204 l
347.783 139.260 l
349.148 137.920 l
350.513 139.520 l
351.877 142.447 l
353.242 142.542 l
354.607 136.877 l
355.971 138.317 l
357.336 141.510 l
358.701 142.315 l
360.065 140.397 l
361.430 142.728 l
362.795 137.494 l
364.159 140.715 l
365.524 138.083 l
366.889 141.990 l
368.253 140.205 l
369.618 142.040 l
370.983 139.189 l
372.348 140.845 l
373.712 139.661 l
375.077 138.184 l
376.442 141.526 l
377.806 138.140 l
379.171 143.430 l
380.536 139.936 l
381.900 143.316 l
383.265 142.298 l
384.630 139.848 l
385.994 139.225 l
S
cliprestore
newpath
0 0 m
0 184.000 l
390.000 184.000 l
390.000 0 l
h
W
Q
q
37.0000 2.01351 350.994 147.986 rc
1.00000 0 0 RG
newpath
38.0000 148.861 m
39.8296 148.853 l
41.4215 148.846 l
43.2118 148.838 l
45.0140 148.829 l
46.8076 148.821 l
48.4705 148.812 l
50.1923 148.803 l
51.9731 148.793 l
53.7481 148.782 l
55.5739 148.771 l
57.1821 148.761 l
58.9925 148.749 l
60.8104 148.736 l
62.5623 148.723 l
64.1531 148.710 l
66.0448 148.695 l
67.6473 148.681 l
69.5114 148.664 l
71.1614 148.648 l
72.9718 148.629 l
74.6957 148.611 l
76.4943 148.590 l
78.1461 148.570 l
79.9278 148.548 l
81.7784 148.522 l
83.3893 148.499 l
85.1292 148.472 l
86.9267 148.443 l
88.6852 148.412 l
90.3867 148.380 l
92.2758 148.341 l
93.9733 148.304 l
95.7857 148.262 l
97.4280 148.220 l
99.2235 148.171 l
100.913 148.121 l
102.678 148.064 l
104.405 148.003 l
106.213 147.934 l
107.953 147.860 l
109.734 147.778 l
111.499 147.687 l
113.121 147.595 l
114.981 147.478 l
116.644 147.362 l
118.417 147.222 l
120.114 147.072 l
121.999 146.882 l
123.630 146.694 l
125.483 146.450 l
127.171 146.192 l
129.017 145.862 l
130.610 145.529 l
132.424 145.080 l
134.177 144.558 l
135.929 143.924 l
137.674 143.147 l
139.350 142.216 l
141.162 140.935 l
142.889 139.343 l
144.707 137.100 l
146.353 134.330 l
148.171 130.005 l
149.913 123.883 l
150.782 119.737 l
151.651 114.570 l
152.559 107.748 l
153.466 99.0289 l
154.302 88.8612 l
155.138 76.2285 l
155.566 68.7264 l
155.994 60.5456 l
156.422 51.7782 l
156.850 42.6103 l
157.322 32.3952 l
157.795 22.6722 l
158.268 14.2227 l
158.740 7.90577 l
159.168 4.66593 l
159.596 4.15522 l
160.024 6.42958 l
160.452 11.2315 l
160.889 18.2325 l
161.327 26.6813 l
161.765 35.9092 l
162.202 45.3464 l
162.647 54.7191 l
163.092 63.5725 l
163.537 71.7413 l
163.982 79.1565 l
164.800 90.8352 l
165.618 100.229 l
166.491 108.169 l
167.363 114.421 l
169.094 123.268 l
170.945 129.325 l
172.579 132.886 l
174.464 135.685 l
176.165 137.406 l
177.849 138.581 l
179.659 139.408 l
180.567 139.684 l
181.476 139.876 l
182.303 139.984 l
183.130 140.030 l
184.008 140.012 l
184.886 139.925 l
185.742 139.771 l
186.599 139.546 l
188.457 138.784 l
190.064 137.763 l
191.910 136.038 l
193.646 133.664 l
195.365 130.244 l
197.085 125.175 l
198.839 117.261 l
199.769 111.349 l
200.699 103.740 l
201.551 94.8280 l
202.404 83.5986 l
202.824 77.0784 l
203.245 69.8767 l
203.666 62.0091 l
204.087 53.5484 l
204.536 44.0246 l
204.986 34.3258 l
205.436 24.9403 l
205.886 16.5114 l
206.335 9.78796 l
206.784 5.45153 l
207.008 4.34997 l
207.232 4.01351 l
207.457 4.45335 l
207.681 5.65570 l
208.084 9.59442 l
208.487 15.4841 l
208.890 22.8231 l
209.293 31.0759 l
209.770 41.3655 l
210.247 51.6053 l
210.724 61.3562 l
211.201 70.3648 l
212.000 83.5166 l
212.799 94.2972 l
213.733 104.302 l
214.667 112.065 l
215.558 117.871 l
216.450 122.486 l
218.042 128.604 l
219.832 133.314 l
221.634 136.602 l
223.428 138.952 l
225.091 140.583 l
226.812 141.886 l
228.593 142.937 l
230.368 143.769 l
232.194 144.457 l
233.802 144.955 l
235.613 145.424 l
237.430 145.817 l
239.182 146.138 l
240.773 146.389 l
242.665 146.647 l
244.267 146.837 l
246.131 147.030 l
247.782 147.181 l
249.592 147.328 l
251.316 147.453 l
253.114 147.569 l
254.766 147.665 l
256.548 147.758 l
258.398 147.846 l
260.009 147.915 l
261.749 147.984 l
263.547 148.048 l
265.305 148.106 l
267.007 148.158 l
268.896 148.211 l
270.593 148.254 l
272.406 148.298 l
274.048 148.334 l
275.844 148.371 l
277.533 148.403 l
279.299 148.435 l
281.025 148.464 l
282.833 148.492 l
284.574 148.518 l
286.354 148.542 l
288.120 148.565 l
289.742 148.585 l
291.601 148.607 l
293.264 148.625 l
295.038 148.643 l
296.735 148.660 l
298.619 148.677 l
300.251 148.691 l
302.103 148.707 l
303.791 148.720 l
305.637 148.734 l
307.231 148.745 l
309.045 148.758 l
310.798 148.769 l
312.549 148.780 l
314.294 148.790 l
315.970 148.800 l
317.783 148.810 l
319.510 148.819 l
321.328 148.828 l
322.973 148.836 l
324.792 148.844 l
326.534 148.852 l
328.272 148.859 l
330.087 148.866 l
331.758 148.873 l
333.470 148.879 l
335.361 148.886 l
337.072 148.892 l
338.823 148.898 l
340.603 148.903 l
342.239 148.908 l
343.983 148.914 l
345.714 148.919 l
347.566 148.924 l
349.199 148.928 l
351.085 148.933 l
352.786 148.937 l
354.469 148.942 l
356.279 148.946 l
358.097 148.950 l
359.750 148.954 l
361.506 148.957 l
363.220 148.961 l
365.077 148.965 l
366.685 148.968 l
368.531 148.971 l
370.266 148.975 l
371.985 148.978 l
373.705 148.981 l
375.459 148.984 l
377.319 148.987 l
379.024 148.989 l
380.707 148.992 l
382.506 148.995 l
384.302 148.997 l
385.994 149.000 l
S
cliprestore
newpath
0 0 m
0 184.000 l
390.000 184.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
35.0000 152.000 m
385.994 152.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
204 169 14 15 rc
newpath
210.278 175.255 m
210.486 175.475 210.642 175.695 210.748 175.915  c
210.824 176.067 210.949 176.467 211.123 177.115  c
211.681 176.277 l
211.829 176.074 212.009 175.880 212.221 175.696  c
212.432 175.512 212.619 175.386 212.779 175.318  c
212.881 175.276 212.993 175.255 213.116 175.255  c
213.298 175.255 213.443 175.304 213.551 175.401  c
213.658 175.498 213.712 175.617 213.712 175.756  c
213.712 175.917 213.681 176.027 213.617 176.086  c
213.499 176.192 213.363 176.245 213.211 176.245  c
213.122 176.245 213.027 176.226 212.925 176.188  c
212.726 176.120 212.593 176.086 212.525 176.086  c
212.424 176.086 212.303 176.146 212.164 176.264  c
211.901 176.484 211.588 176.910 211.224 177.540  c
211.745 179.724 l
211.825 180.058 211.893 180.258 211.948 180.324  c
212.003 180.389 212.058 180.422 212.113 180.422  c
212.202 180.422 212.305 180.373 212.424 180.276  c
212.657 180.081 212.856 179.827 213.021 179.514  c
213.243 179.628 l
212.976 180.128 212.638 180.543 212.227 180.873  c
211.994 181.059 211.798 181.152 211.637 181.152  c
211.400 181.152 211.211 181.019 211.072 180.752  c
210.983 180.587 210.799 179.876 210.520 178.619  c
209.859 179.766 209.330 180.504 208.933 180.835  c
208.675 181.046 208.425 181.152 208.184 181.152  c
208.014 181.152 207.860 181.091 207.720 180.968  c
207.619 180.875 207.568 180.750 207.568 180.593  c
207.568 180.454 207.614 180.337 207.708 180.244  c
207.801 180.151 207.915 180.105 208.050 180.105  c
208.186 180.105 208.330 180.172 208.482 180.308  c
208.592 180.405 208.677 180.454 208.736 180.454  c
208.787 180.454 208.852 180.420 208.933 180.352  c
209.132 180.191 209.402 179.844 209.745 179.311  c
210.088 178.778 210.312 178.393 210.418 178.156  c
210.156 177.127 210.014 176.584 209.993 176.524  c
209.895 176.249 209.768 176.055 209.612 175.940  c
209.455 175.826 209.225 175.769 208.920 175.769  c
208.823 175.769 208.710 175.773 208.584 175.782  c
208.584 175.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 184.000 l
390.000 184.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
105.000 152.000 m
105.000 156.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
107.643 163.392 m
107.147 164.471 l
104.558 164.471 l
103.993 165.627 l
105.114 165.792 106.003 166.208 106.659 166.877  c
107.222 167.453 107.503 168.130 107.503 168.908  c
107.503 169.361 107.411 169.780 107.227 170.165  c
107.043 170.550 106.811 170.878 106.532 171.149  c
106.252 171.420 105.941 171.638 105.599 171.803  c
105.112 172.036 104.613 172.152 104.101 172.152  c
103.584 172.152 103.209 172.064 102.974 171.888  c
102.739 171.713 102.622 171.519 102.622 171.308  c
102.622 171.189 102.670 171.084 102.768 170.993  c
102.865 170.902 102.988 170.857 103.136 170.857  c
103.246 170.857 103.342 170.874 103.425 170.908  c
103.507 170.942 103.648 171.028 103.847 171.168  c
104.164 171.388 104.486 171.498 104.812 171.498  c
105.307 171.498 105.741 171.311 106.116 170.936  c
106.491 170.562 106.678 170.106 106.678 169.568  c
106.678 169.048 106.511 168.562 106.176 168.112  c
105.842 167.661 105.381 167.313 104.793 167.067  c
104.331 166.877 103.703 166.767 102.907 166.737  c
104.558 163.392 l
h
109.469 167.747 m
109.469 166.765 109.617 165.920 109.914 165.211  c
110.210 164.502 110.603 163.974 111.094 163.627  c
111.475 163.352 111.869 163.214 112.275 163.214  c
112.935 163.214 113.528 163.551 114.052 164.224  c
114.708 165.057 115.036 166.187 115.036 167.613  c
115.036 168.612 114.892 169.460 114.605 170.159  c
114.317 170.857 113.950 171.364 113.503 171.679  c
113.057 171.994 112.626 172.152 112.211 172.152  c
111.391 172.152 110.707 171.667 110.161 170.698  c
109.700 169.882 109.469 168.898 109.469 167.747  c
h
110.713 167.905 m
110.713 169.090 110.859 170.057 111.151 170.806  c
111.393 171.437 111.752 171.752 112.231 171.752  c
112.459 171.752 112.696 171.649 112.941 171.444  c
113.187 171.239 113.373 170.895 113.500 170.413  c
113.695 169.685 113.792 168.659 113.792 167.334  c
113.792 166.352 113.690 165.533 113.487 164.877  c
113.335 164.391 113.138 164.046 112.897 163.843  c
112.724 163.703 112.514 163.633 112.269 163.633  c
111.981 163.633 111.725 163.762 111.501 164.021  c
111.196 164.372 110.988 164.924 110.878 165.677  c
110.768 166.431 110.713 167.173 110.713 167.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
173.000 152.000 m
173.000 156.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
169.523 164.236 m
171.618 163.214 l
171.827 163.214 l
171.827 170.482 l
171.827 170.965 171.847 171.265 171.887 171.384  c
171.928 171.502 172.011 171.593 172.138 171.657  c
172.265 171.720 172.523 171.756 172.913 171.765  c
172.913 172.000 l
169.675 172.000 l
169.675 171.765 l
170.082 171.756 170.344 171.721 170.462 171.660  c
170.581 171.599 170.663 171.516 170.710 171.412  c
170.757 171.309 170.780 170.999 170.780 170.482  c
170.780 165.836 l
170.780 165.210 170.759 164.808 170.716 164.630  c
170.687 164.495 170.633 164.395 170.554 164.332  c
170.476 164.268 170.382 164.236 170.272 164.236  c
170.115 164.236 169.897 164.302 169.618 164.433  c
h
175.469 167.747 m
175.469 166.765 175.617 165.920 175.914 165.211  c
176.210 164.502 176.603 163.974 177.094 163.627  c
177.475 163.352 177.869 163.214 178.275 163.214  c
178.935 163.214 179.528 163.551 180.052 164.224  c
180.708 165.057 181.036 166.187 181.036 167.613  c
181.036 168.612 180.892 169.460 180.605 170.159  c
180.317 170.857 179.950 171.364 179.503 171.679  c
179.057 171.994 178.626 172.152 178.211 172.152  c
177.391 172.152 176.707 171.667 176.161 170.698  c
175.700 169.882 175.469 168.898 175.469 167.747  c
h
176.713 167.905 m
176.713 169.090 176.859 170.057 177.151 170.806  c
177.393 171.437 177.752 171.752 178.231 171.752  c
178.459 171.752 178.696 171.649 178.941 171.444  c
179.187 171.239 179.373 170.895 179.500 170.413  c
179.695 169.685 179.792 168.659 179.792 167.334  c
179.792 166.352 179.690 165.533 179.487 164.877  c
179.335 164.391 179.138 164.046 178.897 163.843  c
178.724 163.703 178.514 163.633 178.269 163.633  c
177.981 163.633 177.725 163.762 177.501 164.021  c
177.196 164.372 176.988 164.924 176.878 165.677  c
176.768 166.431 176.713 167.173 176.713 167.905  c
h
182.469 167.747 m
182.469 166.765 182.617 165.920 182.914 165.211  c
183.210 164.502 183.603 163.974 184.094 163.627  c
184.475 163.352 184.869 163.214 185.275 163.214  c
185.935 163.214 186.528 163.551 187.052 164.224  c
187.708 165.057 188.036 166.187 188.036 167.613  c
188.036 168.612 187.892 169.460 187.605 170.159  c
187.317 170.857 186.950 171.364 186.503 171.679  c
186.057 171.994 185.626 172.152 185.211 172.152  c
184.391 172.152 183.707 171.667 183.161 170.698  c
182.700 169.882 182.469 168.898 182.469 167.747  c
h
183.713 167.905 m
183.713 169.090 183.859 170.057 184.151 170.806  c
184.393 171.437 184.752 171.752 185.231 171.752  c
185.459 171.752 185.696 171.649 185.941 171.444  c
186.187 171.239 186.373 170.895 186.500 170.413  c
186.695 169.685 186.792 168.659 186.792 167.334  c
186.792 166.352 186.690 165.533 186.487 164.877  c
186.335 164.391 186.138 164.046 185.897 163.843  c
185.724 163.703 185.514 163.633 185.269 163.633  c
184.981 163.633 184.725 163.762 184.501 164.021  c
184.196 164.372 183.988 164.924 183.878 165.677  c
183.768 166.431 183.713 167.173 183.713 167.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
241.000 152.000 m
241.000 156.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
237.523 164.236 m
239.618 163.214 l
239.827 163.214 l
239.827 170.482 l
239.827 170.965 239.847 171.265 239.887 171.384  c
239.928 171.502 240.011 171.593 240.138 171.657  c
240.265 171.720 240.523 171.756 240.913 171.765  c
240.913 172.000 l
237.675 172.000 l
237.675 171.765 l
238.082 171.756 238.344 171.721 238.462 171.660  c
238.581 171.599 238.663 171.516 238.710 171.412  c
238.757 171.309 238.780 170.999 238.780 170.482  c
238.780 165.836 l
238.780 165.210 238.759 164.808 238.716 164.630  c
238.687 164.495 238.633 164.395 238.554 164.332  c
238.476 164.268 238.382 164.236 238.272 164.236  c
238.115 164.236 237.897 164.302 237.618 164.433  c
h
248.643 163.392 m
248.147 164.471 l
245.558 164.471 l
244.993 165.627 l
246.114 165.792 247.003 166.208 247.659 166.877  c
248.222 167.453 248.503 168.130 248.503 168.908  c
248.503 169.361 248.411 169.780 248.227 170.165  c
248.043 170.550 247.811 170.878 247.532 171.149  c
247.252 171.420 246.941 171.638 246.599 171.803  c
246.112 172.036 245.613 172.152 245.101 172.152  c
244.584 172.152 244.209 172.064 243.974 171.888  c
243.739 171.713 243.622 171.519 243.622 171.308  c
243.622 171.189 243.670 171.084 243.768 170.993  c
243.865 170.902 243.988 170.857 244.136 170.857  c
244.246 170.857 244.342 170.874 244.425 170.908  c
244.507 170.942 244.648 171.028 244.847 171.168  c
245.164 171.388 245.486 171.498 245.812 171.498  c
246.307 171.498 246.741 171.311 247.116 170.936  c
247.491 170.562 247.678 170.106 247.678 169.568  c
247.678 169.048 247.511 168.562 247.176 168.112  c
246.842 167.661 246.381 167.313 245.793 167.067  c
245.331 166.877 244.703 166.767 243.907 166.737  c
245.558 163.392 l
h
250.469 167.747 m
250.469 166.765 250.617 165.920 250.914 165.211  c
251.210 164.502 251.603 163.974 252.094 163.627  c
252.475 163.352 252.869 163.214 253.275 163.214  c
253.935 163.214 254.528 163.551 255.052 164.224  c
255.708 165.057 256.036 166.187 256.036 167.613  c
256.036 168.612 255.892 169.460 255.605 170.159  c
255.317 170.857 254.950 171.364 254.503 171.679  c
254.057 171.994 253.626 172.152 253.211 172.152  c
252.391 172.152 251.707 171.667 251.161 170.698  c
250.700 169.882 250.469 168.898 250.469 167.747  c
h
251.713 167.905 m
251.713 169.090 251.859 170.057 252.151 170.806  c
252.393 171.437 252.752 171.752 253.231 171.752  c
253.459 171.752 253.696 171.649 253.941 171.444  c
254.187 171.239 254.373 170.895 254.500 170.413  c
254.695 169.685 254.792 168.659 254.792 167.334  c
254.792 166.352 254.690 165.533 254.487 164.877  c
254.335 164.391 254.138 164.046 253.897 163.843  c
253.724 163.703 253.514 163.633 253.269 163.633  c
252.981 163.633 252.725 163.762 252.501 164.021  c
252.196 164.372 251.988 164.924 251.878 165.677  c
251.768 166.431 251.713 167.173 251.713 167.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
310.000 152.000 m
310.000 156.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
309.960 170.343 m
309.357 172.000 l
304.279 172.000 l
304.279 171.765 l
305.773 170.402 306.824 169.289 307.434 168.426  c
308.043 167.563 308.348 166.773 308.348 166.058  c
308.348 165.512 308.181 165.064 307.846 164.712  c
307.512 164.361 307.112 164.186 306.647 164.186  c
306.223 164.186 305.844 164.309 305.507 164.557  c
305.171 164.804 304.922 165.167 304.761 165.646  c
304.526 165.646 l
304.632 164.863 304.904 164.262 305.342 163.843  c
305.780 163.424 306.327 163.214 306.983 163.214  c
307.681 163.214 308.264 163.439 308.732 163.887  c
309.199 164.336 309.433 164.865 309.433 165.474  c
309.433 165.910 309.332 166.346 309.128 166.782  c
308.815 167.467 308.307 168.193 307.605 168.959  c
306.551 170.110 305.893 170.804 305.631 171.041  c
307.878 171.041 l
308.335 171.041 308.656 171.024 308.840 170.990  c
309.024 170.956 309.190 170.888 309.338 170.784  c
309.486 170.680 309.615 170.533 309.725 170.343  c
h
311.469 167.747 m
311.469 166.765 311.617 165.920 311.914 165.211  c
312.210 164.502 312.603 163.974 313.094 163.627  c
313.475 163.352 313.869 163.214 314.275 163.214  c
314.935 163.214 315.528 163.551 316.052 164.224  c
316.708 165.057 317.036 166.187 317.036 167.613  c
317.036 168.612 316.892 169.460 316.605 170.159  c
316.317 170.857 315.950 171.364 315.503 171.679  c
315.057 171.994 314.626 172.152 314.211 172.152  c
313.391 172.152 312.707 171.667 312.161 170.698  c
311.700 169.882 311.469 168.898 311.469 167.747  c
h
312.713 167.905 m
312.713 169.090 312.859 170.057 313.151 170.806  c
313.393 171.437 313.752 171.752 314.231 171.752  c
314.459 171.752 314.696 171.649 314.941 171.444  c
315.187 171.239 315.373 170.895 315.500 170.413  c
315.695 169.685 315.792 168.659 315.792 167.334  c
315.792 166.352 315.690 165.533 315.487 164.877  c
315.335 164.391 315.138 164.046 314.897 163.843  c
314.724 163.703 314.514 163.633 314.269 163.633  c
313.981 163.633 313.725 163.762 313.501 164.021  c
313.196 164.372 312.988 164.924 312.878 165.677  c
312.768 166.431 312.713 167.173 312.713 167.905  c
h
318.469 167.747 m
318.469 166.765 318.617 165.920 318.914 165.211  c
319.210 164.502 319.603 163.974 320.094 163.627  c
320.475 163.352 320.869 163.214 321.275 163.214  c
321.935 163.214 322.528 163.551 323.052 164.224  c
323.708 165.057 324.036 166.187 324.036 167.613  c
324.036 168.612 323.892 169.460 323.605 170.159  c
323.317 170.857 322.950 171.364 322.503 171.679  c
322.057 171.994 321.626 172.152 321.211 172.152  c
320.391 172.152 319.707 171.667 319.161 170.698  c
318.700 169.882 318.469 168.898 318.469 167.747  c
h
319.713 167.905 m
319.713 169.090 319.859 170.057 320.151 170.806  c
320.393 171.437 320.752 171.752 321.231 171.752  c
321.459 171.752 321.696 171.649 321.941 171.444  c
322.187 171.239 322.373 170.895 322.500 170.413  c
322.695 169.685 322.792 168.659 322.792 167.334  c
322.792 166.352 322.690 165.533 322.487 164.877  c
322.335 164.391 322.138 164.046 321.897 163.843  c
321.724 163.703 321.514 163.633 321.269 163.633  c
320.981 163.633 320.725 163.762 320.501 164.021  c
320.196 164.372 319.988 164.924 319.878 165.677  c
319.768 166.431 319.713 167.173 319.713 167.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
378.000 152.000 m
378.000 156.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
377.960 170.343 m
377.357 172.000 l
372.279 172.000 l
372.279 171.765 l
373.773 170.402 374.824 169.289 375.434 168.426  c
376.043 167.563 376.348 166.773 376.348 166.058  c
376.348 165.512 376.181 165.064 375.846 164.712  c
375.512 164.361 375.112 164.186 374.647 164.186  c
374.223 164.186 373.844 164.309 373.507 164.557  c
373.171 164.804 372.922 165.167 372.761 165.646  c
372.526 165.646 l
372.632 164.863 372.904 164.262 373.342 163.843  c
373.780 163.424 374.327 163.214 374.983 163.214  c
375.681 163.214 376.264 163.439 376.732 163.887  c
377.199 164.336 377.433 164.865 377.433 165.474  c
377.433 165.910 377.332 166.346 377.128 166.782  c
376.815 167.467 376.307 168.193 375.605 168.959  c
374.551 170.110 373.893 170.804 373.631 171.041  c
375.878 171.041 l
376.335 171.041 376.656 171.024 376.840 170.990  c
377.024 170.956 377.190 170.888 377.338 170.784  c
377.486 170.680 377.615 170.533 377.725 170.343  c
h
384.643 163.392 m
384.147 164.471 l
381.558 164.471 l
380.993 165.627 l
382.114 165.792 383.003 166.208 383.659 166.877  c
384.222 167.453 384.503 168.130 384.503 168.908  c
384.503 169.361 384.411 169.780 384.227 170.165  c
384.043 170.550 383.811 170.878 383.532 171.149  c
383.252 171.420 382.941 171.638 382.599 171.803  c
382.112 172.036 381.613 172.152 381.101 172.152  c
380.584 172.152 380.209 172.064 379.974 171.888  c
379.739 171.713 379.622 171.519 379.622 171.308  c
379.622 171.189 379.670 171.084 379.768 170.993  c
379.865 170.902 379.988 170.857 380.136 170.857  c
380.246 170.857 380.342 170.874 380.425 170.908  c
380.507 170.942 380.648 171.028 380.847 171.168  c
381.164 171.388 381.486 171.498 381.812 171.498  c
382.307 171.498 382.741 171.311 383.116 170.936  c
383.491 170.562 383.678 170.106 383.678 169.568  c
383.678 169.048 383.511 168.562 383.176 168.112  c
382.842 167.661 382.381 167.313 381.793 167.067  c
381.331 166.877 380.703 166.767 379.907 166.737  c
381.558 163.392 l
h
386.469 167.747 m
386.469 166.765 386.617 165.920 386.914 165.211  c
387.210 164.502 387.603 163.974 388.094 163.627  c
388.475 163.352 388.869 163.214 389.275 163.214  c
389.935 163.214 390.528 163.551 391.052 164.224  c
391.708 165.057 392.036 166.187 392.036 167.613  c
392.036 168.612 391.892 169.460 391.605 170.159  c
391.317 170.857 390.950 171.364 390.503 171.679  c
390.057 171.994 389.626 172.152 389.211 172.152  c
388.391 172.152 387.707 171.667 387.161 170.698  c
386.700 169.882 386.469 168.898 386.469 167.747  c
h
387.713 167.905 m
387.713 169.090 387.859 170.057 388.151 170.806  c
388.393 171.437 388.752 171.752 389.231 171.752  c
389.459 171.752 389.696 171.649 389.941 171.444  c
390.187 171.239 390.373 170.895 390.500 170.413  c
390.695 169.685 390.792 168.659 390.792 167.334  c
390.792 166.352 390.690 165.533 390.487 164.877  c
390.335 164.391 390.138 164.046 389.897 163.843  c
389.724 163.703 389.514 163.633 389.269 163.633  c
388.981 163.633 388.725 163.762 388.501 164.021  c
388.196 164.372 387.988 164.924 387.878 165.677  c
387.768 166.431 387.713 167.173 387.713 167.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
50.0000 152.000 m
50.0000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
64.0000 152.000 m
64.0000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
78.0000 152.000 m
78.0000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
91.0000 152.000 m
91.0000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
119.000 152.000 m
119.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
132.000 152.000 m
132.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
146.000 152.000 m
146.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
159.000 152.000 m
159.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
187.000 152.000 m
187.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
200.000 152.000 m
200.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
214.000 152.000 m
214.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
228.000 152.000 m
228.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
255.000 152.000 m
255.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
269.000 152.000 m
269.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
282.000 152.000 m
282.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
296.000 152.000 m
296.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
323.000 152.000 m
323.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
337.000 152.000 m
337.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
351.000 152.000 m
351.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
364.000 152.000 m
364.000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
35.0000 152.000 m
35.0000 4.01351 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 69 8 15 rc
Q
cliprestore
newpath
0 0 m
0 184.000 l
390.000 184.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
35.0000 137.000 m
31.0000 137.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.9604 145.343 m
27.3574 147.000 l
22.2793 147.000 l
22.2793 146.765 l
23.7731 145.402 24.8247 144.289 25.4340 143.426  c
26.0434 142.563 26.3481 141.773 26.3481 141.058  c
26.3481 140.512 26.1809 140.064 25.8466 139.712  c
25.5123 139.361 25.1124 139.186 24.6469 139.186  c
24.2238 139.186 23.8439 139.309 23.5075 139.557  c
23.1711 139.804 22.9225 140.167 22.7617 140.646  c
22.5268 140.646 l
22.6326 139.863 22.9045 139.262 23.3425 138.843  c
23.7805 138.424 24.3274 138.214 24.9834 138.214  c
25.6816 138.214 26.2645 138.439 26.7321 138.887  c
27.1997 139.336 27.4335 139.865 27.4335 140.474  c
27.4335 140.910 27.3320 141.346 27.1289 141.782  c
26.8157 142.467 26.3079 143.193 25.6054 143.959  c
24.5517 145.110 23.8937 145.804 23.6313 146.041  c
25.8784 146.041 l
26.3354 146.041 26.6560 146.024 26.8400 145.990  c
27.0241 145.956 27.1902 145.888 27.3383 145.784  c
27.4864 145.680 27.6155 145.533 27.7255 145.343  c
h
29.4697 142.747 m
29.4697 141.765 29.6178 140.920 29.9140 140.211  c
30.2102 139.502 30.6038 138.974 31.0947 138.627  c
31.4755 138.352 31.8691 138.214 32.2753 138.214  c
32.9355 138.214 33.5279 138.551 34.0527 139.224  c
34.7086 140.057 35.0366 141.187 35.0366 142.613  c
35.0366 143.612 34.8927 144.460 34.6049 145.159  c
34.3172 145.857 33.9501 146.364 33.5036 146.679  c
33.0572 146.994 32.6266 147.152 32.2119 147.152  c
31.3909 147.152 30.7075 146.667 30.1616 145.698  c
29.7003 144.882 29.4697 143.898 29.4697 142.747  c
h
30.7138 142.905 m
30.7138 144.090 30.8598 145.057 31.1518 145.806  c
31.3930 146.437 31.7527 146.752 32.2309 146.752  c
32.4594 146.752 32.6964 146.649 32.9418 146.444  c
33.1873 146.239 33.3735 145.895 33.5004 145.413  c
33.6951 144.685 33.7924 143.659 33.7924 142.334  c
33.7924 141.352 33.6909 140.533 33.4877 139.877  c
33.3354 139.391 33.1386 139.046 32.8974 138.843  c
32.7239 138.703 32.5144 138.633 32.2690 138.633  c
31.9812 138.633 31.7252 138.762 31.5009 139.021  c
31.1962 139.372 30.9889 139.924 30.8789 140.677  c
30.7688 141.431 30.7138 142.173 30.7138 142.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 113.000 m
31.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.0493 119.826 m
28.0493 120.727 l
26.8940 120.727 l
26.8940 123.000 l
25.8466 123.000 l
25.8466 120.727 l
22.2031 120.727 l
22.2031 119.915 l
26.1958 114.214 l
26.8940 114.214 l
26.8940 119.826 l
h
25.8466 119.826 m
25.8466 115.554 l
22.8252 119.826 l
h
29.4697 118.747 m
29.4697 117.765 29.6178 116.920 29.9140 116.211  c
30.2102 115.502 30.6038 114.974 31.0947 114.627  c
31.4755 114.352 31.8691 114.214 32.2753 114.214  c
32.9355 114.214 33.5279 114.551 34.0527 115.224  c
34.7086 116.057 35.0366 117.187 35.0366 118.613  c
35.0366 119.612 34.8927 120.460 34.6049 121.159  c
34.3172 121.857 33.9501 122.364 33.5036 122.679  c
33.0572 122.994 32.6266 123.152 32.2119 123.152  c
31.3909 123.152 30.7075 122.667 30.1616 121.698  c
29.7003 120.882 29.4697 119.898 29.4697 118.747  c
h
30.7138 118.905 m
30.7138 120.090 30.8598 121.057 31.1518 121.806  c
31.3930 122.437 31.7527 122.752 32.2309 122.752  c
32.4594 122.752 32.6964 122.649 32.9418 122.444  c
33.1873 122.239 33.3735 121.895 33.5004 121.413  c
33.6951 120.685 33.7924 119.659 33.7924 118.334  c
33.7924 117.352 33.6909 116.533 33.4877 115.877  c
33.3354 115.391 33.1386 115.046 32.8974 114.843  c
32.7239 114.703 32.5144 114.633 32.2690 114.633  c
31.9812 114.633 31.7252 114.762 31.5009 115.021  c
31.1962 115.372 30.9889 115.924 30.8789 116.677  c
30.7688 117.431 30.7138 118.173 30.7138 118.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 89.0000 m
31.0000 89.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.8271 90.2148 m
27.8271 90.4497 l
27.2685 90.5047 26.8125 90.6158 26.4592 90.7829  c
26.1058 90.9501 25.7567 91.2050 25.4118 91.5478  c
25.0669 91.8906 24.7813 92.2725 24.5549 92.6936  c
24.3285 93.1146 24.1391 93.6150 23.9868 94.1948  c
24.5961 93.7758 25.2076 93.5664 25.8212 93.5664  c
26.4095 93.5664 26.9194 93.8033 27.3510 94.2773  c
27.7827 94.7513 27.9985 95.3606 27.9985 96.1054  c
27.9985 96.8248 27.7806 97.4807 27.3447 98.0732  c
26.8199 98.7926 26.1259 99.1523 25.2627 99.1523  c
24.6744 99.1523 24.1751 98.9576 23.7646 98.5683  c
22.9606 97.8108 22.5585 96.8291 22.5585 95.6230  c
22.5585 94.8528 22.7130 94.1207 23.0219 93.4267  c
23.3308 92.7327 23.7720 92.1170 24.3454 91.5795  c
24.9188 91.0421 25.4679 90.6803 25.9926 90.4941  c
26.5174 90.3079 27.0061 90.2148 27.4589 90.2148  c
h
23.8789 94.6582 m
23.8027 95.2294 23.7646 95.6907 23.7646 96.0419  c
23.7646 96.4482 23.8397 96.8894 23.9899 97.3654  c
24.1402 97.8415 24.3634 98.2192 24.6596 98.4985  c
24.8754 98.6974 25.1378 98.7968 25.4467 98.7968  c
25.8149 98.7968 26.1439 98.6233 26.4338 98.2763  c
26.7237 97.9293 26.8686 97.4342 26.8686 96.7910  c
26.8686 96.0673 26.7247 95.4410 26.4370 94.9121  c
26.1492 94.3831 25.7408 94.1186 25.2119 94.1186  c
25.0511 94.1186 24.8786 94.1525 24.6945 94.2202  c
24.5105 94.2879 24.2386 94.4339 23.8789 94.6582  c
h
29.4697 94.7470 m
29.4697 93.7653 29.6178 92.9200 29.9140 92.2111  c
30.2102 91.5023 30.6038 90.9744 31.0947 90.6274  c
31.4755 90.3523 31.8691 90.2148 32.2753 90.2148  c
32.9355 90.2148 33.5279 90.5512 34.0527 91.2241  c
34.7086 92.0577 35.0366 93.1876 35.0366 94.6137  c
35.0366 95.6124 34.8927 96.4609 34.6049 97.1591  c
34.3172 97.8574 33.9501 98.3641 33.5036 98.6794  c
33.0572 98.9947 32.6266 99.1523 32.2119 99.1523  c
31.3909 99.1523 30.7075 98.6678 30.1616 97.6987  c
29.7003 96.8820 29.4697 95.8981 29.4697 94.7470  c
h
30.7138 94.9057 m
30.7138 96.0906 30.8598 97.0576 31.1518 97.8066  c
31.3930 98.4371 31.7527 98.7524 32.2309 98.7524  c
32.4594 98.7524 32.6964 98.6498 32.9418 98.4445  c
33.1873 98.2393 33.3735 97.8955 33.5004 97.4130  c
33.6951 96.6852 33.7924 95.6590 33.7924 94.3344  c
33.7924 93.3527 33.6909 92.5338 33.4877 91.8779  c
33.3354 91.3912 33.1386 91.0463 32.8974 90.8432  c
32.7239 90.7036 32.5144 90.6337 32.2690 90.6337  c
31.9812 90.6337 31.7252 90.7628 31.5009 91.0210  c
31.1962 91.3722 30.9889 91.9244 30.8789 92.6777  c
30.7688 93.4309 30.7138 94.1736 30.7138 94.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 65.0000 m
31.0000 65.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
24.4946 70.6645 m
23.8133 70.1059 23.3742 69.6573 23.1774 69.3188  c
22.9807 68.9803 22.8823 68.6290 22.8823 68.2651  c
22.8823 67.7065 23.0981 67.2251 23.5297 66.8210  c
23.9614 66.4169 24.5348 66.2148 25.2500 66.2148  c
25.9440 66.2148 26.5026 66.4031 26.9257 66.7797  c
27.3489 67.1564 27.5605 67.5859 27.5605 68.0683  c
27.5605 68.3899 27.4462 68.7179 27.2177 69.0522  c
26.9892 69.3865 26.5131 69.7801 25.7895 70.2329  c
26.5343 70.8084 27.0273 71.2612 27.2685 71.5913  c
27.5901 72.0229 27.7509 72.4778 27.7509 72.9560  c
27.7509 73.5612 27.5203 74.0785 27.0590 74.5080  c
26.5978 74.9375 25.9926 75.1523 25.2436 75.1523  c
24.4269 75.1523 23.7900 74.8963 23.3330 74.3842  c
22.9690 73.9738 22.7871 73.5252 22.7871 73.0385  c
22.7871 72.6577 22.9151 72.2800 23.1711 71.9055  c
23.4271 71.5310 23.8683 71.1173 24.4946 70.6645  c
h
25.4912 69.9853 m
25.9990 69.5283 26.3206 69.1675 26.4560 68.9030  c
26.5914 68.6385 26.6591 68.3391 26.6591 68.0048  c
26.6591 67.5605 26.5343 67.2124 26.2846 66.9606  c
26.0349 66.7089 25.6943 66.5830 25.2627 66.5830  c
24.8310 66.5830 24.4798 66.7078 24.2089 66.9575  c
23.9381 67.2071 23.8027 67.4991 23.8027 67.8335  c
23.8027 68.0535 23.8588 68.2736 23.9709 68.4936  c
24.0830 68.7137 24.2428 68.9231 24.4502 69.1220  c
h
24.7929 70.9057 m
24.4417 71.2019 24.1814 71.5246 24.0122 71.8737  c
23.8429 72.2229 23.7583 72.6005 23.7583 73.0068  c
23.7583 73.5527 23.9074 73.9896 24.2058 74.3176  c
24.5041 74.6455 24.8839 74.8095 25.3452 74.8095  c
25.8022 74.8095 26.1682 74.6805 26.4433 74.4223  c
26.7184 74.1642 26.8559 73.8510 26.8559 73.4829  c
26.8559 73.1782 26.7755 72.9052 26.6147 72.6640  c
26.3142 72.2154 25.7070 71.6293 24.7929 70.9057  c
h
29.4697 70.7470 m
29.4697 69.7653 29.6178 68.9200 29.9140 68.2111  c
30.2102 67.5023 30.6038 66.9744 31.0947 66.6274  c
31.4755 66.3523 31.8691 66.2148 32.2753 66.2148  c
32.9355 66.2148 33.5279 66.5512 34.0527 67.2241  c
34.7086 68.0577 35.0366 69.1876 35.0366 70.6137  c
35.0366 71.6124 34.8927 72.4609 34.6049 73.1591  c
34.3172 73.8574 33.9501 74.3641 33.5036 74.6794  c
33.0572 74.9947 32.6266 75.1523 32.2119 75.1523  c
31.3909 75.1523 30.7075 74.6678 30.1616 73.6987  c
29.7003 72.8820 29.4697 71.8981 29.4697 70.7470  c
h
30.7138 70.9057 m
30.7138 72.0906 30.8598 73.0576 31.1518 73.8066  c
31.3930 74.4371 31.7527 74.7524 32.2309 74.7524  c
32.4594 74.7524 32.6964 74.6498 32.9418 74.4445  c
33.1873 74.2393 33.3735 73.8955 33.5004 73.4130  c
33.6951 72.6852 33.7924 71.6590 33.7924 70.3344  c
33.7924 69.3527 33.6909 68.5338 33.4877 67.8779  c
33.3354 67.3912 33.1386 67.0463 32.8974 66.8432  c
32.7239 66.7036 32.5144 66.6337 32.2690 66.6337  c
31.9812 66.6337 31.7252 66.7628 31.5009 67.0210  c
31.1962 67.3722 30.9889 67.9244 30.8789 68.6777  c
30.7688 69.4309 30.7138 70.1736 30.7138 70.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 41.0000 m
31.0000 41.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
16.5234 43.2368 m
18.6181 42.2148 l
18.8276 42.2148 l
18.8276 49.4829 l
18.8276 49.9653 18.8477 50.2657 18.8879 50.3842  c
18.9281 50.5027 19.0117 50.5937 19.1386 50.6572  c
19.2656 50.7207 19.5237 50.7566 19.9130 50.7651  c
19.9130 51.0000 l
16.6757 51.0000 l
16.6757 50.7651 l
17.0820 50.7566 17.3444 50.7217 17.4628 50.6604  c
17.5813 50.5990 17.6639 50.5165 17.7104 50.4128  c
17.7570 50.3091 17.7802 49.9991 17.7802 49.4829  c
17.7802 44.8364 l
17.7802 44.2101 17.7591 43.8081 17.7168 43.6303  c
17.6871 43.4949 17.6332 43.3955 17.5549 43.3320  c
17.4766 43.2685 17.3824 43.2368 17.2724 43.2368  c
17.1158 43.2368 16.8979 43.3024 16.6186 43.4335  c
h
22.4697 46.7470 m
22.4697 45.7653 22.6178 44.9200 22.9140 44.2111  c
23.2102 43.5023 23.6038 42.9744 24.0947 42.6274  c
24.4755 42.3523 24.8691 42.2148 25.2753 42.2148  c
25.9355 42.2148 26.5279 42.5512 27.0527 43.2241  c
27.7086 44.0577 28.0366 45.1876 28.0366 46.6137  c
28.0366 47.6124 27.8927 48.4609 27.6049 49.1591  c
27.3172 49.8574 26.9501 50.3641 26.5036 50.6794  c
26.0572 50.9947 25.6266 51.1523 25.2119 51.1523  c
24.3909 51.1523 23.7075 50.6678 23.1616 49.6987  c
22.7003 48.8820 22.4697 47.8981 22.4697 46.7470  c
h
23.7138 46.9057 m
23.7138 48.0906 23.8598 49.0576 24.1518 49.8066  c
24.3930 50.4371 24.7527 50.7524 25.2309 50.7524  c
25.4594 50.7524 25.6964 50.6498 25.9418 50.4445  c
26.1873 50.2393 26.3735 49.8955 26.5004 49.4130  c
26.6951 48.6852 26.7924 47.6590 26.7924 46.3344  c
26.7924 45.3527 26.6909 44.5338 26.4877 43.8779  c
26.3354 43.3912 26.1386 43.0463 25.8974 42.8432  c
25.7239 42.7036 25.5144 42.6337 25.2690 42.6337  c
24.9812 42.6337 24.7252 42.7628 24.5009 43.0210  c
24.1962 43.3722 23.9889 43.9244 23.8789 44.6777  c
23.7688 45.4309 23.7138 46.1736 23.7138 46.9057  c
h
29.4697 46.7470 m
29.4697 45.7653 29.6178 44.9200 29.9140 44.2111  c
30.2102 43.5023 30.6038 42.9744 31.0947 42.6274  c
31.4755 42.3523 31.8691 42.2148 32.2753 42.2148  c
32.9355 42.2148 33.5279 42.5512 34.0527 43.2241  c
34.7086 44.0577 35.0366 45.1876 35.0366 46.6137  c
35.0366 47.6124 34.8927 48.4609 34.6049 49.1591  c
34.3172 49.8574 33.9501 50.3641 33.5036 50.6794  c
33.0572 50.9947 32.6266 51.1523 32.2119 51.1523  c
31.3909 51.1523 30.7075 50.6678 30.1616 49.6987  c
29.7003 48.8820 29.4697 47.8981 29.4697 46.7470  c
h
30.7138 46.9057 m
30.7138 48.0906 30.8598 49.0576 31.1518 49.8066  c
31.3930 50.4371 31.7527 50.7524 32.2309 50.7524  c
32.4594 50.7524 32.6964 50.6498 32.9418 50.4445  c
33.1873 50.2393 33.3735 49.8955 33.5004 49.4130  c
33.6951 48.6852 33.7924 47.6590 33.7924 46.3344  c
33.7924 45.3527 33.6909 44.5338 33.4877 43.8779  c
33.3354 43.3912 33.1386 43.0463 32.8974 42.8432  c
32.7239 42.7036 32.5144 42.6337 32.2690 42.6337  c
31.9812 42.6337 31.7252 42.7628 31.5009 43.0210  c
31.1962 43.3722 30.9889 43.9244 30.8789 44.6777  c
30.7688 45.4309 30.7138 46.1736 30.7138 46.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 17.0000 m
31.0000 17.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
16.5234 19.2368 m
18.6181 18.2148 l
18.8276 18.2148 l
18.8276 25.4829 l
18.8276 25.9653 18.8477 26.2657 18.8879 26.3842  c
18.9281 26.5027 19.0117 26.5937 19.1386 26.6572  c
19.2656 26.7207 19.5237 26.7566 19.9130 26.7651  c
19.9130 27.0000 l
16.6757 27.0000 l
16.6757 26.7651 l
17.0820 26.7566 17.3444 26.7217 17.4628 26.6604  c
17.5813 26.5990 17.6639 26.5165 17.7104 26.4128  c
17.7570 26.3091 17.7802 25.9991 17.7802 25.4829  c
17.7802 20.8364 l
17.7802 20.2101 17.7591 19.8081 17.7168 19.6303  c
17.6871 19.4949 17.6332 19.3955 17.5549 19.3320  c
17.4766 19.2685 17.3824 19.2368 17.2724 19.2368  c
17.1158 19.2368 16.8979 19.3024 16.6186 19.4335  c
h
27.9604 25.3432 m
27.3574 27.0000 l
22.2793 27.0000 l
22.2793 26.7651 l
23.7731 25.4025 24.8247 24.2895 25.4340 23.4262  c
26.0434 22.5629 26.3481 21.7737 26.3481 21.0585  c
26.3481 20.5127 26.1809 20.0641 25.8466 19.7128  c
25.5123 19.3616 25.1124 19.1860 24.6469 19.1860  c
24.2238 19.1860 23.8439 19.3098 23.5075 19.5573  c
23.1711 19.8049 22.9225 20.1678 22.7617 20.6460  c
22.5268 20.6460 l
22.6326 19.8631 22.9045 19.2622 23.3425 18.8432  c
23.7805 18.4243 24.3274 18.2148 24.9834 18.2148  c
25.6816 18.2148 26.2645 18.4391 26.7321 18.8877  c
27.1997 19.3362 27.4335 19.8652 27.4335 20.4746  c
27.4335 20.9104 27.3320 21.3463 27.1289 21.7822  c
26.8157 22.4677 26.3079 23.1935 25.6054 23.9594  c
24.5517 25.1105 23.8937 25.8045 23.6313 26.0415  c
25.8784 26.0415 l
26.3354 26.0415 26.6560 26.0245 26.8400 25.9907  c
27.0241 25.9568 27.1902 25.8881 27.3383 25.7844  c
27.4864 25.6807 27.6155 25.5336 27.7255 25.3432  c
h
29.4697 22.7470 m
29.4697 21.7653 29.6178 20.9200 29.9140 20.2111  c
30.2102 19.5023 30.6038 18.9744 31.0947 18.6274  c
31.4755 18.3523 31.8691 18.2148 32.2753 18.2148  c
32.9355 18.2148 33.5279 18.5512 34.0527 19.2241  c
34.7086 20.0577 35.0366 21.1876 35.0366 22.6137  c
35.0366 23.6124 34.8927 24.4609 34.6049 25.1591  c
34.3172 25.8574 33.9501 26.3641 33.5036 26.6794  c
33.0572 26.9947 32.6266 27.1523 32.2119 27.1523  c
31.3909 27.1523 30.7075 26.6678 30.1616 25.6987  c
29.7003 24.8820 29.4697 23.8981 29.4697 22.7470  c
h
30.7138 22.9057 m
30.7138 24.0906 30.8598 25.0576 31.1518 25.8066  c
31.3930 26.4371 31.7527 26.7524 32.2309 26.7524  c
32.4594 26.7524 32.6964 26.6498 32.9418 26.4445  c
33.1873 26.2393 33.3735 25.8955 33.5004 25.4130  c
33.6951 24.6852 33.7924 23.6590 33.7924 22.3344  c
33.7924 21.3527 33.6909 20.5338 33.4877 19.8779  c
33.3354 19.3912 33.1386 19.0463 32.8974 18.8432  c
32.7239 18.7036 32.5144 18.6337 32.2690 18.6337  c
31.9812 18.6337 31.7252 18.7628 31.5009 19.0210  c
31.1962 19.3722 30.9889 19.9244 30.8789 20.6777  c
30.7688 21.4309 30.7138 22.1736 30.7138 22.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 125.000 m
33.0000 125.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 101.000 m
33.0000 101.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 77.0000 m
33.0000 77.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 53.0000 m
33.0000 53.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 29.0000 m
33.0000 29.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
35.0000 5.00000 m
33.0000 5.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 194 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
