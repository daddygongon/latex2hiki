%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 179 575 612
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N7ŒŽ30“ú 17Žž10•ª25•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
244 190 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
244.000 0 l
244.000 190.000 l
0 190.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 234 180 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
22.8975 6.01926 209.093 153.980 rc
newpath
23.8975 8.01927 m
65.1162 104.104 l
106.335 139.452 l
147.553 152.456 l
188.772 157.240 l
229.991 159.000 l
S
cliprestore
newpath
0 0 m
0 180.000 l
234.000 180.000 l
234.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
20.8975 162.000 m
229.991 162.000 l
S
Q
q
q
0 J
1 j
newpath
24.0000 162.000 m
24.0000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
26.5234 173.236 m
28.6181 172.214 l
28.8276 172.214 l
28.8276 179.482 l
28.8276 179.965 28.8477 180.265 28.8879 180.384  c
28.9281 180.502 29.0117 180.593 29.1386 180.657  c
29.2656 180.720 29.5237 180.756 29.9130 180.765  c
29.9130 181.000 l
26.6757 181.000 l
26.6757 180.765 l
27.0820 180.756 27.3444 180.721 27.4628 180.660  c
27.5813 180.599 27.6639 180.516 27.7104 180.412  c
27.7570 180.309 27.7802 179.999 27.7802 179.482  c
27.7802 174.836 l
27.7802 174.210 27.7591 173.808 27.7168 173.630  c
27.6871 173.495 27.6332 173.395 27.5549 173.332  c
27.4766 173.268 27.3824 173.236 27.2724 173.236  c
27.1158 173.236 26.8979 173.302 26.6186 173.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
65.0000 162.000 m
65.0000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
72.9604 179.343 m
72.3574 181.000 l
67.2793 181.000 l
67.2793 180.765 l
68.7731 179.402 69.8247 178.289 70.4340 177.426  c
71.0434 176.563 71.3481 175.773 71.3481 175.058  c
71.3481 174.512 71.1809 174.064 70.8466 173.712  c
70.5123 173.361 70.1124 173.186 69.6469 173.186  c
69.2238 173.186 68.8439 173.309 68.5075 173.557  c
68.1711 173.804 67.9225 174.167 67.7617 174.646  c
67.5268 174.646 l
67.6326 173.863 67.9045 173.262 68.3425 172.843  c
68.7805 172.424 69.3274 172.214 69.9834 172.214  c
70.6816 172.214 71.2645 172.439 71.7321 172.887  c
72.1997 173.336 72.4335 173.865 72.4335 174.474  c
72.4335 174.910 72.3320 175.346 72.1289 175.782  c
71.8157 176.467 71.3079 177.193 70.6054 177.959  c
69.5517 179.110 68.8937 179.804 68.6313 180.041  c
70.8784 180.041 l
71.3354 180.041 71.6560 180.024 71.8400 179.990  c
72.0241 179.956 72.1902 179.888 72.3383 179.784  c
72.4864 179.680 72.6155 179.533 72.7255 179.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
106.000 162.000 m
106.000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
108.660 174.030 m
108.905 173.450 109.215 173.003 109.590 172.687  c
109.964 172.372 110.431 172.214 110.989 172.214  c
111.679 172.214 112.208 172.439 112.576 172.887  c
112.856 173.222 112.995 173.579 112.995 173.960  c
112.995 174.586 112.602 175.234 111.814 175.902  c
112.343 176.110 112.743 176.406 113.014 176.791  c
113.285 177.176 113.420 177.629 113.420 178.149  c
113.420 178.894 113.183 179.540 112.710 180.085  c
112.092 180.796 111.197 181.152 110.024 181.152  c
109.445 181.152 109.050 181.080 108.841 180.936  c
108.631 180.792 108.526 180.638 108.526 180.473  c
108.526 180.350 108.576 180.242 108.676 180.149  c
108.775 180.056 108.895 180.009 109.034 180.009  c
109.140 180.009 109.248 180.026 109.358 180.060  c
109.430 180.081 109.593 180.158 109.847 180.292  c
110.101 180.425 110.276 180.504 110.374 180.530  c
110.530 180.576 110.697 180.600 110.875 180.600  c
111.307 180.600 111.682 180.432 112.002 180.098  c
112.321 179.764 112.481 179.368 112.481 178.911  c
112.481 178.577 112.407 178.251 112.259 177.934  c
112.149 177.697 112.028 177.517 111.897 177.394  c
111.715 177.225 111.465 177.071 111.148 176.934  c
110.831 176.796 110.507 176.728 110.177 176.728  c
109.974 176.728 l
109.974 176.537 l
110.308 176.495 110.643 176.374 110.980 176.175  c
111.316 175.976 111.561 175.737 111.713 175.458  c
111.865 175.179 111.941 174.872 111.941 174.538  c
111.941 174.102 111.805 173.749 111.532 173.481  c
111.259 173.212 110.919 173.078 110.513 173.078  c
109.857 173.078 109.309 173.429 108.869 174.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
148.000 162.000 m
148.000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
155.049 177.826 m
155.049 178.727 l
153.894 178.727 l
153.894 181.000 l
152.846 181.000 l
152.846 178.727 l
149.203 178.727 l
149.203 177.915 l
153.195 172.214 l
153.894 172.214 l
153.894 177.826 l
h
152.846 177.826 m
152.846 173.554 l
149.825 177.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
189.000 162.000 m
189.000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
195.643 172.392 m
195.147 173.471 l
192.558 173.471 l
191.993 174.627 l
193.114 174.792 194.003 175.208 194.659 175.877  c
195.222 176.453 195.503 177.130 195.503 177.908  c
195.503 178.361 195.411 178.780 195.227 179.165  c
195.043 179.550 194.811 179.878 194.532 180.149  c
194.252 180.420 193.941 180.638 193.599 180.803  c
193.112 181.036 192.613 181.152 192.101 181.152  c
191.584 181.152 191.209 181.064 190.974 180.888  c
190.739 180.713 190.622 180.519 190.622 180.308  c
190.622 180.189 190.670 180.084 190.768 179.993  c
190.865 179.902 190.988 179.857 191.136 179.857  c
191.246 179.857 191.342 179.874 191.425 179.908  c
191.507 179.942 191.648 180.028 191.847 180.168  c
192.164 180.388 192.486 180.498 192.812 180.498  c
193.307 180.498 193.741 180.311 194.116 179.936  c
194.491 179.562 194.678 179.106 194.678 178.568  c
194.678 178.048 194.511 177.562 194.176 177.112  c
193.842 176.661 193.381 176.313 192.793 176.067  c
192.331 175.877 191.703 175.767 190.907 175.737  c
192.558 172.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
230.000 162.000 m
230.000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
236.827 172.214 m
236.827 172.449 l
236.268 172.504 235.812 172.615 235.459 172.783  c
235.105 172.950 234.756 173.205 234.411 173.547  c
234.067 173.890 233.781 174.272 233.554 174.693  c
233.328 175.114 233.139 175.615 232.986 176.194  c
233.596 175.775 234.207 175.566 234.821 175.566  c
235.409 175.566 235.919 175.803 236.351 176.277  c
236.782 176.751 236.998 177.360 236.998 178.105  c
236.998 178.824 236.780 179.480 236.344 180.073  c
235.820 180.792 235.126 181.152 234.262 181.152  c
233.674 181.152 233.175 180.957 232.764 180.568  c
231.960 179.810 231.558 178.829 231.558 177.623  c
231.558 176.852 231.713 176.120 232.022 175.426  c
232.330 174.732 232.772 174.117 233.345 173.579  c
233.918 173.042 234.467 172.680 234.992 172.494  c
235.517 172.307 236.006 172.214 236.459 172.214  c
h
232.878 176.658 m
232.802 177.229 232.764 177.690 232.764 178.042  c
232.764 178.448 232.839 178.889 232.990 179.365  c
233.140 179.841 233.363 180.219 233.659 180.498  c
233.875 180.697 234.137 180.796 234.446 180.796  c
234.814 180.796 235.144 180.623 235.433 180.276  c
235.723 179.929 235.868 179.434 235.868 178.791  c
235.868 178.067 235.724 177.441 235.437 176.912  c
235.149 176.383 234.740 176.118 234.211 176.118  c
234.051 176.118 233.878 176.152 233.694 176.220  c
233.510 176.287 233.238 176.433 232.878 176.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
45.0000 162.000 m
45.0000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
86.0000 162.000 m
86.0000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
127.000 162.000 m
127.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
168.000 162.000 m
168.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
209.000 162.000 m
209.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
21.0000 162.000 m
21.0000 8.01927 l
S
Q
q
q
0 J
1 j
newpath
21.0000 145.000 m
18.0000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 149.747 m
6.46972 148.765 6.61783 147.920 6.91406 147.211  c
7.21028 146.502 7.60384 145.974 8.09472 145.627  c
8.47558 145.352 8.86914 145.214 9.27539 145.214  c
9.93554 145.214 10.5279 145.551 11.0527 146.224  c
11.7086 147.057 12.0366 148.187 12.0366 149.613  c
12.0366 150.612 11.8927 151.460 11.6049 152.159  c
11.3172 152.857 10.9501 153.364 10.5036 153.679  c
10.0572 153.994 9.62662 154.152 9.21191 154.152  c
8.39095 154.152 7.70752 153.667 7.16162 152.698  c
6.70035 151.882 6.46972 150.898 6.46972 149.747  c
h
7.71386 149.905 m
7.71386 151.090 7.85986 152.057 8.15185 152.806  c
8.39306 153.437 8.75276 153.752 9.23095 153.752  c
9.45947 153.752 9.69645 153.649 9.94189 153.444  c
10.1873 153.239 10.3735 152.895 10.5004 152.413  c
10.6951 151.685 10.7924 150.659 10.7924 149.334  c
10.7924 148.352 10.6909 147.533 10.4877 146.877  c
10.3354 146.391 10.1386 146.046 9.89746 145.843  c
9.72395 145.703 9.51448 145.633 9.26904 145.633  c
8.98128 145.633 8.72526 145.762 8.50097 146.021  c
8.19628 146.372 7.98893 146.924 7.87890 147.677  c
7.76888 148.431 7.71386 149.173 7.71386 149.905  c
h
14.6250 152.768 m
14.8238 152.768 14.9910 152.837 15.1264 152.974  c
15.2618 153.112 15.3295 153.278 15.3295 153.473  c
15.3295 153.667 15.2608 153.833 15.1232 153.971  c
14.9857 154.109 14.8196 154.177 14.6250 154.177  c
14.4303 154.177 14.2642 154.109 14.1267 153.971  c
13.9891 153.833 13.9204 153.667 13.9204 153.473  c
13.9204 153.274 13.9891 153.107 14.1267 152.971  c
14.2642 152.836 14.4303 152.768 14.6250 152.768  c
h
17.5234 146.236 m
19.6181 145.214 l
19.8276 145.214 l
19.8276 152.482 l
19.8276 152.965 19.8477 153.265 19.8879 153.384  c
19.9281 153.502 20.0117 153.593 20.1386 153.657  c
20.2656 153.720 20.5237 153.756 20.9130 153.765  c
20.9130 154.000 l
17.6757 154.000 l
17.6757 153.765 l
18.0820 153.756 18.3444 153.721 18.4628 153.660  c
18.5813 153.599 18.6639 153.516 18.7104 153.412  c
18.7570 153.309 18.7802 152.999 18.7802 152.482  c
18.7802 147.836 l
18.7802 147.210 18.7591 146.808 18.7168 146.630  c
18.6871 146.495 18.6332 146.395 18.5549 146.332  c
18.4766 146.268 18.3824 146.236 18.2724 146.236  c
18.1158 146.236 17.8979 146.302 17.6186 146.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 130.000 m
18.0000 130.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 134.747 m
6.46972 133.765 6.61783 132.920 6.91406 132.211  c
7.21028 131.502 7.60384 130.974 8.09472 130.627  c
8.47558 130.352 8.86914 130.214 9.27539 130.214  c
9.93554 130.214 10.5279 130.551 11.0527 131.224  c
11.7086 132.057 12.0366 133.187 12.0366 134.613  c
12.0366 135.612 11.8927 136.460 11.6049 137.159  c
11.3172 137.857 10.9501 138.364 10.5036 138.679  c
10.0572 138.994 9.62662 139.152 9.21191 139.152  c
8.39095 139.152 7.70752 138.667 7.16162 137.698  c
6.70035 136.882 6.46972 135.898 6.46972 134.747  c
h
7.71386 134.905 m
7.71386 136.090 7.85986 137.057 8.15185 137.806  c
8.39306 138.437 8.75276 138.752 9.23095 138.752  c
9.45947 138.752 9.69645 138.649 9.94189 138.444  c
10.1873 138.239 10.3735 137.895 10.5004 137.413  c
10.6951 136.685 10.7924 135.659 10.7924 134.334  c
10.7924 133.352 10.6909 132.533 10.4877 131.877  c
10.3354 131.391 10.1386 131.046 9.89746 130.843  c
9.72395 130.703 9.51448 130.633 9.26904 130.633  c
8.98128 130.633 8.72526 130.762 8.50097 131.021  c
8.19628 131.372 7.98893 131.924 7.87890 132.677  c
7.76888 133.431 7.71386 134.173 7.71386 134.905  c
h
14.6250 137.768 m
14.8238 137.768 14.9910 137.837 15.1264 137.974  c
15.2618 138.112 15.3295 138.278 15.3295 138.473  c
15.3295 138.667 15.2608 138.833 15.1232 138.971  c
14.9857 139.109 14.8196 139.177 14.6250 139.177  c
14.4303 139.177 14.2642 139.109 14.1267 138.971  c
13.9891 138.833 13.9204 138.667 13.9204 138.473  c
13.9204 138.274 13.9891 138.107 14.1267 137.971  c
14.2642 137.836 14.4303 137.768 14.6250 137.768  c
h
21.9604 137.343 m
21.3574 139.000 l
16.2793 139.000 l
16.2793 138.765 l
17.7731 137.402 18.8247 136.289 19.4340 135.426  c
20.0434 134.563 20.3481 133.773 20.3481 133.058  c
20.3481 132.512 20.1809 132.064 19.8466 131.712  c
19.5123 131.361 19.1124 131.186 18.6469 131.186  c
18.2238 131.186 17.8439 131.309 17.5075 131.557  c
17.1711 131.804 16.9225 132.167 16.7617 132.646  c
16.5268 132.646 l
16.6326 131.863 16.9045 131.262 17.3425 130.843  c
17.7805 130.424 18.3274 130.214 18.9834 130.214  c
19.6816 130.214 20.2645 130.439 20.7321 130.887  c
21.1997 131.336 21.4335 131.865 21.4335 132.474  c
21.4335 132.910 21.3320 133.346 21.1289 133.782  c
20.8157 134.467 20.3079 135.193 19.6054 135.959  c
18.5517 137.110 17.8937 137.804 17.6313 138.041  c
19.8784 138.041 l
20.3354 138.041 20.6560 138.024 20.8400 137.990  c
21.0241 137.956 21.1902 137.888 21.3383 137.784  c
21.4864 137.680 21.6155 137.533 21.7255 137.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 114.000 m
18.0000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 119.747 m
6.46972 118.765 6.61783 117.920 6.91406 117.211  c
7.21028 116.502 7.60384 115.974 8.09472 115.627  c
8.47558 115.352 8.86914 115.214 9.27539 115.214  c
9.93554 115.214 10.5279 115.551 11.0527 116.224  c
11.7086 117.057 12.0366 118.187 12.0366 119.613  c
12.0366 120.612 11.8927 121.460 11.6049 122.159  c
11.3172 122.857 10.9501 123.364 10.5036 123.679  c
10.0572 123.994 9.62662 124.152 9.21191 124.152  c
8.39095 124.152 7.70752 123.667 7.16162 122.698  c
6.70035 121.882 6.46972 120.898 6.46972 119.747  c
h
7.71386 119.905 m
7.71386 121.090 7.85986 122.057 8.15185 122.806  c
8.39306 123.437 8.75276 123.752 9.23095 123.752  c
9.45947 123.752 9.69645 123.649 9.94189 123.444  c
10.1873 123.239 10.3735 122.895 10.5004 122.413  c
10.6951 121.685 10.7924 120.659 10.7924 119.334  c
10.7924 118.352 10.6909 117.533 10.4877 116.877  c
10.3354 116.391 10.1386 116.046 9.89746 115.843  c
9.72395 115.703 9.51448 115.633 9.26904 115.633  c
8.98128 115.633 8.72526 115.762 8.50097 116.021  c
8.19628 116.372 7.98893 116.924 7.87890 117.677  c
7.76888 118.431 7.71386 119.173 7.71386 119.905  c
h
14.6250 122.768 m
14.8238 122.768 14.9910 122.837 15.1264 122.974  c
15.2618 123.112 15.3295 123.278 15.3295 123.473  c
15.3295 123.667 15.2608 123.833 15.1232 123.971  c
14.9857 124.109 14.8196 124.177 14.6250 124.177  c
14.4303 124.177 14.2642 124.109 14.1267 123.971  c
13.9891 123.833 13.9204 123.667 13.9204 123.473  c
13.9204 123.274 13.9891 123.107 14.1267 122.971  c
14.2642 122.836 14.4303 122.768 14.6250 122.768  c
h
16.6601 117.030 m
16.9056 116.450 17.2155 116.003 17.5900 115.687  c
17.9646 115.372 18.4311 115.214 18.9897 115.214  c
19.6795 115.214 20.2085 115.439 20.5766 115.887  c
20.8559 116.222 20.9956 116.579 20.9956 116.960  c
20.9956 117.586 20.6020 118.234 19.8149 118.902  c
20.3439 119.110 20.7438 119.406 21.0146 119.791  c
21.2854 120.176 21.4209 120.629 21.4209 121.149  c
21.4209 121.894 21.1839 122.540 20.7099 123.085  c
20.0921 123.796 19.1971 124.152 18.0249 124.152  c
17.4451 124.152 17.0505 124.080 16.8410 123.936  c
16.6315 123.792 16.5268 123.638 16.5268 123.473  c
16.5268 123.350 16.5765 123.242 16.6760 123.149  c
16.7754 123.056 16.8950 123.009 17.0346 123.009  c
17.1404 123.009 17.2483 123.026 17.3584 123.060  c
17.4303 123.081 17.5932 123.158 17.8471 123.292  c
18.1010 123.425 18.2766 123.504 18.3740 123.530  c
18.5306 123.576 18.6977 123.600 18.8754 123.600  c
19.3071 123.600 19.6827 123.432 20.0022 123.098  c
20.3217 122.764 20.4814 122.368 20.4814 121.911  c
20.4814 121.577 20.4073 121.251 20.2592 120.934  c
20.1492 120.697 20.0286 120.517 19.8974 120.394  c
19.7154 120.225 19.4658 120.071 19.1484 119.934  c
18.8310 119.796 18.5073 119.728 18.1772 119.728  c
17.9741 119.728 l
17.9741 119.537 l
18.3084 119.495 18.6438 119.374 18.9802 119.175  c
19.3166 118.976 19.5610 118.737 19.7133 118.458  c
19.8657 118.179 19.9418 117.872 19.9418 117.538  c
19.9418 117.102 19.8054 116.749 19.5324 116.481  c
19.2595 116.212 18.9199 116.078 18.5136 116.078  c
17.8577 116.078 17.3097 116.429 16.8696 117.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 99.0000 m
18.0000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 104.747 m
6.46972 103.765 6.61783 102.920 6.91406 102.211  c
7.21028 101.502 7.60384 100.974 8.09472 100.627  c
8.47558 100.352 8.86914 100.214 9.27539 100.214  c
9.93554 100.214 10.5279 100.551 11.0527 101.224  c
11.7086 102.057 12.0366 103.187 12.0366 104.613  c
12.0366 105.612 11.8927 106.460 11.6049 107.159  c
11.3172 107.857 10.9501 108.364 10.5036 108.679  c
10.0572 108.994 9.62662 109.152 9.21191 109.152  c
8.39095 109.152 7.70752 108.667 7.16162 107.698  c
6.70035 106.882 6.46972 105.898 6.46972 104.747  c
h
7.71386 104.905 m
7.71386 106.090 7.85986 107.057 8.15185 107.806  c
8.39306 108.437 8.75276 108.752 9.23095 108.752  c
9.45947 108.752 9.69645 108.649 9.94189 108.444  c
10.1873 108.239 10.3735 107.895 10.5004 107.413  c
10.6951 106.685 10.7924 105.659 10.7924 104.334  c
10.7924 103.352 10.6909 102.533 10.4877 101.877  c
10.3354 101.391 10.1386 101.046 9.89746 100.843  c
9.72395 100.703 9.51448 100.633 9.26904 100.633  c
8.98128 100.633 8.72526 100.762 8.50097 101.021  c
8.19628 101.372 7.98893 101.924 7.87890 102.677  c
7.76888 103.431 7.71386 104.173 7.71386 104.905  c
h
14.6250 107.768 m
14.8238 107.768 14.9910 107.837 15.1264 107.974  c
15.2618 108.112 15.3295 108.278 15.3295 108.473  c
15.3295 108.667 15.2608 108.833 15.1232 108.971  c
14.9857 109.109 14.8196 109.177 14.6250 109.177  c
14.4303 109.177 14.2642 109.109 14.1267 108.971  c
13.9891 108.833 13.9204 108.667 13.9204 108.473  c
13.9204 108.274 13.9891 108.107 14.1267 107.971  c
14.2642 107.836 14.4303 107.768 14.6250 107.768  c
h
22.0493 105.826 m
22.0493 106.727 l
20.8940 106.727 l
20.8940 109.000 l
19.8466 109.000 l
19.8466 106.727 l
16.2031 106.727 l
16.2031 105.915 l
20.1958 100.214 l
20.8940 100.214 l
20.8940 105.826 l
h
19.8466 105.826 m
19.8466 101.554 l
16.8252 105.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 84.0000 m
18.0000 84.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 89.7470 m
6.46972 88.7653 6.61783 87.9200 6.91406 87.2111  c
7.21028 86.5023 7.60384 85.9744 8.09472 85.6274  c
8.47558 85.3523 8.86914 85.2148 9.27539 85.2148  c
9.93554 85.2148 10.5279 85.5512 11.0527 86.2241  c
11.7086 87.0577 12.0366 88.1876 12.0366 89.6137  c
12.0366 90.6124 11.8927 91.4609 11.6049 92.1591  c
11.3172 92.8574 10.9501 93.3641 10.5036 93.6794  c
10.0572 93.9947 9.62662 94.1523 9.21191 94.1523  c
8.39095 94.1523 7.70752 93.6678 7.16162 92.6987  c
6.70035 91.8820 6.46972 90.8981 6.46972 89.7470  c
h
7.71386 89.9057 m
7.71386 91.0906 7.85986 92.0576 8.15185 92.8066  c
8.39306 93.4371 8.75276 93.7524 9.23095 93.7524  c
9.45947 93.7524 9.69645 93.6498 9.94189 93.4445  c
10.1873 93.2393 10.3735 92.8955 10.5004 92.4130  c
10.6951 91.6852 10.7924 90.6590 10.7924 89.3344  c
10.7924 88.3527 10.6909 87.5338 10.4877 86.8779  c
10.3354 86.3912 10.1386 86.0463 9.89746 85.8432  c
9.72395 85.7036 9.51448 85.6337 9.26904 85.6337  c
8.98128 85.6337 8.72526 85.7628 8.50097 86.0210  c
8.19628 86.3722 7.98893 86.9244 7.87890 87.6777  c
7.76888 88.4309 7.71386 89.1736 7.71386 89.9057  c
h
14.6250 92.7685 m
14.8238 92.7685 14.9910 92.8373 15.1264 92.9748  c
15.2618 93.1123 15.3295 93.2784 15.3295 93.4731  c
15.3295 93.6678 15.2608 93.8339 15.1232 93.9714  c
14.9857 94.1089 14.8196 94.1777 14.6250 94.1777  c
14.4303 94.1777 14.2642 94.1089 14.1267 93.9714  c
13.9891 93.8339 13.9204 93.6678 13.9204 93.4731  c
13.9204 93.2742 13.9891 93.1071 14.1267 92.9716  c
14.2642 92.8362 14.4303 92.7685 14.6250 92.7685  c
h
21.6430 85.3925 m
21.1479 86.4716 l
18.5581 86.4716 l
17.9931 87.6269 l
19.1145 87.7919 20.0032 88.2088 20.6591 88.8774  c
21.2220 89.4529 21.5034 90.1300 21.5034 90.9086  c
21.5034 91.3614 21.4113 91.7804 21.2272 92.1655  c
21.0432 92.5506 20.8115 92.8785 20.5322 93.1494  c
20.2529 93.4202 19.9418 93.6381 19.5991 93.8032  c
19.1124 94.0359 18.6131 94.1523 18.1010 94.1523  c
17.5848 94.1523 17.2092 94.0645 16.9743 93.8889  c
16.7395 93.7133 16.6220 93.5196 16.6220 93.3081  c
16.6220 93.1896 16.6707 93.0848 16.7680 92.9939  c
16.8654 92.9029 16.9881 92.8574 17.1362 92.8574  c
17.2462 92.8574 17.3425 92.8743 17.4250 92.9082  c
17.5075 92.9420 17.6482 93.0288 17.8471 93.1684  c
18.1645 93.3885 18.4861 93.4985 18.8120 93.4985  c
19.3071 93.4985 19.7419 93.3112 20.1164 92.9367  c
20.4909 92.5622 20.6782 92.1062 20.6782 91.5688  c
20.6782 91.0483 20.5110 90.5627 20.1767 90.1120  c
19.8424 89.6613 19.3811 89.3133 18.7929 89.0678  c
18.3317 88.8774 17.7032 88.7674 16.9077 88.7377  c
18.5581 85.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 69.0000 m
18.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 73.7470 m
6.46972 72.7653 6.61783 71.9200 6.91406 71.2111  c
7.21028 70.5023 7.60384 69.9744 8.09472 69.6274  c
8.47558 69.3523 8.86914 69.2148 9.27539 69.2148  c
9.93554 69.2148 10.5279 69.5512 11.0527 70.2241  c
11.7086 71.0577 12.0366 72.1876 12.0366 73.6137  c
12.0366 74.6124 11.8927 75.4609 11.6049 76.1591  c
11.3172 76.8574 10.9501 77.3641 10.5036 77.6794  c
10.0572 77.9947 9.62662 78.1523 9.21191 78.1523  c
8.39095 78.1523 7.70752 77.6678 7.16162 76.6987  c
6.70035 75.8820 6.46972 74.8981 6.46972 73.7470  c
h
7.71386 73.9057 m
7.71386 75.0906 7.85986 76.0576 8.15185 76.8066  c
8.39306 77.4371 8.75276 77.7524 9.23095 77.7524  c
9.45947 77.7524 9.69645 77.6498 9.94189 77.4445  c
10.1873 77.2393 10.3735 76.8955 10.5004 76.4130  c
10.6951 75.6852 10.7924 74.6590 10.7924 73.3344  c
10.7924 72.3527 10.6909 71.5338 10.4877 70.8779  c
10.3354 70.3912 10.1386 70.0463 9.89746 69.8432  c
9.72395 69.7036 9.51448 69.6337 9.26904 69.6337  c
8.98128 69.6337 8.72526 69.7628 8.50097 70.0210  c
8.19628 70.3722 7.98893 70.9244 7.87890 71.6777  c
7.76888 72.4309 7.71386 73.1736 7.71386 73.9057  c
h
14.6250 76.7685 m
14.8238 76.7685 14.9910 76.8373 15.1264 76.9748  c
15.2618 77.1123 15.3295 77.2784 15.3295 77.4731  c
15.3295 77.6678 15.2608 77.8339 15.1232 77.9714  c
14.9857 78.1089 14.8196 78.1777 14.6250 78.1777  c
14.4303 78.1777 14.2642 78.1089 14.1267 77.9714  c
13.9891 77.8339 13.9204 77.6678 13.9204 77.4731  c
13.9204 77.2742 13.9891 77.1071 14.1267 76.9716  c
14.2642 76.8362 14.4303 76.7685 14.6250 76.7685  c
h
21.8271 69.2148 m
21.8271 69.4497 l
21.2685 69.5047 20.8125 69.6158 20.4592 69.7829  c
20.1058 69.9501 19.7567 70.2050 19.4118 70.5478  c
19.0669 70.8906 18.7813 71.2725 18.5549 71.6936  c
18.3285 72.1146 18.1391 72.6150 17.9868 73.1948  c
18.5961 72.7758 19.2076 72.5664 19.8212 72.5664  c
20.4095 72.5664 20.9194 72.8033 21.3510 73.2773  c
21.7827 73.7513 21.9985 74.3606 21.9985 75.1054  c
21.9985 75.8248 21.7806 76.4807 21.3447 77.0732  c
20.8199 77.7926 20.1259 78.1523 19.2627 78.1523  c
18.6744 78.1523 18.1751 77.9576 17.7646 77.5683  c
16.9606 76.8108 16.5585 75.8291 16.5585 74.6230  c
16.5585 73.8528 16.7130 73.1207 17.0219 72.4267  c
17.3308 71.7327 17.7720 71.1170 18.3454 70.5795  c
18.9188 70.0421 19.4679 69.6803 19.9926 69.4941  c
20.5174 69.3079 21.0061 69.2148 21.4589 69.2148  c
h
17.8789 73.6582 m
17.8027 74.2294 17.7646 74.6907 17.7646 75.0419  c
17.7646 75.4482 17.8397 75.8894 17.9899 76.3654  c
18.1402 76.8415 18.3634 77.2192 18.6596 77.4985  c
18.8754 77.6974 19.1378 77.7968 19.4467 77.7968  c
19.8149 77.7968 20.1439 77.6233 20.4338 77.2763  c
20.7237 76.9293 20.8686 76.4342 20.8686 75.7910  c
20.8686 75.0673 20.7247 74.4410 20.4370 73.9121  c
20.1492 73.3831 19.7408 73.1186 19.2119 73.1186  c
19.0511 73.1186 18.8786 73.1525 18.6945 73.2202  c
18.5105 73.2879 18.2386 73.4339 17.8789 73.6582  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 54.0000 m
18.0000 54.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 58.7470 m
6.46972 57.7653 6.61783 56.9200 6.91406 56.2111  c
7.21028 55.5023 7.60384 54.9744 8.09472 54.6274  c
8.47558 54.3523 8.86914 54.2148 9.27539 54.2148  c
9.93554 54.2148 10.5279 54.5512 11.0527 55.2241  c
11.7086 56.0577 12.0366 57.1876 12.0366 58.6137  c
12.0366 59.6124 11.8927 60.4609 11.6049 61.1591  c
11.3172 61.8574 10.9501 62.3641 10.5036 62.6794  c
10.0572 62.9947 9.62662 63.1523 9.21191 63.1523  c
8.39095 63.1523 7.70752 62.6678 7.16162 61.6987  c
6.70035 60.8820 6.46972 59.8981 6.46972 58.7470  c
h
7.71386 58.9057 m
7.71386 60.0906 7.85986 61.0576 8.15185 61.8066  c
8.39306 62.4371 8.75276 62.7524 9.23095 62.7524  c
9.45947 62.7524 9.69645 62.6498 9.94189 62.4445  c
10.1873 62.2393 10.3735 61.8955 10.5004 61.4130  c
10.6951 60.6852 10.7924 59.6590 10.7924 58.3344  c
10.7924 57.3527 10.6909 56.5338 10.4877 55.8779  c
10.3354 55.3912 10.1386 55.0463 9.89746 54.8432  c
9.72395 54.7036 9.51448 54.6337 9.26904 54.6337  c
8.98128 54.6337 8.72526 54.7628 8.50097 55.0210  c
8.19628 55.3722 7.98893 55.9244 7.87890 56.6777  c
7.76888 57.4309 7.71386 58.1736 7.71386 58.9057  c
h
14.6250 61.7685 m
14.8238 61.7685 14.9910 61.8373 15.1264 61.9748  c
15.2618 62.1123 15.3295 62.2784 15.3295 62.4731  c
15.3295 62.6678 15.2608 62.8339 15.1232 62.9714  c
14.9857 63.1089 14.8196 63.1777 14.6250 63.1777  c
14.4303 63.1777 14.2642 63.1089 14.1267 62.9714  c
13.9891 62.8339 13.9204 62.6678 13.9204 62.4731  c
13.9204 62.2742 13.9891 62.1071 14.1267 61.9716  c
14.2642 61.8362 14.4303 61.7685 14.6250 61.7685  c
h
17.3076 54.3925 m
21.9223 54.3925 l
21.9223 54.6337 l
19.0532 63.1777 l
18.3422 63.1777 l
20.9130 55.4272 l
18.5454 55.4272 l
18.0672 55.4272 17.7265 55.4843 17.5234 55.5986  c
17.1679 55.7932 16.8823 56.0937 16.6665 56.5000  c
16.4824 56.4301 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 38.0000 m
18.0000 38.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 43.7470 m
6.46972 42.7653 6.61783 41.9200 6.91406 41.2111  c
7.21028 40.5023 7.60384 39.9744 8.09472 39.6274  c
8.47558 39.3523 8.86914 39.2148 9.27539 39.2148  c
9.93554 39.2148 10.5279 39.5512 11.0527 40.2241  c
11.7086 41.0577 12.0366 42.1876 12.0366 43.6137  c
12.0366 44.6124 11.8927 45.4609 11.6049 46.1591  c
11.3172 46.8574 10.9501 47.3641 10.5036 47.6794  c
10.0572 47.9947 9.62662 48.1523 9.21191 48.1523  c
8.39095 48.1523 7.70752 47.6678 7.16162 46.6987  c
6.70035 45.8820 6.46972 44.8981 6.46972 43.7470  c
h
7.71386 43.9057 m
7.71386 45.0906 7.85986 46.0576 8.15185 46.8066  c
8.39306 47.4371 8.75276 47.7524 9.23095 47.7524  c
9.45947 47.7524 9.69645 47.6498 9.94189 47.4445  c
10.1873 47.2393 10.3735 46.8955 10.5004 46.4130  c
10.6951 45.6852 10.7924 44.6590 10.7924 43.3344  c
10.7924 42.3527 10.6909 41.5338 10.4877 40.8779  c
10.3354 40.3912 10.1386 40.0463 9.89746 39.8432  c
9.72395 39.7036 9.51448 39.6337 9.26904 39.6337  c
8.98128 39.6337 8.72526 39.7628 8.50097 40.0210  c
8.19628 40.3722 7.98893 40.9244 7.87890 41.6777  c
7.76888 42.4309 7.71386 43.1736 7.71386 43.9057  c
h
14.6250 46.7685 m
14.8238 46.7685 14.9910 46.8373 15.1264 46.9748  c
15.2618 47.1123 15.3295 47.2784 15.3295 47.4731  c
15.3295 47.6678 15.2608 47.8339 15.1232 47.9714  c
14.9857 48.1089 14.8196 48.1777 14.6250 48.1777  c
14.4303 48.1777 14.2642 48.1089 14.1267 47.9714  c
13.9891 47.8339 13.9204 47.6678 13.9204 47.4731  c
13.9204 47.2742 13.9891 47.1071 14.1267 46.9716  c
14.2642 46.8362 14.4303 46.7685 14.6250 46.7685  c
h
18.4946 43.6645 m
17.8133 43.1059 17.3742 42.6573 17.1774 42.3188  c
16.9807 41.9803 16.8823 41.6290 16.8823 41.2651  c
16.8823 40.7065 17.0981 40.2251 17.5297 39.8210  c
17.9614 39.4169 18.5348 39.2148 19.2500 39.2148  c
19.9440 39.2148 20.5026 39.4031 20.9257 39.7797  c
21.3489 40.1564 21.5605 40.5859 21.5605 41.0683  c
21.5605 41.3899 21.4462 41.7179 21.2177 42.0522  c
20.9892 42.3865 20.5131 42.7801 19.7895 43.2329  c
20.5343 43.8084 21.0273 44.2612 21.2685 44.5913  c
21.5901 45.0229 21.7509 45.4778 21.7509 45.9560  c
21.7509 46.5612 21.5203 47.0785 21.0590 47.5080  c
20.5978 47.9375 19.9926 48.1523 19.2436 48.1523  c
18.4269 48.1523 17.7900 47.8963 17.3330 47.3842  c
16.9690 46.9738 16.7871 46.5252 16.7871 46.0385  c
16.7871 45.6577 16.9151 45.2800 17.1711 44.9055  c
17.4271 44.5310 17.8683 44.1173 18.4946 43.6645  c
h
19.4912 42.9853 m
19.9990 42.5283 20.3206 42.1675 20.4560 41.9030  c
20.5914 41.6385 20.6591 41.3391 20.6591 41.0048  c
20.6591 40.5605 20.5343 40.2124 20.2846 39.9606  c
20.0349 39.7089 19.6943 39.5830 19.2627 39.5830  c
18.8310 39.5830 18.4798 39.7078 18.2089 39.9575  c
17.9381 40.2071 17.8027 40.4991 17.8027 40.8335  c
17.8027 41.0535 17.8588 41.2736 17.9709 41.4936  c
18.0830 41.7137 18.2428 41.9231 18.4502 42.1220  c
h
18.7929 43.9057 m
18.4417 44.2019 18.1814 44.5246 18.0122 44.8737  c
17.8429 45.2229 17.7583 45.6005 17.7583 46.0068  c
17.7583 46.5527 17.9074 46.9896 18.2058 47.3176  c
18.5041 47.6455 18.8839 47.8095 19.3452 47.8095  c
19.8022 47.8095 20.1682 47.6805 20.4433 47.4223  c
20.7184 47.1642 20.8559 46.8510 20.8559 46.4829  c
20.8559 46.1782 20.7755 45.9052 20.6147 45.6640  c
20.3142 45.2154 19.7070 44.6293 18.7929 43.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 23.0000 m
18.0000 23.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46972 28.7470 m
6.46972 27.7653 6.61783 26.9200 6.91406 26.2111  c
7.21028 25.5023 7.60384 24.9744 8.09472 24.6274  c
8.47558 24.3523 8.86914 24.2148 9.27539 24.2148  c
9.93554 24.2148 10.5279 24.5512 11.0527 25.2241  c
11.7086 26.0577 12.0366 27.1876 12.0366 28.6137  c
12.0366 29.6124 11.8927 30.4609 11.6049 31.1591  c
11.3172 31.8574 10.9501 32.3641 10.5036 32.6794  c
10.0572 32.9947 9.62662 33.1523 9.21191 33.1523  c
8.39095 33.1523 7.70752 32.6678 7.16162 31.6987  c
6.70035 30.8820 6.46972 29.8981 6.46972 28.7470  c
h
7.71386 28.9057 m
7.71386 30.0906 7.85986 31.0576 8.15185 31.8066  c
8.39306 32.4371 8.75276 32.7524 9.23095 32.7524  c
9.45947 32.7524 9.69645 32.6498 9.94189 32.4445  c
10.1873 32.2393 10.3735 31.8955 10.5004 31.4130  c
10.6951 30.6852 10.7924 29.6590 10.7924 28.3344  c
10.7924 27.3527 10.6909 26.5338 10.4877 25.8779  c
10.3354 25.3912 10.1386 25.0463 9.89746 24.8432  c
9.72395 24.7036 9.51448 24.6337 9.26904 24.6337  c
8.98128 24.6337 8.72526 24.7628 8.50097 25.0210  c
8.19628 25.3722 7.98893 25.9244 7.87890 26.6777  c
7.76888 27.4309 7.71386 28.1736 7.71386 28.9057  c
h
14.6250 31.7685 m
14.8238 31.7685 14.9910 31.8373 15.1264 31.9748  c
15.2618 32.1123 15.3295 32.2784 15.3295 32.4731  c
15.3295 32.6678 15.2608 32.8339 15.1232 32.9714  c
14.9857 33.1089 14.8196 33.1777 14.6250 33.1777  c
14.4303 33.1777 14.2642 33.1089 14.1267 32.9714  c
13.9891 32.8339 13.9204 32.6678 13.9204 32.4731  c
13.9204 32.2742 13.9891 32.1071 14.1267 31.9716  c
14.2642 31.8362 14.4303 31.7685 14.6250 31.7685  c
h
16.6855 33.1777 m
16.6855 32.9428 l
17.2356 32.9344 17.7477 32.8064 18.2216 32.5588  c
18.6956 32.3112 19.1537 31.8785 19.5959 31.2607  c
20.0381 30.6429 20.3460 29.9637 20.5195 29.2231  c
19.8551 29.6505 19.2542 29.8642 18.7168 29.8642  c
18.1116 29.8642 17.5932 29.6304 17.1616 29.1628  c
16.7299 28.6952 16.5141 28.0742 16.5141 27.2998  c
16.5141 26.5465 16.7299 25.8758 17.1616 25.2876  c
17.6821 24.5724 18.3613 24.2148 19.1992 24.2148  c
19.9059 24.2148 20.5110 24.5068 21.0146 25.0908  c
21.6324 25.8144 21.9414 26.7073 21.9414 27.7695  c
21.9414 28.7259 21.7065 29.6177 21.2368 30.4450  c
20.7670 31.2723 20.1132 31.9589 19.2753 32.5048  c
18.5940 32.9534 17.8514 33.1777 17.0473 33.1777  c
h
20.6210 28.7534 m
20.6972 28.2032 20.7353 27.7631 20.7353 27.4331  c
20.7353 27.0226 20.6655 26.5793 20.5258 26.1032  c
20.3862 25.6272 20.1884 25.2622 19.9323 25.0083  c
19.6763 24.7543 19.3854 24.6274 19.0595 24.6274  c
18.6829 24.6274 18.3528 24.7967 18.0693 25.1352  c
17.7858 25.4738 17.6440 25.9773 17.6440 26.6460  c
17.6440 27.5389 17.8323 28.2371 18.2089 28.7407  c
18.4840 29.1046 18.8225 29.2866 19.2246 29.2866  c
19.4192 29.2866 19.6499 29.2400 19.9165 29.1469  c
20.1831 29.0538 20.4179 28.9226 20.6210 28.7534  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 8.00000 m
18.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.52343 10.2368 m
9.61816 9.21484 l
9.82763 9.21484 l
9.82763 16.4829 l
9.82763 16.9653 9.84773 17.2657 9.88793 17.3842  c
9.92814 17.5027 10.0117 17.5937 10.1386 17.6572  c
10.2656 17.7207 10.5237 17.7566 10.9130 17.7651  c
10.9130 18.0000 l
7.67578 18.0000 l
7.67578 17.7651 l
8.08203 17.7566 8.34440 17.7217 8.46289 17.6604  c
8.58138 17.5990 8.66390 17.5165 8.71044 17.4128  c
8.75699 17.3091 8.78027 16.9991 8.78027 16.4829  c
8.78027 11.8364 l
8.78027 11.2101 8.75911 10.8081 8.71679 10.6303  c
8.68717 10.4949 8.63321 10.3955 8.55493 10.3320  c
8.47664 10.2685 8.38248 10.2368 8.27246 10.2368  c
8.11588 10.2368 7.89794 10.3024 7.61865 10.4335  c
h
14.6250 16.7685 m
14.8238 16.7685 14.9910 16.8373 15.1264 16.9748  c
15.2618 17.1123 15.3295 17.2784 15.3295 17.4731  c
15.3295 17.6678 15.2608 17.8339 15.1232 17.9714  c
14.9857 18.1089 14.8196 18.1777 14.6250 18.1777  c
14.4303 18.1777 14.2642 18.1089 14.1267 17.9714  c
13.9891 17.8339 13.9204 17.6678 13.9204 17.4731  c
13.9204 17.2742 13.9891 17.1071 14.1267 16.9716  c
14.2642 16.8362 14.4303 16.7685 14.6250 16.7685  c
h
16.4697 13.7470 m
16.4697 12.7653 16.6178 11.9200 16.9140 11.2111  c
17.2102 10.5023 17.6038 9.97444 18.0947 9.62744  c
18.4755 9.35237 18.8691 9.21484 19.2753 9.21484  c
19.9355 9.21484 20.5279 9.55127 21.0527 10.2241  c
21.7086 11.0577 22.0366 12.1876 22.0366 13.6137  c
22.0366 14.6124 21.8927 15.4609 21.6049 16.1591  c
21.3172 16.8574 20.9501 17.3641 20.5036 17.6794  c
20.0572 17.9947 19.6266 18.1523 19.2119 18.1523  c
18.3909 18.1523 17.7075 17.6678 17.1616 16.6987  c
16.7003 15.8820 16.4697 14.8981 16.4697 13.7470  c
h
17.7138 13.9057 m
17.7138 15.0906 17.8598 16.0576 18.1518 16.8066  c
18.3930 17.4371 18.7527 17.7524 19.2309 17.7524  c
19.4594 17.7524 19.6964 17.6498 19.9418 17.4445  c
20.1873 17.2393 20.3735 16.8955 20.5004 16.4130  c
20.6951 15.6852 20.7924 14.6590 20.7924 13.3344  c
20.7924 12.3527 20.6909 11.5338 20.4877 10.8779  c
20.3354 10.3912 20.1386 10.0463 19.8974 9.84326  c
19.7239 9.70361 19.5144 9.63378 19.2690 9.63378  c
18.9812 9.63378 18.7252 9.76285 18.5009 10.0210  c
18.1962 10.3722 17.9889 10.9244 17.8789 11.6777  c
17.7688 12.4309 17.7138 13.1736 17.7138 13.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 152.000 m
19.0000 152.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 137.000 m
19.0000 137.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 122.000 m
19.0000 122.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 107.000 m
19.0000 107.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 92.0000 m
19.0000 92.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 76.0000 m
19.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 61.0000 m
19.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 46.0000 m
19.0000 46.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 31.0000 m
19.0000 31.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
21.0000 16.0000 m
19.0000 16.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 244 190 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
