%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 287 575 504
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ16“ú 17Žž06•ª19•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
502 195 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
502.000 0 l
502.000 195.000 l
0 195.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 492 185 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
45.0000 -1.00000 439.484 178.499 rc
newpath
46.0000 64.1772 m
46.5737 64.1542 l
47.1474 64.0853 l
47.7211 63.9705 l
48.2948 63.8101 l
49.2932 63.4227 l
50.2916 62.8993 l
52.5371 61.2370 l
54.7976 58.9160 l
57.0473 56.0097 l
59.1330 52.8371 l
61.2927 49.1310 l
63.5262 44.9247 l
65.7526 40.4424 l
68.0427 35.6316 l
70.0598 31.3134 l
72.3306 26.4636 l
74.6108 21.7166 l
76.8081 17.3662 l
78.8035 13.6929 l
81.1762 9.77369 l
83.1862 6.91723 l
85.5243 4.22265 l
87.5939 2.47332 l
88.7292 1.78958 l
89.8646 1.31225 l
90.4052 1.15976 l
90.9457 1.05656 l
91.4863 1.00334 l
92.0268 1.00080 l
92.5909 1.05281 l
93.1549 1.16128 l
93.7189 1.32682 l
94.2829 1.54994 l
95.3188 2.11129 l
96.3547 2.87086 l
98.5894 5.19171 l
100.910 8.59317 l
102.931 12.3683 l
105.113 17.2753 l
107.368 23.2120 l
109.573 29.8210 l
111.707 36.9088 l
114.077 45.4916 l
116.206 53.7566 l
118.479 63.0554 l
120.539 71.8082 l
122.791 81.6196 l
127.125 100.751 l
129.291 110.197 l
131.558 119.834 l
133.742 128.749 l
135.975 137.372 l
138.189 145.316 l
140.224 151.989 l
142.556 158.797 l
144.642 164.047 l
146.866 168.696 l
148.995 172.171 l
151.358 174.858 l
152.382 175.628 l
153.405 176.157 l
153.986 176.350 l
154.567 176.464 l
154.857 176.491 l
155.147 176.499 l
155.438 176.488 l
155.728 176.457 l
156.257 176.349 l
156.787 176.177 l
157.316 175.939 l
157.845 175.637 l
159.003 174.751 l
160.161 173.560 l
162.160 170.800 l
164.435 166.607 l
166.634 161.548 l
168.830 155.573 l
171.019 148.785 l
173.122 141.563 l
175.395 133.086 l
177.561 124.468 l
179.841 114.952 l
181.905 106.054 l
184.187 96.0326 l
186.371 86.3728 l
188.551 76.7993 l
190.828 66.9936 l
192.924 58.2468 l
195.072 49.6739 l
197.443 40.7742 l
199.590 33.3222 l
201.785 26.3791 l
204.018 20.0925 l
206.070 15.0541 l
208.258 10.5055 l
210.429 6.85936 l
212.751 3.93383 l
214.800 2.19081 l
215.983 1.53936 l
217.165 1.14289 l
217.698 1.04626 l
218.232 1.00010 l
218.765 1.00387 l
219.299 1.05694 l
220.354 1.30484 l
221.410 1.73788 l
222.545 2.40321 l
223.680 3.26725 l
225.960 5.56489 l
228.034 8.24954 l
230.236 11.6400 l
232.386 15.3993 l
234.716 19.8719 l
236.732 23.9860 l
239.048 28.8825 l
241.224 33.5491 l
243.380 38.1311 l
245.538 42.5829 l
247.738 46.8918 l
250.070 51.1044 l
252.209 54.5644 l
254.320 57.5346 l
256.577 60.1575 l
258.829 62.1518 l
259.839 62.8328 l
260.850 63.3770 l
262.047 63.8413 l
263.244 64.1077 l
263.745 64.1599 l
264.246 64.1772 l
264.747 64.1594 l
265.247 64.1066 l
266.419 63.8468 l
267.591 63.3972 l
268.709 62.7936 l
269.827 62.0226 l
271.824 60.2426 l
274.069 57.6562 l
276.330 54.4810 l
278.579 50.8189 l
280.665 47.0443 l
282.825 42.8278 l
285.058 38.2266 l
287.285 33.4951 l
289.575 28.5865 l
291.592 24.3195 l
293.863 19.6834 l
296.143 15.3168 l
298.340 11.4870 l
300.336 8.41258 l
302.708 5.35257 l
304.718 3.33982 l
305.887 2.43801 l
307.056 1.74653 l
308.091 1.31732 l
309.126 1.06582 l
309.694 1.00524 l
310.261 1.00048 l
310.829 1.05226 l
311.397 1.16124 l
312.478 1.52909 l
313.559 2.11010 l
315.815 4.02014 l
317.887 6.61332 l
320.121 10.3096 l
322.443 15.1198 l
324.463 20.0850 l
326.646 26.2199 l
328.900 33.3417 l
331.106 41.0083 l
333.240 49.0063 l
335.609 58.4511 l
337.738 67.3430 l
340.012 77.1437 l
342.072 86.1933 l
344.324 96.1497 l
346.443 105.463 l
348.658 115.018 l
350.823 124.063 l
353.090 133.092 l
355.274 141.247 l
357.507 148.923 l
359.721 155.771 l
361.756 161.311 l
364.088 166.690 l
366.174 170.558 l
368.398 173.648 l
369.463 174.736 l
370.527 175.565 l
371.118 175.914 l
371.709 176.181 l
372.300 176.368 l
372.891 176.474 l
373.403 176.499 l
373.914 176.464 l
374.426 176.368 l
374.938 176.211 l
376.099 175.630 l
377.261 174.738 l
379.378 172.325 l
381.694 168.554 l
383.692 164.392 l
385.968 158.689 l
388.166 152.281 l
390.363 145.082 l
392.552 137.214 l
394.654 129.099 l
396.927 119.827 l
399.094 110.625 l
401.374 100.683 l
405.719 81.5031 l
407.904 71.9835 l
410.083 62.7254 l
412.360 53.4287 l
414.457 45.3037 l
416.604 37.5083 l
418.975 29.6163 l
421.122 23.1955 l
423.317 17.4055 l
425.550 12.3741 l
427.602 8.54473 l
429.790 5.32339 l
431.961 3.01313 l
433.122 2.13890 l
434.284 1.51380 l
434.796 1.31637 l
435.308 1.16645 l
435.821 1.06361 l
436.333 1.00746 l
436.924 1.00000 l
437.515 1.05322 l
438.106 1.16627 l
438.697 1.33822 l
439.764 1.79440 l
440.831 2.43281 l
442.943 4.20539 l
445.213 6.80673 l
447.492 10.0582 l
449.566 13.4921 l
451.769 17.5441 l
453.918 21.8082 l
456.248 26.6644 l
458.264 30.9703 l
460.580 35.9264 l
462.757 40.4943 l
464.913 44.8357 l
467.070 48.9111 l
469.270 52.7058 l
471.603 56.2431 l
473.742 58.9797 l
475.853 61.1528 l
478.109 62.8495 l
479.235 63.4428 l
480.361 63.8629 l
480.892 64.0003 l
481.423 64.0985 l
481.953 64.1575 l
482.484 64.1772 l
S
cliprestore
newpath
0 0 m
0 185.000 l
492.000 185.000 l
492.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
46.0000 64.0000 m
482.484 64.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
257 104 14 15 rc
newpath
263.278 110.255 m
263.486 110.475 263.642 110.695 263.748 110.915  c
263.824 111.067 263.949 111.467 264.123 112.115  c
264.681 111.277 l
264.829 111.074 265.009 110.880 265.221 110.696  c
265.432 110.512 265.619 110.386 265.779 110.318  c
265.881 110.276 265.993 110.255 266.116 110.255  c
266.298 110.255 266.443 110.304 266.551 110.401  c
266.658 110.498 266.712 110.617 266.712 110.756  c
266.712 110.917 266.681 111.027 266.617 111.086  c
266.499 111.192 266.363 111.245 266.211 111.245  c
266.122 111.245 266.027 111.226 265.925 111.188  c
265.726 111.120 265.593 111.086 265.525 111.086  c
265.424 111.086 265.303 111.146 265.164 111.264  c
264.901 111.484 264.588 111.910 264.224 112.540  c
264.745 114.724 l
264.825 115.058 264.893 115.258 264.948 115.324  c
265.003 115.389 265.058 115.422 265.113 115.422  c
265.202 115.422 265.305 115.373 265.424 115.276  c
265.657 115.081 265.856 114.827 266.021 114.514  c
266.243 114.628 l
265.976 115.128 265.638 115.543 265.227 115.873  c
264.994 116.059 264.798 116.152 264.637 116.152  c
264.400 116.152 264.211 116.019 264.072 115.752  c
263.983 115.587 263.799 114.876 263.520 113.619  c
262.859 114.766 262.330 115.504 261.933 115.835  c
261.675 116.046 261.425 116.152 261.184 116.152  c
261.014 116.152 260.860 116.091 260.720 115.968  c
260.619 115.875 260.568 115.750 260.568 115.593  c
260.568 115.454 260.614 115.337 260.708 115.244  c
260.801 115.151 260.915 115.105 261.050 115.105  c
261.186 115.105 261.330 115.172 261.482 115.308  c
261.592 115.405 261.677 115.454 261.736 115.454  c
261.787 115.454 261.852 115.420 261.933 115.352  c
262.132 115.191 262.402 114.844 262.745 114.311  c
263.088 113.778 263.312 113.393 263.418 113.156  c
263.156 112.127 263.014 111.584 262.993 111.524  c
262.895 111.249 262.768 111.055 262.612 110.940  c
262.455 110.826 262.225 110.769 261.920 110.769  c
261.823 110.769 261.710 110.773 261.584 110.782  c
261.584 110.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 185.000 l
492.000 185.000 l
492.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
101.000 64.0000 m
101.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
108.890 88.0370 m
108.890 88.2883 108.855 88.5440 108.786 88.8040  c
108.716 89.0640 108.617 89.2980 108.487 89.5060  c
108.357 89.7140 108.194 89.8830 107.999 90.0130  c
107.804 90.1430 107.581 90.2080 107.330 90.2080  c
107.087 90.2080 106.866 90.1040 106.667 89.8960  c
106.467 89.6880 106.307 89.3760 106.186 88.9600  c
106.168 88.8993 106.153 88.8213 106.140 88.7260  c
106.127 88.6306 106.116 88.5310 106.108 88.4270  c
106.099 88.3230 106.092 88.2211 106.088 88.1215  c
106.084 88.0218 106.082 87.9373 106.082 87.8680  c
106.082 87.3740 106.116 86.8670 106.186 86.3470  c
106.255 85.8270 106.311 85.3070 106.355 84.7870  c
104.886 84.7870 l
104.799 85.7576 104.712 86.5766 104.626 87.2440  c
104.539 87.9113 104.448 88.5093 104.353 89.0380  c
104.327 89.1766 104.301 89.3066 104.275 89.4280  c
104.249 89.5493 104.214 89.6533 104.171 89.7400  c
104.075 89.9393 103.958 90.0736 103.820 90.1430  c
103.681 90.2123 103.551 90.2470 103.430 90.2470  c
103.230 90.2470 103.066 90.1755 102.936 90.0325  c
102.806 89.8895 102.741 89.7356 102.741 89.5710  c
102.741 89.3890 102.788 89.2373 102.884 89.1160  c
102.979 88.9946 103.087 88.8603 103.209 88.7130  c
103.321 88.5830 103.427 88.4465 103.527 88.3035  c
103.627 88.1605 103.690 87.9806 103.716 87.7640  c
104.093 84.7870 l
103.482 84.7870 l
103.343 84.7870 103.191 84.8216 103.027 84.8910  c
102.862 84.9603 102.723 85.0730 102.611 85.2290  c
102.351 85.6060 l
102.130 85.6060 l
102.320 84.9993 102.559 84.5248 102.845 84.1825  c
103.131 83.8401 103.508 83.6690 103.976 83.6690  c
108.786 83.6690 l
108.786 84.7870 l
107.148 84.7870 l
107.122 85.0383 107.098 85.3026 107.076 85.5800  c
107.054 85.8573 107.037 86.1325 107.024 86.4055  c
107.011 86.6785 107.002 86.9363 106.998 87.1790  c
106.994 87.4216 106.992 87.6296 106.992 87.8030  c
106.992 87.9503 107.007 88.0955 107.037 88.2385  c
107.067 88.3815 107.117 88.5093 107.187 88.6220  c
107.256 88.7346 107.345 88.8278 107.453 88.9015  c
107.561 88.9751 107.694 89.0120 107.850 89.0120  c
107.945 89.0120 108.058 88.9773 108.188 88.9080  c
108.318 88.8386 108.422 88.7260 108.500 88.5700  c
108.534 88.5006 108.558 88.4205 108.571 88.3295  c
108.584 88.2385 108.595 88.1410 108.604 88.0370  c
h
f
newpath
108.049 103.826 m
108.049 104.727 l
106.894 104.727 l
106.894 107.000 l
105.846 107.000 l
105.846 104.727 l
102.203 104.727 l
102.203 103.915 l
106.195 98.2148 l
106.894 98.2148 l
106.894 103.826 l
h
105.846 103.826 m
105.846 99.5542 l
102.825 103.826 l
h
f
2 J
0 j
newpath
100.500 94.5000 m
111.500 94.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
155.000 64.0000 m
155.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
163.890 88.0370 m
163.890 88.2883 163.855 88.5440 163.786 88.8040  c
163.716 89.0640 163.617 89.2980 163.487 89.5060  c
163.357 89.7140 163.194 89.8830 162.999 90.0130  c
162.804 90.1430 162.581 90.2080 162.330 90.2080  c
162.087 90.2080 161.866 90.1040 161.667 89.8960  c
161.467 89.6880 161.307 89.3760 161.186 88.9600  c
161.168 88.8993 161.153 88.8213 161.140 88.7260  c
161.127 88.6306 161.116 88.5310 161.108 88.4270  c
161.099 88.3230 161.092 88.2211 161.088 88.1215  c
161.084 88.0218 161.082 87.9373 161.082 87.8680  c
161.082 87.3740 161.116 86.8670 161.186 86.3470  c
161.255 85.8270 161.311 85.3070 161.355 84.7870  c
159.886 84.7870 l
159.799 85.7576 159.712 86.5766 159.626 87.2440  c
159.539 87.9113 159.448 88.5093 159.353 89.0380  c
159.327 89.1766 159.301 89.3066 159.275 89.4280  c
159.249 89.5493 159.214 89.6533 159.171 89.7400  c
159.075 89.9393 158.958 90.0736 158.820 90.1430  c
158.681 90.2123 158.551 90.2470 158.430 90.2470  c
158.230 90.2470 158.066 90.1755 157.936 90.0325  c
157.806 89.8895 157.741 89.7356 157.741 89.5710  c
157.741 89.3890 157.788 89.2373 157.884 89.1160  c
157.979 88.9946 158.087 88.8603 158.209 88.7130  c
158.321 88.5830 158.427 88.4465 158.527 88.3035  c
158.627 88.1605 158.690 87.9806 158.716 87.7640  c
159.093 84.7870 l
158.482 84.7870 l
158.343 84.7870 158.191 84.8216 158.027 84.8910  c
157.862 84.9603 157.723 85.0730 157.611 85.2290  c
157.351 85.6060 l
157.130 85.6060 l
157.320 84.9993 157.559 84.5248 157.845 84.1825  c
158.131 83.8401 158.508 83.6690 158.976 83.6690  c
163.786 83.6690 l
163.786 84.7870 l
162.148 84.7870 l
162.122 85.0383 162.098 85.3026 162.076 85.5800  c
162.054 85.8573 162.037 86.1325 162.024 86.4055  c
162.011 86.6785 162.002 86.9363 161.998 87.1790  c
161.994 87.4216 161.992 87.6296 161.992 87.8030  c
161.992 87.9503 162.007 88.0955 162.037 88.2385  c
162.067 88.3815 162.117 88.5093 162.187 88.6220  c
162.256 88.7346 162.345 88.8278 162.453 88.9015  c
162.561 88.9751 162.694 89.0120 162.850 89.0120  c
162.945 89.0120 163.058 88.9773 163.188 88.9080  c
163.318 88.8386 163.422 88.7260 163.500 88.5700  c
163.534 88.5006 163.558 88.4205 163.571 88.3295  c
163.584 88.2385 163.595 88.1410 163.604 88.0370  c
h
f
newpath
162.960 105.343 m
162.357 107.000 l
157.279 107.000 l
157.279 106.765 l
158.773 105.402 159.824 104.289 160.434 103.426  c
161.043 102.563 161.348 101.773 161.348 101.058  c
161.348 100.512 161.181 100.064 160.846 99.7128  c
160.512 99.3616 160.112 99.1860 159.647 99.1860  c
159.223 99.1860 158.844 99.3098 158.507 99.5573  c
158.171 99.8049 157.922 100.167 157.761 100.646  c
157.526 100.646 l
157.632 99.8631 157.904 99.2622 158.342 98.8432  c
158.780 98.4243 159.327 98.2148 159.983 98.2148  c
160.681 98.2148 161.264 98.4391 161.732 98.8877  c
162.199 99.3362 162.433 99.8652 162.433 100.474  c
162.433 100.910 162.332 101.346 162.128 101.782  c
161.815 102.467 161.307 103.193 160.605 103.959  c
159.551 105.110 158.893 105.804 158.631 106.041  c
160.878 106.041 l
161.335 106.041 161.656 106.024 161.840 105.990  c
162.024 105.956 162.190 105.888 162.338 105.784  c
162.486 105.680 162.615 105.533 162.725 105.343  c
h
f
2 J
0 j
newpath
155.500 94.5000 m
166.500 94.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
210.000 64.0000 m
210.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
206.660 83.0302 m
206.905 82.4505 207.215 82.0030 207.590 81.6877  c
207.964 81.3724 208.431 81.2148 208.989 81.2148  c
209.679 81.2148 210.208 81.4391 210.576 81.8877  c
210.856 82.2220 210.995 82.5795 210.995 82.9604  c
210.995 83.5867 210.602 84.2342 209.814 84.9028  c
210.343 85.1101 210.743 85.4064 211.014 85.7915  c
211.285 86.1766 211.420 86.6293 211.420 87.1499  c
211.420 87.8946 211.183 88.5400 210.710 89.0859  c
210.092 89.7968 209.197 90.1523 208.024 90.1523  c
207.445 90.1523 207.050 90.0804 206.841 89.9365  c
206.631 89.7926 206.526 89.6381 206.526 89.4731  c
206.526 89.3504 206.576 89.2425 206.676 89.1494  c
206.775 89.0563 206.895 89.0097 207.034 89.0097  c
207.140 89.0097 207.248 89.0266 207.358 89.0605  c
207.430 89.0817 207.593 89.1589 207.847 89.2922  c
208.101 89.4255 208.276 89.5048 208.374 89.5302  c
208.530 89.5768 208.697 89.6001 208.875 89.6001  c
209.307 89.6001 209.682 89.4329 210.002 89.0986  c
210.321 88.7643 210.481 88.3686 210.481 87.9116  c
210.481 87.5773 210.407 87.2514 210.259 86.9340  c
210.149 86.6971 210.028 86.5172 209.897 86.3945  c
209.715 86.2252 209.465 86.0718 209.148 85.9343  c
208.831 85.7967 208.507 85.7280 208.177 85.7280  c
207.974 85.7280 l
207.974 85.5376 l
208.308 85.4952 208.643 85.3746 208.980 85.1757  c
209.316 84.9768 209.561 84.7377 209.713 84.4585  c
209.865 84.1792 209.941 83.8724 209.941 83.5380  c
209.941 83.1022 209.805 82.7499 209.532 82.4812  c
209.259 82.2124 208.919 82.0781 208.513 82.0781  c
207.857 82.0781 207.309 82.4293 206.869 83.1318  c
h
f
newpath
f
newpath
222.890 88.0370 m
222.890 88.2883 222.855 88.5440 222.786 88.8040  c
222.716 89.0640 222.617 89.2980 222.487 89.5060  c
222.357 89.7140 222.194 89.8830 221.999 90.0130  c
221.804 90.1430 221.581 90.2080 221.330 90.2080  c
221.087 90.2080 220.866 90.1040 220.667 89.8960  c
220.467 89.6880 220.307 89.3760 220.186 88.9600  c
220.168 88.8993 220.153 88.8213 220.140 88.7260  c
220.127 88.6306 220.116 88.5310 220.108 88.4270  c
220.099 88.3230 220.092 88.2211 220.088 88.1215  c
220.084 88.0218 220.082 87.9373 220.082 87.8680  c
220.082 87.3740 220.116 86.8670 220.186 86.3470  c
220.255 85.8270 220.311 85.3070 220.355 84.7870  c
218.886 84.7870 l
218.799 85.7576 218.712 86.5766 218.626 87.2440  c
218.539 87.9113 218.448 88.5093 218.353 89.0380  c
218.327 89.1766 218.301 89.3066 218.275 89.4280  c
218.249 89.5493 218.214 89.6533 218.171 89.7400  c
218.075 89.9393 217.958 90.0736 217.820 90.1430  c
217.681 90.2123 217.551 90.2470 217.430 90.2470  c
217.230 90.2470 217.066 90.1755 216.936 90.0325  c
216.806 89.8895 216.741 89.7356 216.741 89.5710  c
216.741 89.3890 216.788 89.2373 216.884 89.1160  c
216.979 88.9946 217.087 88.8603 217.209 88.7130  c
217.321 88.5830 217.427 88.4465 217.527 88.3035  c
217.627 88.1605 217.690 87.9806 217.716 87.7640  c
218.093 84.7870 l
217.482 84.7870 l
217.343 84.7870 217.191 84.8216 217.027 84.8910  c
216.862 84.9603 216.723 85.0730 216.611 85.2290  c
216.351 85.6060 l
216.130 85.6060 l
216.320 84.9993 216.559 84.5248 216.845 84.1825  c
217.131 83.8401 217.508 83.6690 217.976 83.6690  c
222.786 83.6690 l
222.786 84.7870 l
221.148 84.7870 l
221.122 85.0383 221.098 85.3026 221.076 85.5800  c
221.054 85.8573 221.037 86.1325 221.024 86.4055  c
221.011 86.6785 221.002 86.9363 220.998 87.1790  c
220.994 87.4216 220.992 87.6296 220.992 87.8030  c
220.992 87.9503 221.007 88.0955 221.037 88.2385  c
221.067 88.3815 221.117 88.5093 221.187 88.6220  c
221.256 88.7346 221.345 88.8278 221.453 88.9015  c
221.561 88.9751 221.694 89.0120 221.850 89.0120  c
221.945 89.0120 222.058 88.9773 222.188 88.9080  c
222.318 88.8386 222.422 88.7260 222.500 88.5700  c
222.534 88.5006 222.558 88.4205 222.571 88.3295  c
222.584 88.2385 222.595 88.1410 222.604 88.0370  c
h
f
newpath
217.049 103.826 m
217.049 104.727 l
215.894 104.727 l
215.894 107.000 l
214.846 107.000 l
214.846 104.727 l
211.203 104.727 l
211.203 103.915 l
215.195 98.2148 l
215.894 98.2148 l
215.894 103.826 l
h
214.846 103.826 m
214.846 99.5542 l
211.825 103.826 l
h
f
2 J
0 j
newpath
204.500 94.5000 m
225.500 94.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
264.000 64.0000 m
264.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
272.890 88.0370 m
272.890 88.2883 272.855 88.5440 272.786 88.8040  c
272.716 89.0640 272.617 89.2980 272.487 89.5060  c
272.357 89.7140 272.194 89.8830 271.999 90.0130  c
271.804 90.1430 271.581 90.2080 271.330 90.2080  c
271.087 90.2080 270.866 90.1040 270.667 89.8960  c
270.467 89.6880 270.307 89.3760 270.186 88.9600  c
270.168 88.8993 270.153 88.8213 270.140 88.7260  c
270.127 88.6306 270.116 88.5310 270.108 88.4270  c
270.099 88.3230 270.092 88.2211 270.088 88.1215  c
270.084 88.0218 270.082 87.9373 270.082 87.8680  c
270.082 87.3740 270.116 86.8670 270.186 86.3470  c
270.255 85.8270 270.311 85.3070 270.355 84.7870  c
268.886 84.7870 l
268.799 85.7576 268.712 86.5766 268.626 87.2440  c
268.539 87.9113 268.448 88.5093 268.353 89.0380  c
268.327 89.1766 268.301 89.3066 268.275 89.4280  c
268.249 89.5493 268.214 89.6533 268.171 89.7400  c
268.075 89.9393 267.958 90.0736 267.820 90.1430  c
267.681 90.2123 267.551 90.2470 267.430 90.2470  c
267.230 90.2470 267.066 90.1755 266.936 90.0325  c
266.806 89.8895 266.741 89.7356 266.741 89.5710  c
266.741 89.3890 266.788 89.2373 266.884 89.1160  c
266.979 88.9946 267.087 88.8603 267.209 88.7130  c
267.321 88.5830 267.427 88.4465 267.527 88.3035  c
267.627 88.1605 267.690 87.9806 267.716 87.7640  c
268.093 84.7870 l
267.482 84.7870 l
267.343 84.7870 267.191 84.8216 267.027 84.8910  c
266.862 84.9603 266.723 85.0730 266.611 85.2290  c
266.351 85.6060 l
266.130 85.6060 l
266.320 84.9993 266.559 84.5248 266.845 84.1825  c
267.131 83.8401 267.508 83.6690 267.976 83.6690  c
272.786 83.6690 l
272.786 84.7870 l
271.148 84.7870 l
271.122 85.0383 271.098 85.3026 271.076 85.5800  c
271.054 85.8573 271.037 86.1325 271.024 86.4055  c
271.011 86.6785 271.002 86.9363 270.998 87.1790  c
270.994 87.4216 270.992 87.6296 270.992 87.8030  c
270.992 87.9503 271.007 88.0955 271.037 88.2385  c
271.067 88.3815 271.117 88.5093 271.187 88.6220  c
271.256 88.7346 271.345 88.8278 271.453 88.9015  c
271.561 88.9751 271.694 89.0120 271.850 89.0120  c
271.945 89.0120 272.058 88.9773 272.188 88.9080  c
272.318 88.8386 272.422 88.7260 272.500 88.5700  c
272.534 88.5006 272.558 88.4205 272.571 88.3295  c
272.584 88.2385 272.595 88.1410 272.604 88.0370  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
319.000 64.0000 m
319.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
320.643 81.3925 m
320.147 82.4716 l
317.558 82.4716 l
316.993 83.6269 l
318.114 83.7919 319.003 84.2088 319.659 84.8774  c
320.222 85.4529 320.503 86.1300 320.503 86.9086  c
320.503 87.3614 320.411 87.7804 320.227 88.1655  c
320.043 88.5506 319.811 88.8785 319.532 89.1494  c
319.252 89.4202 318.941 89.6381 318.599 89.8032  c
318.112 90.0359 317.613 90.1523 317.101 90.1523  c
316.584 90.1523 316.209 90.0645 315.974 89.8889  c
315.739 89.7133 315.622 89.5196 315.622 89.3081  c
315.622 89.1896 315.670 89.0848 315.768 88.9939  c
315.865 88.9029 315.988 88.8574 316.136 88.8574  c
316.246 88.8574 316.342 88.8743 316.425 88.9082  c
316.507 88.9420 316.648 89.0288 316.847 89.1684  c
317.164 89.3885 317.486 89.4985 317.812 89.4985  c
318.307 89.4985 318.741 89.3112 319.116 88.9367  c
319.491 88.5622 319.678 88.1062 319.678 87.5688  c
319.678 87.0483 319.511 86.5627 319.176 86.1120  c
318.842 85.6613 318.381 85.3133 317.793 85.0678  c
317.331 84.8774 316.703 84.7674 315.907 84.7377  c
317.558 81.3925 l
h
f
newpath
f
newpath
331.890 88.0370 m
331.890 88.2883 331.855 88.5440 331.786 88.8040  c
331.716 89.0640 331.617 89.2980 331.487 89.5060  c
331.357 89.7140 331.194 89.8830 330.999 90.0130  c
330.804 90.1430 330.581 90.2080 330.330 90.2080  c
330.087 90.2080 329.866 90.1040 329.667 89.8960  c
329.467 89.6880 329.307 89.3760 329.186 88.9600  c
329.168 88.8993 329.153 88.8213 329.140 88.7260  c
329.127 88.6306 329.116 88.5310 329.108 88.4270  c
329.099 88.3230 329.092 88.2211 329.088 88.1215  c
329.084 88.0218 329.082 87.9373 329.082 87.8680  c
329.082 87.3740 329.116 86.8670 329.186 86.3470  c
329.255 85.8270 329.311 85.3070 329.355 84.7870  c
327.886 84.7870 l
327.799 85.7576 327.712 86.5766 327.626 87.2440  c
327.539 87.9113 327.448 88.5093 327.353 89.0380  c
327.327 89.1766 327.301 89.3066 327.275 89.4280  c
327.249 89.5493 327.214 89.6533 327.171 89.7400  c
327.075 89.9393 326.958 90.0736 326.820 90.1430  c
326.681 90.2123 326.551 90.2470 326.430 90.2470  c
326.230 90.2470 326.066 90.1755 325.936 90.0325  c
325.806 89.8895 325.741 89.7356 325.741 89.5710  c
325.741 89.3890 325.788 89.2373 325.884 89.1160  c
325.979 88.9946 326.087 88.8603 326.209 88.7130  c
326.321 88.5830 326.427 88.4465 326.527 88.3035  c
326.627 88.1605 326.690 87.9806 326.716 87.7640  c
327.093 84.7870 l
326.482 84.7870 l
326.343 84.7870 326.191 84.8216 326.027 84.8910  c
325.862 84.9603 325.723 85.0730 325.611 85.2290  c
325.351 85.6060 l
325.130 85.6060 l
325.320 84.9993 325.559 84.5248 325.845 84.1825  c
326.131 83.8401 326.508 83.6690 326.976 83.6690  c
331.786 83.6690 l
331.786 84.7870 l
330.148 84.7870 l
330.122 85.0383 330.098 85.3026 330.076 85.5800  c
330.054 85.8573 330.037 86.1325 330.024 86.4055  c
330.011 86.6785 330.002 86.9363 329.998 87.1790  c
329.994 87.4216 329.992 87.6296 329.992 87.8030  c
329.992 87.9503 330.007 88.0955 330.037 88.2385  c
330.067 88.3815 330.117 88.5093 330.187 88.6220  c
330.256 88.7346 330.345 88.8278 330.453 88.9015  c
330.561 88.9751 330.694 89.0120 330.850 89.0120  c
330.945 89.0120 331.058 88.9773 331.188 88.9080  c
331.318 88.8386 331.422 88.7260 331.500 88.5700  c
331.534 88.5006 331.558 88.4205 331.571 88.3295  c
331.584 88.2385 331.595 88.1410 331.604 88.0370  c
h
f
newpath
326.049 103.826 m
326.049 104.727 l
324.894 104.727 l
324.894 107.000 l
323.846 107.000 l
323.846 104.727 l
320.203 104.727 l
320.203 103.915 l
324.195 98.2148 l
324.894 98.2148 l
324.894 103.826 l
h
323.846 103.826 m
323.846 99.5542 l
320.825 103.826 l
h
f
2 J
0 j
newpath
313.500 94.5000 m
334.500 94.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
373.000 64.0000 m
373.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
370.660 83.0302 m
370.905 82.4505 371.215 82.0030 371.590 81.6877  c
371.964 81.3724 372.431 81.2148 372.989 81.2148  c
373.679 81.2148 374.208 81.4391 374.576 81.8877  c
374.856 82.2220 374.995 82.5795 374.995 82.9604  c
374.995 83.5867 374.602 84.2342 373.814 84.9028  c
374.343 85.1101 374.743 85.4064 375.014 85.7915  c
375.285 86.1766 375.420 86.6293 375.420 87.1499  c
375.420 87.8946 375.183 88.5400 374.710 89.0859  c
374.092 89.7968 373.197 90.1523 372.024 90.1523  c
371.445 90.1523 371.050 90.0804 370.841 89.9365  c
370.631 89.7926 370.526 89.6381 370.526 89.4731  c
370.526 89.3504 370.576 89.2425 370.676 89.1494  c
370.775 89.0563 370.895 89.0097 371.034 89.0097  c
371.140 89.0097 371.248 89.0266 371.358 89.0605  c
371.430 89.0817 371.593 89.1589 371.847 89.2922  c
372.101 89.4255 372.276 89.5048 372.374 89.5302  c
372.530 89.5768 372.697 89.6001 372.875 89.6001  c
373.307 89.6001 373.682 89.4329 374.002 89.0986  c
374.321 88.7643 374.481 88.3686 374.481 87.9116  c
374.481 87.5773 374.407 87.2514 374.259 86.9340  c
374.149 86.6971 374.028 86.5172 373.897 86.3945  c
373.715 86.2252 373.465 86.0718 373.148 85.9343  c
372.831 85.7967 372.507 85.7280 372.177 85.7280  c
371.974 85.7280 l
371.974 85.5376 l
372.308 85.4952 372.643 85.3746 372.980 85.1757  c
373.316 84.9768 373.561 84.7377 373.713 84.4585  c
373.865 84.1792 373.941 83.8724 373.941 83.5380  c
373.941 83.1022 373.805 82.7499 373.532 82.4812  c
373.259 82.2124 372.919 82.0781 372.513 82.0781  c
371.857 82.0781 371.309 82.4293 370.869 83.1318  c
h
f
newpath
f
newpath
386.890 88.0370 m
386.890 88.2883 386.855 88.5440 386.786 88.8040  c
386.716 89.0640 386.617 89.2980 386.487 89.5060  c
386.357 89.7140 386.194 89.8830 385.999 90.0130  c
385.804 90.1430 385.581 90.2080 385.330 90.2080  c
385.087 90.2080 384.866 90.1040 384.667 89.8960  c
384.467 89.6880 384.307 89.3760 384.186 88.9600  c
384.168 88.8993 384.153 88.8213 384.140 88.7260  c
384.127 88.6306 384.116 88.5310 384.108 88.4270  c
384.099 88.3230 384.092 88.2211 384.088 88.1215  c
384.084 88.0218 384.082 87.9373 384.082 87.8680  c
384.082 87.3740 384.116 86.8670 384.186 86.3470  c
384.255 85.8270 384.311 85.3070 384.355 84.7870  c
382.886 84.7870 l
382.799 85.7576 382.712 86.5766 382.626 87.2440  c
382.539 87.9113 382.448 88.5093 382.353 89.0380  c
382.327 89.1766 382.301 89.3066 382.275 89.4280  c
382.249 89.5493 382.214 89.6533 382.171 89.7400  c
382.075 89.9393 381.958 90.0736 381.820 90.1430  c
381.681 90.2123 381.551 90.2470 381.430 90.2470  c
381.230 90.2470 381.066 90.1755 380.936 90.0325  c
380.806 89.8895 380.741 89.7356 380.741 89.5710  c
380.741 89.3890 380.788 89.2373 380.884 89.1160  c
380.979 88.9946 381.087 88.8603 381.209 88.7130  c
381.321 88.5830 381.427 88.4465 381.527 88.3035  c
381.627 88.1605 381.690 87.9806 381.716 87.7640  c
382.093 84.7870 l
381.482 84.7870 l
381.343 84.7870 381.191 84.8216 381.027 84.8910  c
380.862 84.9603 380.723 85.0730 380.611 85.2290  c
380.351 85.6060 l
380.130 85.6060 l
380.320 84.9993 380.559 84.5248 380.845 84.1825  c
381.131 83.8401 381.508 83.6690 381.976 83.6690  c
386.786 83.6690 l
386.786 84.7870 l
385.148 84.7870 l
385.122 85.0383 385.098 85.3026 385.076 85.5800  c
385.054 85.8573 385.037 86.1325 385.024 86.4055  c
385.011 86.6785 385.002 86.9363 384.998 87.1790  c
384.994 87.4216 384.992 87.6296 384.992 87.8030  c
384.992 87.9503 385.007 88.0955 385.037 88.2385  c
385.067 88.3815 385.117 88.5093 385.187 88.6220  c
385.256 88.7346 385.345 88.8278 385.453 88.9015  c
385.561 88.9751 385.694 89.0120 385.850 89.0120  c
385.945 89.0120 386.058 88.9773 386.188 88.9080  c
386.318 88.8386 386.422 88.7260 386.500 88.5700  c
386.534 88.5006 386.558 88.4205 386.571 88.3295  c
386.584 88.2385 386.595 88.1410 386.604 88.0370  c
h
f
newpath
380.960 105.343 m
380.357 107.000 l
375.279 107.000 l
375.279 106.765 l
376.773 105.402 377.824 104.289 378.434 103.426  c
379.043 102.563 379.348 101.773 379.348 101.058  c
379.348 100.512 379.181 100.064 378.846 99.7128  c
378.512 99.3616 378.112 99.1860 377.647 99.1860  c
377.223 99.1860 376.844 99.3098 376.507 99.5573  c
376.171 99.8049 375.922 100.167 375.761 100.646  c
375.526 100.646 l
375.632 99.8631 375.904 99.2622 376.342 98.8432  c
376.780 98.4243 377.327 98.2148 377.983 98.2148  c
378.681 98.2148 379.264 98.4391 379.732 98.8877  c
380.199 99.3362 380.433 99.8652 380.433 100.474  c
380.433 100.910 380.332 101.346 380.128 101.782  c
379.815 102.467 379.307 103.193 378.605 103.959  c
377.551 105.110 376.893 105.804 376.631 106.041  c
378.878 106.041 l
379.335 106.041 379.656 106.024 379.840 105.990  c
380.024 105.956 380.190 105.888 380.338 105.784  c
380.486 105.680 380.615 105.533 380.725 105.343  c
h
f
2 J
0 j
newpath
368.500 94.5000 m
389.500 94.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
428.000 64.0000 m
428.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
425.307 81.3925 m
429.922 81.3925 l
429.922 81.6337 l
427.053 90.1777 l
426.342 90.1777 l
428.913 82.4272 l
426.545 82.4272 l
426.067 82.4272 425.726 82.4843 425.523 82.5986  c
425.168 82.7932 424.882 83.0937 424.666 83.5000  c
424.482 83.4301 l
h
f
newpath
f
newpath
440.890 88.0370 m
440.890 88.2883 440.855 88.5440 440.786 88.8040  c
440.716 89.0640 440.617 89.2980 440.487 89.5060  c
440.357 89.7140 440.194 89.8830 439.999 90.0130  c
439.804 90.1430 439.581 90.2080 439.330 90.2080  c
439.087 90.2080 438.866 90.1040 438.667 89.8960  c
438.467 89.6880 438.307 89.3760 438.186 88.9600  c
438.168 88.8993 438.153 88.8213 438.140 88.7260  c
438.127 88.6306 438.116 88.5310 438.108 88.4270  c
438.099 88.3230 438.092 88.2211 438.088 88.1215  c
438.084 88.0218 438.082 87.9373 438.082 87.8680  c
438.082 87.3740 438.116 86.8670 438.186 86.3470  c
438.255 85.8270 438.311 85.3070 438.355 84.7870  c
436.886 84.7870 l
436.799 85.7576 436.712 86.5766 436.626 87.2440  c
436.539 87.9113 436.448 88.5093 436.353 89.0380  c
436.327 89.1766 436.301 89.3066 436.275 89.4280  c
436.249 89.5493 436.214 89.6533 436.171 89.7400  c
436.075 89.9393 435.958 90.0736 435.820 90.1430  c
435.681 90.2123 435.551 90.2470 435.430 90.2470  c
435.230 90.2470 435.066 90.1755 434.936 90.0325  c
434.806 89.8895 434.741 89.7356 434.741 89.5710  c
434.741 89.3890 434.788 89.2373 434.884 89.1160  c
434.979 88.9946 435.087 88.8603 435.209 88.7130  c
435.321 88.5830 435.427 88.4465 435.527 88.3035  c
435.627 88.1605 435.690 87.9806 435.716 87.7640  c
436.093 84.7870 l
435.482 84.7870 l
435.343 84.7870 435.191 84.8216 435.027 84.8910  c
434.862 84.9603 434.723 85.0730 434.611 85.2290  c
434.351 85.6060 l
434.130 85.6060 l
434.320 84.9993 434.559 84.5248 434.845 84.1825  c
435.131 83.8401 435.508 83.6690 435.976 83.6690  c
440.786 83.6690 l
440.786 84.7870 l
439.148 84.7870 l
439.122 85.0383 439.098 85.3026 439.076 85.5800  c
439.054 85.8573 439.037 86.1325 439.024 86.4055  c
439.011 86.6785 439.002 86.9363 438.998 87.1790  c
438.994 87.4216 438.992 87.6296 438.992 87.8030  c
438.992 87.9503 439.007 88.0955 439.037 88.2385  c
439.067 88.3815 439.117 88.5093 439.187 88.6220  c
439.256 88.7346 439.345 88.8278 439.453 88.9015  c
439.561 88.9751 439.694 89.0120 439.850 89.0120  c
439.945 89.0120 440.058 88.9773 440.188 88.9080  c
440.318 88.8386 440.422 88.7260 440.500 88.5700  c
440.534 88.5006 440.558 88.4205 440.571 88.3295  c
440.584 88.2385 440.595 88.1410 440.604 88.0370  c
h
f
newpath
435.049 103.826 m
435.049 104.727 l
433.894 104.727 l
433.894 107.000 l
432.846 107.000 l
432.846 104.727 l
429.203 104.727 l
429.203 103.915 l
433.195 98.2148 l
433.894 98.2148 l
433.894 103.826 l
h
432.846 103.826 m
432.846 99.5542 l
429.825 103.826 l
h
f
2 J
0 j
newpath
422.500 94.5000 m
443.500 94.5000 l
S
0 J
1 j
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
482.000 64.0000 m
482.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
484.960 88.3432 m
484.357 90.0000 l
479.279 90.0000 l
479.279 89.7651 l
480.773 88.4025 481.824 87.2895 482.434 86.4262  c
483.043 85.5629 483.348 84.7737 483.348 84.0585  c
483.348 83.5127 483.181 83.0641 482.846 82.7128  c
482.512 82.3616 482.112 82.1860 481.647 82.1860  c
481.223 82.1860 480.844 82.3098 480.507 82.5573  c
480.171 82.8049 479.922 83.1678 479.761 83.6460  c
479.526 83.6460 l
479.632 82.8631 479.904 82.2622 480.342 81.8432  c
480.780 81.4243 481.327 81.2148 481.983 81.2148  c
482.681 81.2148 483.264 81.4391 483.732 81.8877  c
484.199 82.3362 484.433 82.8652 484.433 83.4746  c
484.433 83.9104 484.332 84.3463 484.128 84.7822  c
483.815 85.4677 483.307 86.1935 482.605 86.9594  c
481.551 88.1105 480.893 88.8045 480.631 89.0415  c
482.878 89.0415 l
483.335 89.0415 483.656 89.0245 483.840 88.9907  c
484.024 88.9568 484.190 88.8881 484.338 88.7844  c
484.486 88.6807 484.615 88.5336 484.725 88.3432  c
h
f
newpath
f
newpath
495.890 88.0370 m
495.890 88.2883 495.855 88.5440 495.786 88.8040  c
495.716 89.0640 495.617 89.2980 495.487 89.5060  c
495.357 89.7140 495.194 89.8830 494.999 90.0130  c
494.804 90.1430 494.581 90.2080 494.330 90.2080  c
494.087 90.2080 493.866 90.1040 493.667 89.8960  c
493.467 89.6880 493.307 89.3760 493.186 88.9600  c
493.168 88.8993 493.153 88.8213 493.140 88.7260  c
493.127 88.6306 493.116 88.5310 493.108 88.4270  c
493.099 88.3230 493.092 88.2211 493.088 88.1215  c
493.084 88.0218 493.082 87.9373 493.082 87.8680  c
493.082 87.3740 493.116 86.8670 493.186 86.3470  c
493.255 85.8270 493.311 85.3070 493.355 84.7870  c
491.886 84.7870 l
491.799 85.7576 491.712 86.5766 491.626 87.2440  c
491.539 87.9113 491.448 88.5093 491.353 89.0380  c
491.327 89.1766 491.301 89.3066 491.275 89.4280  c
491.249 89.5493 491.214 89.6533 491.171 89.7400  c
491.075 89.9393 490.958 90.0736 490.820 90.1430  c
490.681 90.2123 490.551 90.2470 490.430 90.2470  c
490.230 90.2470 490.066 90.1755 489.936 90.0325  c
489.806 89.8895 489.741 89.7356 489.741 89.5710  c
489.741 89.3890 489.788 89.2373 489.884 89.1160  c
489.979 88.9946 490.087 88.8603 490.209 88.7130  c
490.321 88.5830 490.427 88.4465 490.527 88.3035  c
490.627 88.1605 490.690 87.9806 490.716 87.7640  c
491.093 84.7870 l
490.482 84.7870 l
490.343 84.7870 490.191 84.8216 490.027 84.8910  c
489.862 84.9603 489.723 85.0730 489.611 85.2290  c
489.351 85.6060 l
489.130 85.6060 l
489.320 84.9993 489.559 84.5248 489.845 84.1825  c
490.131 83.8401 490.508 83.6690 490.976 83.6690  c
495.786 83.6690 l
495.786 84.7870 l
494.148 84.7870 l
494.122 85.0383 494.098 85.3026 494.076 85.5800  c
494.054 85.8573 494.037 86.1325 494.024 86.4055  c
494.011 86.6785 494.002 86.9363 493.998 87.1790  c
493.994 87.4216 493.992 87.6296 493.992 87.8030  c
493.992 87.9503 494.007 88.0955 494.037 88.2385  c
494.067 88.3815 494.117 88.5093 494.187 88.6220  c
494.256 88.7346 494.345 88.8278 494.453 88.9015  c
494.561 88.9751 494.694 89.0120 494.850 89.0120  c
494.945 89.0120 495.058 88.9773 495.188 88.9080  c
495.318 88.8386 495.422 88.7260 495.500 88.5700  c
495.534 88.5006 495.558 88.4205 495.571 88.3295  c
495.584 88.2385 495.595 88.1410 495.604 88.0370  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
60.0000 64.0000 m
60.0000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
73.0000 64.0000 m
73.0000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
87.0000 64.0000 m
87.0000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
114.000 64.0000 m
114.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
128.000 64.0000 m
128.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
141.000 64.0000 m
141.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
169.000 64.0000 m
169.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
182.000 64.0000 m
182.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
196.000 64.0000 m
196.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
223.000 64.0000 m
223.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
237.000 64.0000 m
237.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
251.000 64.0000 m
251.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
278.000 64.0000 m
278.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
292.000 64.0000 m
292.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
305.000 64.0000 m
305.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
332.000 64.0000 m
332.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
346.000 64.0000 m
346.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
360.000 64.0000 m
360.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
387.000 64.0000 m
387.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
401.000 64.0000 m
401.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
414.000 64.0000 m
414.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
442.000 64.0000 m
442.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
455.000 64.0000 m
455.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
469.000 64.0000 m
469.000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
46.0000 176.499 m
46.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 113 8 15 rc
Q
cliprestore
newpath
0 0 m
0 185.000 l
492.000 185.000 l
492.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
46.0000 176.000 m
41.0000 176.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
27 175 7 13 rc
newpath
37.7900 182.438 m
29.2100 182.438 l
29.2100 181.762 l
37.7900 181.762 l
h
f
Q
newpath
37.5234 178.236 m
39.6181 177.214 l
39.8276 177.214 l
39.8276 184.482 l
39.8276 184.965 39.8477 185.265 39.8879 185.384  c
39.9281 185.502 40.0117 185.593 40.1386 185.657  c
40.2656 185.720 40.5237 185.756 40.9130 185.765  c
40.9130 186.000 l
37.6757 186.000 l
37.6757 185.765 l
38.0820 185.756 38.3444 185.721 38.4628 185.660  c
38.5813 185.599 38.6639 185.516 38.7104 185.412  c
38.7570 185.309 38.7802 184.999 38.7802 184.482  c
38.7802 179.836 l
38.7802 179.210 38.7591 178.808 38.7168 178.630  c
38.6871 178.495 38.6332 178.395 38.5549 178.332  c
38.4766 178.268 38.3824 178.236 38.2724 178.236  c
38.1158 178.236 37.8979 178.302 37.6186 178.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 120.000 m
41.0000 120.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
17 119 7 13 rc
newpath
27.7900 126.438 m
19.2100 126.438 l
19.2100 125.762 l
27.7900 125.762 l
h
f
Q
newpath
26.4697 125.747 m
26.4697 124.765 26.6178 123.920 26.9140 123.211  c
27.2102 122.502 27.6038 121.974 28.0947 121.627  c
28.4755 121.352 28.8691 121.214 29.2753 121.214  c
29.9355 121.214 30.5279 121.551 31.0527 122.224  c
31.7086 123.057 32.0366 124.187 32.0366 125.613  c
32.0366 126.612 31.8927 127.460 31.6049 128.159  c
31.3172 128.857 30.9501 129.364 30.5036 129.679  c
30.0572 129.994 29.6266 130.152 29.2119 130.152  c
28.3909 130.152 27.7075 129.667 27.1616 128.698  c
26.7003 127.882 26.4697 126.898 26.4697 125.747  c
h
27.7138 125.905 m
27.7138 127.090 27.8598 128.057 28.1518 128.806  c
28.3930 129.437 28.7527 129.752 29.2309 129.752  c
29.4594 129.752 29.6964 129.649 29.9418 129.444  c
30.1873 129.239 30.3735 128.895 30.5004 128.413  c
30.6951 127.685 30.7924 126.659 30.7924 125.334  c
30.7924 124.352 30.6909 123.533 30.4877 122.877  c
30.3354 122.391 30.1386 122.046 29.8974 121.843  c
29.7239 121.703 29.5144 121.633 29.2690 121.633  c
28.9812 121.633 28.7252 121.762 28.5009 122.021  c
28.1962 122.372 27.9889 122.924 27.8789 123.677  c
27.7688 124.431 27.7138 125.173 27.7138 125.905  c
h
34.6250 128.768 m
34.8238 128.768 34.9910 128.837 35.1264 128.974  c
35.2618 129.112 35.3295 129.278 35.3295 129.473  c
35.3295 129.667 35.2608 129.833 35.1232 129.971  c
34.9857 130.109 34.8196 130.177 34.6250 130.177  c
34.4303 130.177 34.2642 130.109 34.1267 129.971  c
33.9891 129.833 33.9204 129.667 33.9204 129.473  c
33.9204 129.274 33.9891 129.107 34.1267 128.971  c
34.2642 128.836 34.4303 128.768 34.6250 128.768  c
h
41.6430 121.392 m
41.1479 122.471 l
38.5581 122.471 l
37.9931 123.627 l
39.1145 123.792 40.0032 124.208 40.6591 124.877  c
41.2220 125.453 41.5034 126.130 41.5034 126.908  c
41.5034 127.361 41.4113 127.780 41.2272 128.165  c
41.0432 128.550 40.8115 128.878 40.5322 129.149  c
40.2529 129.420 39.9418 129.638 39.5991 129.803  c
39.1124 130.036 38.6131 130.152 38.1010 130.152  c
37.5848 130.152 37.2092 130.064 36.9743 129.888  c
36.7395 129.713 36.6220 129.519 36.6220 129.308  c
36.6220 129.189 36.6707 129.084 36.7680 128.993  c
36.8654 128.902 36.9881 128.857 37.1362 128.857  c
37.2462 128.857 37.3425 128.874 37.4250 128.908  c
37.5075 128.942 37.6482 129.028 37.8471 129.168  c
38.1645 129.388 38.4861 129.498 38.8120 129.498  c
39.3071 129.498 39.7419 129.311 40.1164 128.936  c
40.4909 128.562 40.6782 128.106 40.6782 127.568  c
40.6782 127.048 40.5110 126.562 40.1767 126.112  c
39.8424 125.661 39.3811 125.313 38.7929 125.067  c
38.3317 124.877 37.7032 124.767 36.9077 124.737  c
38.5581 121.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 64.0000 m
41.0000 64.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
36.4697 69.7470 m
36.4697 68.7653 36.6178 67.9200 36.9140 67.2111  c
37.2102 66.5023 37.6038 65.9744 38.0947 65.6274  c
38.4755 65.3523 38.8691 65.2148 39.2753 65.2148  c
39.9355 65.2148 40.5279 65.5512 41.0527 66.2241  c
41.7086 67.0577 42.0366 68.1876 42.0366 69.6137  c
42.0366 70.6124 41.8927 71.4609 41.6049 72.1591  c
41.3172 72.8574 40.9501 73.3641 40.5036 73.6794  c
40.0572 73.9947 39.6266 74.1523 39.2119 74.1523  c
38.3909 74.1523 37.7075 73.6678 37.1616 72.6987  c
36.7003 71.8820 36.4697 70.8981 36.4697 69.7470  c
h
37.7138 69.9057 m
37.7138 71.0906 37.8598 72.0576 38.1518 72.8066  c
38.3930 73.4371 38.7527 73.7524 39.2309 73.7524  c
39.4594 73.7524 39.6964 73.6498 39.9418 73.4445  c
40.1873 73.2393 40.3735 72.8955 40.5004 72.4130  c
40.6951 71.6852 40.7924 70.6590 40.7924 69.3344  c
40.7924 68.3527 40.6909 67.5338 40.4877 66.8779  c
40.3354 66.3912 40.1386 66.0463 39.8974 65.8432  c
39.7239 65.7036 39.5144 65.6337 39.2690 65.6337  c
38.9812 65.6337 38.7252 65.7628 38.5009 66.0210  c
38.1962 66.3722 37.9889 66.9244 37.8789 67.6777  c
37.7688 68.4309 37.7138 69.1736 37.7138 69.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 8.00000 m
41.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
26.4697 13.7470 m
26.4697 12.7653 26.6178 11.9200 26.9140 11.2111  c
27.2102 10.5023 27.6038 9.97444 28.0947 9.62744  c
28.4755 9.35237 28.8691 9.21484 29.2753 9.21484  c
29.9355 9.21484 30.5279 9.55127 31.0527 10.2241  c
31.7086 11.0577 32.0366 12.1876 32.0366 13.6137  c
32.0366 14.6124 31.8927 15.4609 31.6049 16.1591  c
31.3172 16.8574 30.9501 17.3641 30.5036 17.6794  c
30.0572 17.9947 29.6266 18.1523 29.2119 18.1523  c
28.3909 18.1523 27.7075 17.6678 27.1616 16.6987  c
26.7003 15.8820 26.4697 14.8981 26.4697 13.7470  c
h
27.7138 13.9057 m
27.7138 15.0906 27.8598 16.0576 28.1518 16.8066  c
28.3930 17.4371 28.7527 17.7524 29.2309 17.7524  c
29.4594 17.7524 29.6964 17.6498 29.9418 17.4445  c
30.1873 17.2393 30.3735 16.8955 30.5004 16.4130  c
30.6951 15.6852 30.7924 14.6590 30.7924 13.3344  c
30.7924 12.3527 30.6909 11.5338 30.4877 10.8779  c
30.3354 10.3912 30.1386 10.0463 29.8974 9.84326  c
29.7239 9.70361 29.5144 9.63378 29.2690 9.63378  c
28.9812 9.63378 28.7252 9.76285 28.5009 10.0210  c
28.1962 10.3722 27.9889 10.9244 27.8789 11.6777  c
27.7688 12.4309 27.7138 13.1736 27.7138 13.9057  c
h
34.6250 16.7685 m
34.8238 16.7685 34.9910 16.8373 35.1264 16.9748  c
35.2618 17.1123 35.3295 17.2784 35.3295 17.4731  c
35.3295 17.6678 35.2608 17.8339 35.1232 17.9714  c
34.9857 18.1089 34.8196 18.1777 34.6250 18.1777  c
34.4303 18.1777 34.2642 18.1089 34.1267 17.9714  c
33.9891 17.8339 33.9204 17.6678 33.9204 17.4731  c
33.9204 17.2742 33.9891 17.1071 34.1267 16.9716  c
34.2642 16.8362 34.4303 16.7685 34.6250 16.7685  c
h
41.6430 9.39257 m
41.1479 10.4716 l
38.5581 10.4716 l
37.9931 11.6269 l
39.1145 11.7919 40.0032 12.2088 40.6591 12.8774  c
41.2220 13.4529 41.5034 14.1300 41.5034 14.9086  c
41.5034 15.3614 41.4113 15.7804 41.2272 16.1655  c
41.0432 16.5506 40.8115 16.8785 40.5322 17.1494  c
40.2529 17.4202 39.9418 17.6381 39.5991 17.8032  c
39.1124 18.0359 38.6131 18.1523 38.1010 18.1523  c
37.5848 18.1523 37.2092 18.0645 36.9743 17.8889  c
36.7395 17.7133 36.6220 17.5196 36.6220 17.3081  c
36.6220 17.1896 36.6707 17.0848 36.7680 16.9939  c
36.8654 16.9029 36.9881 16.8574 37.1362 16.8574  c
37.2462 16.8574 37.3425 16.8743 37.4250 16.9082  c
37.5075 16.9420 37.6482 17.0288 37.8471 17.1684  c
38.1645 17.3885 38.4861 17.4985 38.8120 17.4985  c
39.3071 17.4985 39.7419 17.3112 40.1164 16.9367  c
40.4909 16.5622 40.6782 16.1062 40.6782 15.5688  c
40.6782 15.0483 40.5110 14.5627 40.1767 14.1120  c
39.8424 13.6613 39.3811 13.3133 38.7929 13.0678  c
38.3317 12.8774 37.7032 12.7674 36.9077 12.7377  c
38.5581 9.39257 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 165.000 m
44.0000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 154.000 m
44.0000 154.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 143.000 m
44.0000 143.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 132.000 m
44.0000 132.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 109.000 m
44.0000 109.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 98.0000 m
44.0000 98.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 87.0000 m
44.0000 87.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 75.0000 m
44.0000 75.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 53.0000 m
44.0000 53.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 42.0000 m
44.0000 42.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 30.0000 m
44.0000 30.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 19.0000 m
44.0000 19.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 502 195 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
