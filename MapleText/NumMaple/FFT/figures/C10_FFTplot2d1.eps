%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 285 575 506
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ16“ú 17Žž06•ª18•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
364 144 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
364.000 0 l
364.000 144.000 l
0 144.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 354 134 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
42.0000 6.04819 302.472 120.451 rc
1.00000 0 0 RG
newpath
43.0000 66.7740 m
44.5745 59.6663 l
45.9444 53.5633 l
47.4851 46.8789 l
49.0360 40.4333 l
50.5795 34.3912 l
52.0106 29.1964 l
53.4923 24.2994 l
55.0248 19.8174 l
56.5523 16.0006 l
58.1235 12.8081 l
59.5075 10.6494 l
61.0655 8.98330 l
61.8477 8.45947 l
62.6299 8.14743 l
63.0068 8.07305 l
63.3837 8.04819 l
63.7606 8.07286 l
64.1375 8.14704 l
64.8220 8.40815 l
65.5065 8.83161 l
67.1344 10.4830 l
68.5135 12.5756 l
70.1176 15.7771 l
71.5376 19.2622 l
73.0955 23.7380 l
74.5791 28.5768 l
76.1269 34.1561 l
77.5484 39.6900 l
79.0816 46.0208 l
80.6742 52.9020 l
82.0606 59.0656 l
83.5579 65.8191 l
85.1047 72.8085 l
86.6180 79.5640 l
88.0822 85.9358 l
89.7079 92.7218 l
91.1687 98.4754 l
92.7284 104.173 l
94.1418 108.873 l
95.6869 113.439 l
97.1408 117.132 l
98.6605 120.317 l
100.146 122.722 l
101.701 124.455 l
102.450 124.995 l
103.199 125.341 l
103.582 125.443 l
103.965 125.493 l
104.157 125.500 l
104.348 125.493 l
104.540 125.473 l
104.731 125.441 l
105.491 125.188 l
106.251 124.734 l
106.949 124.142 l
107.647 123.384 l
109.247 121.033 l
110.678 118.231 l
112.204 114.555 l
113.665 110.419 l
115.286 105.181 l
116.691 100.158 l
118.285 93.9882 l
119.737 88.0049 l
121.326 81.1585 l
122.697 75.0742 l
124.258 68.0362 l
125.767 61.2193 l
127.274 54.4818 l
128.776 47.9336 l
130.218 41.8792 l
131.778 35.6821 l
133.264 30.1920 l
134.829 24.9330 l
136.245 20.6941 l
137.810 16.6488 l
139.309 13.4563 l
140.804 10.9796 l
142.366 9.18328 l
143.086 8.63515 l
143.805 8.26560 l
144.173 8.14589 l
144.542 8.07341 l
144.910 8.04822 l
145.278 8.07032 l
145.685 8.14968 l
146.092 8.28660 l
146.498 8.48095 l
146.905 8.73255 l
147.641 9.33302 l
148.378 10.1184 l
149.884 12.2895 l
151.416 15.2494 l
152.824 18.6037 l
154.325 22.8022 l
155.815 27.5497 l
157.408 33.1978 l
158.814 38.6048 l
160.436 45.2496 l
161.900 51.5375 l
163.349 57.9499 l
164.907 64.9657 l
166.471 72.0358 l
167.894 78.4049 l
169.405 85.0140 l
170.879 91.2263 l
172.478 97.6017 l
173.861 102.744 l
175.450 108.144 l
176.944 112.656 l
178.423 116.527 l
179.903 119.755 l
181.413 122.337 l
183.013 124.254 l
183.747 124.842 l
184.480 125.244 l
184.842 125.374 l
185.204 125.458 l
185.385 125.483 l
185.567 125.497 l
185.748 125.499 l
185.929 125.490 l
186.316 125.431 l
186.703 125.321 l
187.090 125.159 l
187.477 124.944 l
188.249 124.362 l
189.022 123.575 l
190.409 121.661 l
192.051 118.586 l
193.426 115.373 l
195.033 110.927 l
196.568 106.051 l
197.938 101.232 l
199.478 95.3577 l
201.029 89.0376 l
202.573 82.4320 l
204.004 76.1080 l
205.486 69.4414 l
207.018 62.5113 l
208.546 55.6624 l
210.117 48.7789 l
211.501 42.9308 l
213.059 36.6747 l
214.623 30.8290 l
216.131 25.6884 l
217.500 21.4983 l
219.128 17.1746 l
220.507 14.1194 l
222.111 11.3148 l
223.531 9.53747 l
224.310 8.85220 l
225.089 8.37555 l
225.460 8.22246 l
225.831 8.11719 l
226.201 8.05982 l
226.572 8.05040 l
226.959 8.09171 l
227.346 8.18518 l
227.733 8.33076 l
228.120 8.52829 l
228.831 9.02585 l
229.542 9.69657 l
231.075 11.7230 l
232.668 14.6401 l
234.054 17.8198 l
235.551 21.8797 l
237.098 26.7002 l
238.611 31.9669 l
240.075 37.5136 l
241.701 44.1050 l
243.162 50.3338 l
244.722 57.2121 l
246.135 63.5667 l
247.680 70.5548 l
249.134 77.0829 l
250.654 83.7672 l
252.140 90.0779 l
253.695 96.3564 l
255.193 102.003 l
256.725 107.291 l
258.245 111.980 l
259.641 115.743 l
261.241 119.358 l
262.672 121.916 l
264.198 123.905 l
264.928 124.579 l
265.658 125.070 l
266.064 125.263 l
266.469 125.399 l
266.672 125.446 l
266.875 125.478 l
267.077 125.496 l
267.280 125.499 l
267.631 125.471 l
267.982 125.401 l
268.333 125.287 l
268.684 125.130 l
269.481 124.617 l
270.278 123.886 l
271.731 122.001 l
273.320 119.148 l
274.691 116.055 l
276.252 111.865 l
277.760 107.199 l
279.268 101.990 l
280.769 96.3284 l
282.212 90.5161 l
283.772 83.9053 l
285.258 77.3733 l
286.822 70.3503 l
288.238 63.9453 l
289.804 56.9087 l
291.303 50.3020 l
292.798 43.9300 l
294.360 37.5993 l
295.799 32.1400 l
297.272 26.9900 l
298.899 21.9015 l
300.372 17.8996 l
301.878 14.4579 l
303.410 11.6800 l
304.818 9.80227 l
305.568 9.07412 l
306.319 8.53889 l
306.691 8.34550 l
307.064 8.20022 l
307.436 8.10318 l
307.808 8.05443 l
308.008 8.04821 l
308.207 8.05581 l
308.406 8.07726 l
308.605 8.11252 l
309.003 8.22450 l
309.402 8.39162 l
310.105 8.82068 l
310.808 9.41978 l
312.430 11.4406 l
313.894 14.0069 l
315.343 17.2064 l
316.900 21.3341 l
318.464 26.1362 l
319.887 31.0197 l
321.398 36.6745 l
322.873 42.5867 l
324.472 49.3455 l
325.855 55.4108 l
327.444 62.5318 l
328.937 69.2858 l
330.416 75.9422 l
331.897 82.4846 l
333.406 88.9466 l
335.007 95.4671 l
336.474 101.065 l
337.922 106.161 l
339.471 111.066 l
341.016 115.333 l
342.472 118.726 l
S
cliprestore
newpath
0 0 m
0 134.000 l
354.000 134.000 l
354.000 0 l
h
W
Q
q
42.0000 6.04819 302.472 120.451 rc
0.196078 0.803922 0.196078 RG
newpath
43.0000 66.7740 m
43.3936 55.2705 l
43.7872 44.2127 l
44.1808 34.0290 l
44.5745 25.1141 l
45.2594 13.6182 l
45.9444 8.31839 l
46.7148 10.4984 l
47.4851 20.9532 l
47.8728 28.9031 l
48.2606 38.2767 l
48.6483 48.7218 l
49.0360 59.8456 l
49.4219 71.1758 l
49.8078 82.3421 l
50.1936 92.9286 l
50.5795 102.541 l
50.9373 110.270 l
51.2950 116.606 l
51.6528 121.346 l
52.0106 124.339 l
52.1958 125.168 l
52.3810 125.494 l
52.5662 125.316 l
52.7514 124.634 l
53.1219 121.787 l
53.4923 117.052 l
53.8754 110.341 l
54.2585 102.032 l
54.6416 92.4283 l
55.0248 81.8827 l
55.4066 70.8184 l
55.7885 59.6067 l
56.1704 48.6563 l
56.5523 38.3668 l
56.9451 28.8674 l
57.3379 20.8306 l
57.7307 14.5666 l
58.1235 10.3171 l
58.2965 9.12994 l
58.4695 8.37523 l
58.5560 8.16198 l
58.6425 8.05872 l
58.7290 8.06565 l
58.8155 8.18277 l
59.1615 9.74554 l
59.5075 13.0167 l
59.8970 18.6194 l
60.2865 26.0492 l
60.6760 35.0240 l
61.0655 45.2035 l
61.4566 56.2477 l
61.8477 67.6946 l
62.2388 79.1062 l
62.6299 90.0461 l
63.0068 99.7509 l
63.3837 108.284 l
63.7606 115.342 l
64.1375 120.674 l
64.4797 123.861 l
64.8220 125.374 l
64.9075 125.485 l
64.9931 125.487 l
65.0787 125.382 l
65.1642 125.169 l
65.3354 124.423 l
65.5065 123.253 l
65.9135 118.826 l
66.3205 112.244 l
66.7274 103.780 l
67.1344 93.7826 l
67.4792 84.4206 l
67.8239 74.5337 l
68.1687 64.4160 l
68.5135 54.3684 l
68.9145 43.1649 l
69.3156 32.9109 l
69.7166 24.0186 l
70.1176 16.8458 l
70.4726 12.1645 l
70.8276 9.20520 l
71.0051 8.40265 l
71.1826 8.06117 l
71.2714 8.06430 l
71.3601 8.18344 l
71.4489 8.41832 l
71.5376 8.76850 l
71.9271 11.6463 l
72.3166 16.6154 l
72.7061 23.4875 l
73.0955 32.0017 l
73.4664 41.3408 l
73.8373 51.5550 l
74.2082 62.2929 l
74.5791 73.1850 l
74.9660 84.3089 l
75.3530 94.7761 l
75.7400 104.194 l
76.1269 112.211 l
76.8377 122.329 l
77.5484 125.480 l
77.9317 124.111 l
78.3150 120.636 l
78.6983 115.181 l
79.0816 107.947 l
79.4798 98.8362 l
79.8779 88.4538 l
80.2761 77.2120 l
80.6742 65.5565 l
81.0208 55.4334 l
81.3674 45.6511 l
81.7140 36.5039 l
82.0606 28.2665 l
82.4349 20.6769 l
82.8092 14.7030 l
83.1835 10.5542 l
83.5579 8.37593 l
84.3313 10.3628 l
85.1047 20.7103 l
85.4830 28.3962 l
85.8614 37.4561 l
86.2397 47.5656 l
86.6180 58.3627 l
86.9841 69.1003 l
87.3501 79.7598 l
87.7162 89.9841 l
88.0822 99.4303 l
88.4886 108.623 l
88.8951 116.088 l
89.3015 121.517 l
89.7079 124.684 l
89.8905 125.333 l
90.0731 125.492 l
90.2557 125.160 l
90.4383 124.341 l
90.8035 121.268 l
91.1687 116.378 l
91.5587 109.334 l
91.9486 100.672 l
92.3385 90.7216 l
92.7284 79.8601 l
93.0818 69.5767 l
93.4351 59.2057 l
93.7884 49.0712 l
94.1418 39.4896 l
94.5281 29.9998 l
94.9144 21.8822 l
95.3006 15.4401 l
95.6869 10.9136 l
96.0504 8.55616 l
96.4138 8.12285 l
96.7773 9.62808 l
97.1408 13.0220 l
97.5207 18.4663 l
97.9006 25.6546 l
98.2806 34.3276 l
98.6605 44.1719 l
99.0319 54.5882 l
99.4034 65.4252 l
99.7748 76.3086 l
100.146 86.8630 l
100.535 97.1637 l
100.924 106.315 l
101.312 113.971 l
101.701 119.842 l
102.076 123.601 l
102.450 125.366 l
102.544 125.487 l
102.638 125.479 l
102.731 125.342 l
102.825 125.076 l
103.012 124.160 l
103.199 122.739 l
103.582 118.320 l
103.965 112.010 l
104.348 104.039 l
104.731 94.7023 l
105.111 84.4291 l
105.491 73.5187 l
105.871 62.3650 l
106.251 51.3704 l
106.600 41.7484 l
106.949 32.8893 l
107.298 25.0632 l
107.647 18.5087 l
108.047 12.8160 l
108.447 9.28225 l
108.647 8.37275 l
108.847 8.04892 l
109.047 8.31401 l
109.247 9.16535 l
109.605 12.1200 l
109.963 16.8254 l
110.320 23.1306 l
110.678 30.8337 l
111.060 40.3082 l
111.441 50.7460 l
111.823 61.7672 l
112.204 72.9707 l
112.569 83.4880 l
112.934 93.4478 l
113.300 102.518 l
113.665 110.396 l
114.070 117.429 l
114.476 122.380 l
114.678 124.008 l
114.881 125.046 l
114.982 125.341 l
115.084 125.484 l
115.134 125.499 l
115.185 125.477 l
115.236 125.416 l
115.286 125.318 l
115.989 120.143 l
116.691 108.436 l
117.089 99.4035 l
117.488 89.0753 l
117.886 77.8618 l
118.648 55.5945 l
119.011 45.3499 l
119.374 35.8121 l
119.737 27.2960 l
120.134 19.4814 l
120.532 13.5328 l
120.929 9.68507 l
121.326 8.08989 l
122.012 10.7702 l
122.697 19.9883 l
123.087 27.7753 l
123.478 37.0485 l
123.868 47.4543 l
124.258 58.5963 l
124.636 69.6596 l
125.013 80.6202 l
125.390 91.0884 l
125.767 100.692 l
126.144 109.084 l
126.520 115.973 l
126.897 121.116 l
127.274 124.328 l
127.462 125.169 l
127.649 125.495 l
127.837 125.302 l
128.025 124.593 l
128.400 121.651 l
128.776 116.775 l
129.136 110.428 l
129.497 102.660 l
129.858 93.7240 l
130.218 83.9108 l
130.608 72.6853 l
130.998 61.2350 l
131.388 49.9954 l
131.778 39.3936 l
132.150 30.2526 l
132.521 22.3732 l
132.893 16.0275 l
133.264 11.4347 l
133.655 8.66763 l
134.046 8.12310 l
134.438 9.82193 l
134.829 13.6991 l
135.183 18.9651 l
135.537 25.7306 l
135.891 33.7832 l
136.245 42.8705 l
136.636 53.7733 l
137.027 65.1739 l
137.419 76.6357 l
137.810 87.7200 l
138.185 97.5902 l
138.559 106.377 l
138.934 113.774 l
139.309 119.519 l
139.683 123.403 l
140.057 125.308 l
140.103 125.403 l
140.150 125.466 l
140.197 125.496 l
140.244 125.495 l
140.337 125.395 l
140.430 125.167 l
140.617 124.327 l
140.804 122.984 l
141.195 118.607 l
141.585 112.254 l
141.976 104.166 l
142.366 94.6533 l
142.726 84.9414 l
143.086 74.6415 l
143.445 64.0870 l
143.805 53.6195 l
144.173 43.3434 l
144.542 33.8625 l
144.910 25.4986 l
145.278 18.5357 l
145.685 12.7576 l
146.092 9.21304 l
146.295 8.32798 l
146.498 8.04871 l
146.702 8.37810 l
146.905 9.31274 l
147.273 12.5102 l
147.641 17.5483 l
148.010 24.2561 l
148.378 32.4062 l
148.754 41.9445 l
149.131 52.3636 l
149.508 63.2938 l
149.884 74.3474 l
150.267 85.3110 l
150.650 95.5945 l
151.033 104.820 l
151.416 112.651 l
152.120 122.490 l
152.824 125.471 l
153.199 124.096 l
153.575 120.702 l
153.950 115.409 l
154.325 108.402 l
154.697 99.9995 l
155.070 90.4435 l
155.442 80.0664 l
155.815 69.2282 l
156.213 57.5502 l
156.611 46.2383 l
157.010 35.7411 l
157.408 26.4751 l
157.760 19.6159 l
158.111 14.2148 l
158.463 10.4388 l
158.814 8.40469 l
159.625 10.6029 l
160.436 21.9467 l
160.802 29.6138 l
161.168 38.5262 l
161.534 48.3854 l
161.900 58.8608 l
162.263 69.4879 l
162.625 80.0260 l
162.987 90.1293 l
163.349 99.4662 l
163.738 108.301 l
164.128 115.562 l
164.517 120.972 l
164.907 124.327 l
165.102 125.193 l
165.298 125.499 l
165.493 125.243 l
165.689 124.426 l
166.080 121.149 l
166.471 115.793 l
166.826 109.285 l
167.182 101.431 l
167.538 92.4799 l
167.894 82.7142 l
168.271 71.7981 l
168.649 60.7027 l
169.027 49.8240 l
169.405 39.5504 l
169.773 30.4588 l
170.142 22.6020 l
170.511 16.2473 l
170.879 11.6108 l
171.279 8.70702 l
171.679 8.12231 l
172.078 9.88005 l
172.478 13.9100 l
172.824 19.1089 l
173.170 25.7344 l
173.516 33.5880 l
173.861 42.4348 l
174.259 53.4771 l
174.656 65.0439 l
175.053 76.6789 l
175.450 87.9233 l
175.823 97.7405 l
176.197 106.477 l
176.570 113.830 l
176.944 119.542 l
177.313 123.386 l
177.683 125.293 l
177.729 125.391 l
177.776 125.458 l
177.822 125.493 l
177.868 125.497 l
177.960 125.411 l
178.053 125.199 l
178.238 124.399 l
178.423 123.106 l
178.793 119.082 l
179.163 113.267 l
179.533 105.859 l
179.903 97.1122 l
180.280 87.1223 l
180.658 76.4073 l
181.035 65.3491 l
181.413 54.3416 l
181.813 43.1659 l
182.213 32.9350 l
182.613 24.0584 l
183.013 16.8914 l
183.380 12.0688 l
183.747 9.08785 l
183.930 8.32186 l
184.113 8.04884 l
184.297 8.27111 l
184.480 8.98680 l
184.842 11.8210 l
185.204 16.4580 l
185.567 22.7456 l
185.929 30.4777 l
186.316 40.0527 l
186.703 50.6290 l
187.090 61.8103 l
187.477 73.1777 l
187.863 84.2814 l
188.249 94.7319 l
188.636 104.139 l
189.022 112.152 l
189.715 122.130 l
190.409 125.498 l
190.819 124.178 l
191.230 120.437 l
191.641 114.434 l
192.051 106.421 l
192.395 98.4160 l
192.739 89.4755 l
193.082 79.8642 l
193.426 69.8660 l
193.627 63.9575 l
193.828 58.0776 l
194.029 52.2856 l
194.230 46.6404 l
194.632 36.0163 l
195.033 26.6345 l
195.417 19.1878 l
195.801 13.4922 l
196.184 9.75738 l
196.568 8.12078 l
197.253 10.5572 l
197.938 19.5466 l
198.323 27.1149 l
198.708 36.1548 l
199.093 46.3307 l
199.478 57.2652 l
199.866 68.6275 l
200.254 79.9202 l
200.642 90.7187 l
201.029 100.616 l
201.415 109.205 l
201.801 116.213 l
202.187 121.380 l
202.573 124.514 l
202.752 125.241 l
202.931 125.499 l
203.109 125.286 l
203.288 124.604 l
203.646 121.857 l
204.004 117.345 l
204.374 110.970 l
204.745 103.077 l
205.115 93.9384 l
205.486 83.8670 l
205.869 72.8381 l
206.252 61.5867 l
206.635 50.5257 l
207.018 40.0612 l
207.400 30.6057 l
207.782 22.4696 l
208.164 15.9494 l
208.546 11.2830 l
208.938 8.59611 l
209.331 8.15401 l
209.724 9.97385 l
210.117 13.9854 l
210.463 19.2129 l
210.809 25.8653 l
211.155 33.7432 l
211.501 42.6106 l
211.890 53.4451 l
212.280 64.7854 l
212.669 76.2011 l
213.059 87.2591 l
213.450 97.5799 l
213.841 106.722 l
214.232 114.336 l
214.623 120.131 l
215.000 123.787 l
215.377 125.416 l
215.754 124.962 l
216.131 122.440 l
216.473 118.432 l
216.815 112.911 l
217.158 106.036 l
217.500 98.0109 l
217.907 87.2971 l
218.314 75.7333 l
218.517 69.7816 l
218.721 63.7986 l
218.924 57.8465 l
219.128 51.9870 l
219.472 42.4413 l
219.817 33.6194 l
220.162 25.7837 l
220.507 19.1673 l
220.908 13.2638 l
221.309 9.51232 l
221.509 8.49424 l
221.710 8.06358 l
221.760 8.04834 l
221.810 8.07012 l
221.860 8.12890 l
221.910 8.22467 l
222.011 8.52684 l
222.111 8.97589 l
222.466 11.7261 l
222.821 16.2121 l
223.176 22.2924 l
223.531 29.7754 l
223.920 39.3177 l
224.310 49.9016 l
224.699 61.1257 l
225.089 72.5640 l
225.460 83.2581 l
225.831 93.3851 l
226.201 102.596 l
226.572 110.575 l
227.346 122.112 l
228.120 125.437 l
228.831 120.811 l
229.542 109.409 l
229.925 100.920 l
230.308 91.1758 l
230.692 80.5349 l
231.075 69.3884 l
231.473 57.7142 l
231.871 46.3992 l
232.269 35.8918 l
232.668 26.6085 l
233.014 19.8121 l
233.361 14.4275 l
233.707 10.6164 l
234.054 8.49356 l
234.803 9.89931 l
235.551 19.2091 l
235.938 26.7284 l
236.325 35.7455 l
236.711 45.9231 l
237.098 56.8806 l
237.476 67.9614 l
237.855 78.9997 l
238.233 89.6003 l
238.611 99.3836 l
238.977 107.741 l
239.343 114.726 l
239.709 120.103 l
240.075 123.693 l
240.279 124.867 l
240.482 125.440 l
240.584 125.499 l
240.685 125.405 l
240.787 125.160 l
240.888 124.764 l
241.295 121.693 l
241.701 116.354 l
242.066 109.802 l
242.432 101.814 l
242.797 92.6578 l
243.162 82.6372 l
243.552 71.3624 l
243.942 59.9132 l
244.332 48.7249 l
244.722 38.2229 l
245.075 29.6340 l
245.428 22.2053 l
245.782 16.1690 l
246.135 11.7135 l
246.521 8.81421 l
246.908 8.07786 l
247.294 9.53200 l
247.680 13.1223 l
248.044 18.3323 l
248.407 25.1433 l
248.771 33.3303 l
249.134 42.6227 l
249.514 53.1839 l
249.894 64.2357 l
250.274 75.3792 l
250.654 86.2120 l
251.025 96.1273 l
251.397 105.029 l
251.768 112.611 l
252.140 118.611 l
252.528 122.972 l
252.917 125.208 l
253.015 125.423 l
253.112 125.499 l
253.160 125.485 l
253.209 125.436 l
253.258 125.353 l
253.306 125.234 l
253.501 124.415 l
253.695 123.050 l
254.070 118.932 l
254.444 112.984 l
254.819 105.415 l
255.193 96.4897 l
255.576 86.2868 l
255.959 75.3678 l
256.342 64.1336 l
256.725 52.9963 l
257.105 42.4493 l
257.485 32.7802 l
257.865 24.3378 l
258.245 17.4268 l
258.943 9.50648 l
259.641 8.51616 l
260.041 11.1543 l
260.441 16.0179 l
260.841 22.9124 l
261.241 31.5620 l
261.599 40.5035 l
261.956 50.2865 l
262.314 60.5976 l
262.672 71.1065 l
263.053 82.1502 l
263.435 92.6342 l
263.816 102.177 l
264.198 110.431 l
264.928 121.591 l
265.658 125.500 l
266.064 124.306 l
266.469 120.748 l
266.875 114.972 l
267.280 107.216 l
267.631 99.1434 l
267.982 90.0723 l
268.333 80.2827 l
268.684 70.0765 l
269.083 58.3863 l
269.481 47.0292 l
269.880 36.4559 l
270.278 27.0863 l
270.641 19.9109 l
271.005 14.2818 l
271.368 10.3847 l
271.731 8.34826 l
272.525 10.6159 l
273.320 21.6596 l
273.663 28.7454 l
274.005 36.9492 l
274.348 46.0299 l
274.691 55.7205 l
275.081 67.1362 l
275.471 78.5381 l
275.862 89.4917 l
276.252 99.5796 l
276.629 108.140 l
277.006 115.231 l
277.383 120.598 l
277.760 124.050 l
277.949 125.017 l
278.137 125.466 l
278.231 125.494 l
278.326 125.392 l
278.420 125.160 l
278.514 124.797 l
278.891 122.067 l
279.268 117.374 l
279.643 110.910 l
280.019 102.890 l
280.394 93.5971 l
280.769 83.3582 l
281.130 72.9664 l
281.491 62.3732 l
281.851 51.9232 l
282.212 41.9565 l
282.602 32.1001 l
282.992 23.5618 l
283.382 16.6664 l
283.772 11.6759 l
284.143 8.86718 l
284.515 8.05870 l
284.886 9.27839 l
285.258 12.4841 l
285.649 17.8804 l
286.040 25.1468 l
286.431 34.0054 l
286.822 44.1174 l
287.176 54.0298 l
287.530 64.3419 l
287.884 74.7302 l
288.238 84.8690 l
288.630 95.4017 l
289.021 104.838 l
289.412 112.817 l
289.804 119.034 l
290.178 123.115 l
290.553 125.216 l
290.647 125.422 l
290.740 125.499 l
290.787 125.489 l
290.834 125.446 l
290.881 125.372 l
290.928 125.265 l
291.115 124.515 l
291.303 123.258 l
291.676 119.279 l
292.050 113.464 l
292.424 106.017 l
292.798 97.1980 l
293.188 86.8559 l
293.579 75.7480 l
293.969 64.2978 l
294.360 52.9422 l
294.720 42.9400 l
295.079 33.7092 l
295.439 25.5485 l
295.799 18.7221 l
296.535 9.78011 l
297.272 8.51020 l
297.679 11.2021 l
298.085 16.1919 l
298.492 23.2735 l
298.899 32.1537 l
299.267 41.4403 l
299.635 51.5861 l
300.003 62.2471 l
300.372 73.0617 l
300.748 83.8981 l
301.125 94.1272 l
301.501 103.386 l
301.878 111.346 l
302.644 122.418 l
303.410 125.400 l
304.114 120.612 l
304.818 109.197 l
305.193 100.863 l
305.568 91.3280 l
305.944 80.9280 l
306.319 70.0293 l
306.691 59.0994 l
307.064 48.4356 l
307.436 38.4080 l
307.808 29.3644 l
308.207 21.1343 l
308.605 14.7151 l
309.003 10.3614 l
309.402 8.24593 l
310.105 10.1765 l
310.808 19.0530 l
311.213 26.9395 l
311.619 36.4643 l
312.025 47.2356 l
312.430 58.8104 l
312.796 69.5507 l
313.162 80.1978 l
313.528 90.3951 l
313.894 99.8007 l
314.256 108.018 l
314.618 114.883 l
314.981 120.169 l
315.343 123.703 l
315.537 124.836 l
315.732 125.417 l
315.829 125.499 l
315.927 125.441 l
316.024 125.244 l
316.122 124.907 l
316.511 122.193 l
316.900 117.376 l
317.291 110.610 l
317.682 102.168 l
318.073 92.3726 l
318.464 81.5985 l
318.820 71.2921 l
319.176 60.8425 l
319.532 50.5808 l
319.887 40.8319 l
320.265 31.3849 l
320.643 23.2014 l
321.021 16.5733 l
321.398 11.7374 l
321.767 8.91151 l
322.136 8.05314 l
322.504 9.19157 l
322.873 12.2880 l
323.273 17.7326 l
323.672 25.1358 l
324.072 34.2019 l
324.472 44.5689 l
324.818 54.2710 l
325.163 64.3472 l
325.509 74.4960 l
325.855 84.4138 l
326.252 95.1359 l
326.649 104.739 l
327.047 112.845 l
327.444 119.133 l
327.817 123.165 l
328.191 125.230 l
328.284 125.429 l
328.377 125.499 l
328.424 125.487 l
328.471 125.442 l
328.517 125.365 l
328.564 125.256 l
328.751 124.502 l
328.937 123.243 l
329.307 119.309 l
329.677 113.577 l
330.047 106.245 l
330.416 97.5629 l
330.786 87.8193 l
331.156 77.3548 l
331.897 55.7092 l
332.274 45.0679 l
332.651 35.2001 l
333.029 26.4573 l
333.406 19.1512 l
333.806 13.2643 l
334.206 9.51889 l
334.406 8.49965 l
334.606 8.06494 l
334.657 8.04824 l
334.707 8.06837 l
334.757 8.12534 l
334.807 8.21911 l
334.907 8.51677 l
335.007 8.96062 l
335.373 11.8177 l
335.740 16.5250 l
336.107 22.9239 l
336.474 30.7989 l
336.836 39.7617 l
337.198 49.6106 l
337.560 60.0226 l
337.922 70.6561 l
338.309 81.8734 l
338.696 92.5249 l
339.084 102.211 l
339.471 110.570 l
340.243 122.095 l
341.016 125.441 l
341.380 123.991 l
341.744 120.643 l
342.108 115.508 l
342.472 108.755 l
S
cliprestore
newpath
0 0 m
0 134.000 l
354.000 134.000 l
354.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
43.0000 67.0000 m
342.472 67.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
185 87 14 15 rc
newpath
191.278 93.2553 m
191.486 93.4754 191.642 93.6954 191.748 93.9155  c
191.824 94.0678 191.949 94.4677 192.123 95.1152  c
192.681 94.2773 l
192.829 94.0742 193.009 93.8806 193.221 93.6965  c
193.432 93.5124 193.619 93.3865 193.779 93.3188  c
193.881 93.2765 193.993 93.2553 194.116 93.2553  c
194.298 93.2553 194.443 93.3040 194.551 93.4013  c
194.658 93.4987 194.712 93.6171 194.712 93.7568  c
194.712 93.9176 194.681 94.0276 194.617 94.0869  c
194.499 94.1927 194.363 94.2456 194.211 94.2456  c
194.122 94.2456 194.027 94.2265 193.925 94.1884  c
193.726 94.1207 193.593 94.0869 193.525 94.0869  c
193.424 94.0869 193.303 94.1461 193.164 94.2646  c
192.901 94.4847 192.588 94.9099 192.224 95.5405  c
192.745 97.7241 l
192.825 98.0584 192.893 98.2583 192.948 98.3239  c
193.003 98.3895 193.058 98.4223 193.113 98.4223  c
193.202 98.4223 193.305 98.3737 193.424 98.2763  c
193.657 98.0817 193.856 97.8278 194.021 97.5146  c
194.243 97.6289 l
193.976 98.1282 193.638 98.5429 193.227 98.8730  c
192.994 99.0592 192.798 99.1523 192.637 99.1523  c
192.400 99.1523 192.211 99.0190 192.072 98.7524  c
191.983 98.5874 191.799 97.8764 191.520 96.6196  c
190.859 97.7664 190.330 98.5048 189.933 98.8349  c
189.675 99.0465 189.425 99.1523 189.184 99.1523  c
189.014 99.1523 188.860 99.0909 188.720 98.9682  c
188.619 98.8751 188.568 98.7503 188.568 98.5937  c
188.568 98.4541 188.614 98.3377 188.708 98.2446  c
188.801 98.1515 188.915 98.1049 189.050 98.1049  c
189.186 98.1049 189.330 98.1726 189.482 98.3081  c
189.592 98.4054 189.677 98.4541 189.736 98.4541  c
189.787 98.4541 189.852 98.4202 189.933 98.3525  c
190.132 98.1917 190.402 97.8447 190.745 97.3115  c
191.088 96.7783 191.312 96.3932 191.418 96.1562  c
191.156 95.1279 191.014 94.5841 190.993 94.5249  c
190.895 94.2498 190.768 94.0551 190.612 93.9409  c
190.455 93.8266 190.225 93.7695 189.920 93.7695  c
189.823 93.7695 189.710 93.7737 189.584 93.7822  c
189.584 93.5537 l
h
f
Q
cliprestore
newpath
0 0 m
0 134.000 l
354.000 134.000 l
354.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
43.0000 67.0000 m
43.0000 71.0000 l
S
Q
q
0 J
1 j
newpath
143.000 67.0000 m
143.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
138.523 80.2368 m
140.618 79.2148 l
140.827 79.2148 l
140.827 86.4829 l
140.827 86.9653 140.847 87.2657 140.887 87.3842  c
140.928 87.5027 141.011 87.5937 141.138 87.6572  c
141.265 87.7207 141.523 87.7566 141.913 87.7651  c
141.913 88.0000 l
138.675 88.0000 l
138.675 87.7651 l
139.082 87.7566 139.344 87.7217 139.462 87.6604  c
139.581 87.5990 139.663 87.5165 139.710 87.4128  c
139.757 87.3091 139.780 86.9991 139.780 86.4829  c
139.780 81.8364 l
139.780 81.2101 139.759 80.8081 139.716 80.6303  c
139.687 80.4949 139.633 80.3955 139.554 80.3320  c
139.476 80.2685 139.382 80.2368 139.272 80.2368  c
139.115 80.2368 138.897 80.3024 138.618 80.4335  c
h
144.469 83.7470 m
144.469 82.7653 144.617 81.9200 144.914 81.2111  c
145.210 80.5023 145.603 79.9744 146.094 79.6274  c
146.475 79.3523 146.869 79.2148 147.275 79.2148  c
147.935 79.2148 148.528 79.5512 149.052 80.2241  c
149.708 81.0577 150.036 82.1876 150.036 83.6137  c
150.036 84.6124 149.892 85.4609 149.605 86.1591  c
149.317 86.8574 148.950 87.3641 148.503 87.6794  c
148.057 87.9947 147.626 88.1523 147.211 88.1523  c
146.391 88.1523 145.707 87.6678 145.161 86.6987  c
144.700 85.8820 144.469 84.8981 144.469 83.7470  c
h
145.713 83.9057 m
145.713 85.0906 145.859 86.0576 146.151 86.8066  c
146.393 87.4371 146.752 87.7524 147.231 87.7524  c
147.459 87.7524 147.696 87.6498 147.941 87.4445  c
148.187 87.2393 148.373 86.8955 148.500 86.4130  c
148.695 85.6852 148.792 84.6590 148.792 83.3344  c
148.792 82.3527 148.690 81.5338 148.487 80.8779  c
148.335 80.3912 148.138 80.0463 147.897 79.8432  c
147.724 79.7036 147.514 79.6337 147.269 79.6337  c
146.981 79.6337 146.725 79.7628 146.501 80.0210  c
146.196 80.3722 145.988 80.9244 145.878 81.6777  c
145.768 82.4309 145.713 83.1736 145.713 83.9057  c
h
151.469 83.7470 m
151.469 82.7653 151.617 81.9200 151.914 81.2111  c
152.210 80.5023 152.603 79.9744 153.094 79.6274  c
153.475 79.3523 153.869 79.2148 154.275 79.2148  c
154.935 79.2148 155.528 79.5512 156.052 80.2241  c
156.708 81.0577 157.036 82.1876 157.036 83.6137  c
157.036 84.6124 156.892 85.4609 156.605 86.1591  c
156.317 86.8574 155.950 87.3641 155.503 87.6794  c
155.057 87.9947 154.626 88.1523 154.211 88.1523  c
153.391 88.1523 152.707 87.6678 152.161 86.6987  c
151.700 85.8820 151.469 84.8981 151.469 83.7470  c
h
152.713 83.9057 m
152.713 85.0906 152.859 86.0576 153.151 86.8066  c
153.393 87.4371 153.752 87.7524 154.231 87.7524  c
154.459 87.7524 154.696 87.6498 154.941 87.4445  c
155.187 87.2393 155.373 86.8955 155.500 86.4130  c
155.695 85.6852 155.792 84.6590 155.792 83.3344  c
155.792 82.3527 155.690 81.5338 155.487 80.8779  c
155.335 80.3912 155.138 80.0463 154.897 79.8432  c
154.724 79.7036 154.514 79.6337 154.269 79.6337  c
153.981 79.6337 153.725 79.7628 153.501 80.0210  c
153.196 80.3722 152.988 80.9244 152.878 81.6777  c
152.768 82.4309 152.713 83.1736 152.713 83.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
243.000 67.0000 m
243.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
242.960 86.3432 m
242.357 88.0000 l
237.279 88.0000 l
237.279 87.7651 l
238.773 86.4025 239.824 85.2895 240.434 84.4262  c
241.043 83.5629 241.348 82.7737 241.348 82.0585  c
241.348 81.5127 241.181 81.0641 240.846 80.7128  c
240.512 80.3616 240.112 80.1860 239.647 80.1860  c
239.223 80.1860 238.844 80.3098 238.507 80.5573  c
238.171 80.8049 237.922 81.1678 237.761 81.6460  c
237.526 81.6460 l
237.632 80.8631 237.904 80.2622 238.342 79.8432  c
238.780 79.4243 239.327 79.2148 239.983 79.2148  c
240.681 79.2148 241.264 79.4391 241.732 79.8877  c
242.199 80.3362 242.433 80.8652 242.433 81.4746  c
242.433 81.9104 242.332 82.3463 242.128 82.7822  c
241.815 83.4677 241.307 84.1935 240.605 84.9594  c
239.551 86.1105 238.893 86.8045 238.631 87.0415  c
240.878 87.0415 l
241.335 87.0415 241.656 87.0245 241.840 86.9907  c
242.024 86.9568 242.190 86.8881 242.338 86.7844  c
242.486 86.6807 242.615 86.5336 242.725 86.3432  c
h
244.469 83.7470 m
244.469 82.7653 244.617 81.9200 244.914 81.2111  c
245.210 80.5023 245.603 79.9744 246.094 79.6274  c
246.475 79.3523 246.869 79.2148 247.275 79.2148  c
247.935 79.2148 248.528 79.5512 249.052 80.2241  c
249.708 81.0577 250.036 82.1876 250.036 83.6137  c
250.036 84.6124 249.892 85.4609 249.605 86.1591  c
249.317 86.8574 248.950 87.3641 248.503 87.6794  c
248.057 87.9947 247.626 88.1523 247.211 88.1523  c
246.391 88.1523 245.707 87.6678 245.161 86.6987  c
244.700 85.8820 244.469 84.8981 244.469 83.7470  c
h
245.713 83.9057 m
245.713 85.0906 245.859 86.0576 246.151 86.8066  c
246.393 87.4371 246.752 87.7524 247.231 87.7524  c
247.459 87.7524 247.696 87.6498 247.941 87.4445  c
248.187 87.2393 248.373 86.8955 248.500 86.4130  c
248.695 85.6852 248.792 84.6590 248.792 83.3344  c
248.792 82.3527 248.690 81.5338 248.487 80.8779  c
248.335 80.3912 248.138 80.0463 247.897 79.8432  c
247.724 79.7036 247.514 79.6337 247.269 79.6337  c
246.981 79.6337 246.725 79.7628 246.501 80.0210  c
246.196 80.3722 245.988 80.9244 245.878 81.6777  c
245.768 82.4309 245.713 83.1736 245.713 83.9057  c
h
251.469 83.7470 m
251.469 82.7653 251.617 81.9200 251.914 81.2111  c
252.210 80.5023 252.603 79.9744 253.094 79.6274  c
253.475 79.3523 253.869 79.2148 254.275 79.2148  c
254.935 79.2148 255.528 79.5512 256.052 80.2241  c
256.708 81.0577 257.036 82.1876 257.036 83.6137  c
257.036 84.6124 256.892 85.4609 256.605 86.1591  c
256.317 86.8574 255.950 87.3641 255.503 87.6794  c
255.057 87.9947 254.626 88.1523 254.211 88.1523  c
253.391 88.1523 252.707 87.6678 252.161 86.6987  c
251.700 85.8820 251.469 84.8981 251.469 83.7470  c
h
252.713 83.9057 m
252.713 85.0906 252.859 86.0576 253.151 86.8066  c
253.393 87.4371 253.752 87.7524 254.231 87.7524  c
254.459 87.7524 254.696 87.6498 254.941 87.4445  c
255.187 87.2393 255.373 86.8955 255.500 86.4130  c
255.695 85.6852 255.792 84.6590 255.792 83.3344  c
255.792 82.3527 255.690 81.5338 255.487 80.8779  c
255.335 80.3912 255.138 80.0463 254.897 79.8432  c
254.724 79.7036 254.514 79.6337 254.269 79.6337  c
253.981 79.6337 253.725 79.7628 253.501 80.0210  c
253.196 80.3722 252.988 80.9244 252.878 81.6777  c
252.768 82.4309 252.713 83.1736 252.713 83.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
342.000 67.0000 m
342.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
337.660 81.0302 m
337.905 80.4505 338.215 80.0030 338.590 79.6877  c
338.964 79.3724 339.431 79.2148 339.989 79.2148  c
340.679 79.2148 341.208 79.4391 341.576 79.8877  c
341.856 80.2220 341.995 80.5795 341.995 80.9604  c
341.995 81.5867 341.602 82.2342 340.814 82.9028  c
341.343 83.1101 341.743 83.4064 342.014 83.7915  c
342.285 84.1766 342.420 84.6293 342.420 85.1499  c
342.420 85.8946 342.183 86.5400 341.710 87.0859  c
341.092 87.7968 340.197 88.1523 339.024 88.1523  c
338.445 88.1523 338.050 88.0804 337.841 87.9365  c
337.631 87.7926 337.526 87.6381 337.526 87.4731  c
337.526 87.3504 337.576 87.2425 337.676 87.1494  c
337.775 87.0563 337.895 87.0097 338.034 87.0097  c
338.140 87.0097 338.248 87.0266 338.358 87.0605  c
338.430 87.0817 338.593 87.1589 338.847 87.2922  c
339.101 87.4255 339.276 87.5048 339.374 87.5302  c
339.530 87.5768 339.697 87.6001 339.875 87.6001  c
340.307 87.6001 340.682 87.4329 341.002 87.0986  c
341.321 86.7643 341.481 86.3686 341.481 85.9116  c
341.481 85.5773 341.407 85.2514 341.259 84.9340  c
341.149 84.6971 341.028 84.5172 340.897 84.3945  c
340.715 84.2252 340.465 84.0718 340.148 83.9343  c
339.831 83.7967 339.507 83.7280 339.177 83.7280  c
338.974 83.7280 l
338.974 83.5376 l
339.308 83.4952 339.643 83.3746 339.980 83.1757  c
340.316 82.9768 340.561 82.7377 340.713 82.4585  c
340.865 82.1792 340.941 81.8724 340.941 81.5380  c
340.941 81.1022 340.805 80.7499 340.532 80.4812  c
340.259 80.2124 339.919 80.0781 339.513 80.0781  c
338.857 80.0781 338.309 80.4293 337.869 81.1318  c
h
344.469 83.7470 m
344.469 82.7653 344.617 81.9200 344.914 81.2111  c
345.210 80.5023 345.603 79.9744 346.094 79.6274  c
346.475 79.3523 346.869 79.2148 347.275 79.2148  c
347.935 79.2148 348.528 79.5512 349.052 80.2241  c
349.708 81.0577 350.036 82.1876 350.036 83.6137  c
350.036 84.6124 349.892 85.4609 349.605 86.1591  c
349.317 86.8574 348.950 87.3641 348.503 87.6794  c
348.057 87.9947 347.626 88.1523 347.211 88.1523  c
346.391 88.1523 345.707 87.6678 345.161 86.6987  c
344.700 85.8820 344.469 84.8981 344.469 83.7470  c
h
345.713 83.9057 m
345.713 85.0906 345.859 86.0576 346.151 86.8066  c
346.393 87.4371 346.752 87.7524 347.231 87.7524  c
347.459 87.7524 347.696 87.6498 347.941 87.4445  c
348.187 87.2393 348.373 86.8955 348.500 86.4130  c
348.695 85.6852 348.792 84.6590 348.792 83.3344  c
348.792 82.3527 348.690 81.5338 348.487 80.8779  c
348.335 80.3912 348.138 80.0463 347.897 79.8432  c
347.724 79.7036 347.514 79.6337 347.269 79.6337  c
346.981 79.6337 346.725 79.7628 346.501 80.0210  c
346.196 80.3722 345.988 80.9244 345.878 81.6777  c
345.768 82.4309 345.713 83.1736 345.713 83.9057  c
h
351.469 83.7470 m
351.469 82.7653 351.617 81.9200 351.914 81.2111  c
352.210 80.5023 352.603 79.9744 353.094 79.6274  c
353.475 79.3523 353.869 79.2148 354.275 79.2148  c
354.935 79.2148 355.528 79.5512 356.052 80.2241  c
356.708 81.0577 357.036 82.1876 357.036 83.6137  c
357.036 84.6124 356.892 85.4609 356.605 86.1591  c
356.317 86.8574 355.950 87.3641 355.503 87.6794  c
355.057 87.9947 354.626 88.1523 354.211 88.1523  c
353.391 88.1523 352.707 87.6678 352.161 86.6987  c
351.700 85.8820 351.469 84.8981 351.469 83.7470  c
h
352.713 83.9057 m
352.713 85.0906 352.859 86.0576 353.151 86.8066  c
353.393 87.4371 353.752 87.7524 354.231 87.7524  c
354.459 87.7524 354.696 87.6498 354.941 87.4445  c
355.187 87.2393 355.373 86.8955 355.500 86.4130  c
355.695 85.6852 355.792 84.6590 355.792 83.3344  c
355.792 82.3527 355.690 81.5338 355.487 80.8779  c
355.335 80.3912 355.138 80.0463 354.897 79.8432  c
354.724 79.7036 354.514 79.6337 354.269 79.6337  c
353.981 79.6337 353.725 79.7628 353.501 80.0210  c
353.196 80.3722 352.988 80.9244 352.878 81.6777  c
352.768 82.4309 352.713 83.1736 352.713 83.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
93.0000 67.0000 m
93.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
193.000 67.0000 m
193.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
293.000 67.0000 m
293.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
43.0000 125.500 m
43.0000 8.04819 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 30 8 15 rc
Q
cliprestore
newpath
0 0 m
0 134.000 l
354.000 134.000 l
354.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
43.0000 126.000 m
39.0000 126.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
26 124 7 13 rc
newpath
36.7900 131.438 m
28.2100 131.438 l
28.2100 130.762 l
36.7900 130.762 l
h
f
Q
newpath
36.5234 127.236 m
38.6181 126.214 l
38.8276 126.214 l
38.8276 133.482 l
38.8276 133.965 38.8477 134.265 38.8879 134.384  c
38.9281 134.502 39.0117 134.593 39.1386 134.657  c
39.2656 134.720 39.5237 134.756 39.9130 134.765  c
39.9130 135.000 l
36.6757 135.000 l
36.6757 134.765 l
37.0820 134.756 37.3444 134.721 37.4628 134.660  c
37.5813 134.599 37.6639 134.516 37.7104 134.412  c
37.7570 134.309 37.7802 133.999 37.7802 133.482  c
37.7802 128.836 l
37.7802 128.210 37.7591 127.808 37.7168 127.630  c
37.6871 127.495 37.6332 127.395 37.5549 127.332  c
37.4766 127.268 37.3824 127.236 37.2724 127.236  c
37.1158 127.236 36.8979 127.302 36.6186 127.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 96.0000 m
39.0000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 95 7 13 rc
newpath
26.7900 102.438 m
18.2100 102.438 l
18.2100 101.762 l
26.7900 101.762 l
h
f
Q
newpath
25.4697 101.747 m
25.4697 100.765 25.6178 99.9200 25.9140 99.2111  c
26.2102 98.5023 26.6038 97.9744 27.0947 97.6274  c
27.4755 97.3523 27.8691 97.2148 28.2753 97.2148  c
28.9355 97.2148 29.5279 97.5512 30.0527 98.2241  c
30.7086 99.0577 31.0366 100.187 31.0366 101.613  c
31.0366 102.612 30.8927 103.460 30.6049 104.159  c
30.3172 104.857 29.9501 105.364 29.5036 105.679  c
29.0572 105.994 28.6266 106.152 28.2119 106.152  c
27.3909 106.152 26.7075 105.667 26.1616 104.698  c
25.7003 103.882 25.4697 102.898 25.4697 101.747  c
h
26.7138 101.905 m
26.7138 103.090 26.8598 104.057 27.1518 104.806  c
27.3930 105.437 27.7527 105.752 28.2309 105.752  c
28.4594 105.752 28.6964 105.649 28.9418 105.444  c
29.1873 105.239 29.3735 104.895 29.5004 104.413  c
29.6951 103.685 29.7924 102.659 29.7924 101.334  c
29.7924 100.352 29.6909 99.5338 29.4877 98.8779  c
29.3354 98.3912 29.1386 98.0463 28.8974 97.8432  c
28.7239 97.7036 28.5144 97.6337 28.2690 97.6337  c
27.9812 97.6337 27.7252 97.7628 27.5009 98.0210  c
27.1962 98.3722 26.9889 98.9244 26.8789 99.6777  c
26.7688 100.431 26.7138 101.173 26.7138 101.905  c
h
33.6250 104.768 m
33.8238 104.768 33.9910 104.837 34.1264 104.974  c
34.2618 105.112 34.3295 105.278 34.3295 105.473  c
34.3295 105.667 34.2608 105.833 34.1232 105.971  c
33.9857 106.109 33.8196 106.177 33.6250 106.177  c
33.4303 106.177 33.2642 106.109 33.1267 105.971  c
32.9891 105.833 32.9204 105.667 32.9204 105.473  c
32.9204 105.274 32.9891 105.107 33.1267 104.971  c
33.2642 104.836 33.4303 104.768 33.6250 104.768  c
h
40.6430 97.3925 m
40.1479 98.4716 l
37.5581 98.4716 l
36.9931 99.6269 l
38.1145 99.7919 39.0032 100.208 39.6591 100.877  c
40.2220 101.453 40.5034 102.130 40.5034 102.908  c
40.5034 103.361 40.4113 103.780 40.2272 104.165  c
40.0432 104.550 39.8115 104.878 39.5322 105.149  c
39.2529 105.420 38.9418 105.638 38.5991 105.803  c
38.1124 106.036 37.6131 106.152 37.1010 106.152  c
36.5848 106.152 36.2092 106.064 35.9743 105.888  c
35.7395 105.713 35.6220 105.519 35.6220 105.308  c
35.6220 105.189 35.6707 105.084 35.7680 104.993  c
35.8654 104.902 35.9881 104.857 36.1362 104.857  c
36.2462 104.857 36.3425 104.874 36.4250 104.908  c
36.5075 104.942 36.6482 105.028 36.8471 105.168  c
37.1645 105.388 37.4861 105.498 37.8120 105.498  c
38.3071 105.498 38.7419 105.311 39.1164 104.936  c
39.4909 104.562 39.6782 104.106 39.6782 103.568  c
39.6782 103.048 39.5110 102.562 39.1767 102.112  c
38.8424 101.661 38.3811 101.313 37.7929 101.067  c
37.3317 100.877 36.7032 100.767 35.9077 100.737  c
37.5581 97.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 67.0000 m
39.0000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
35.4697 71.7470 m
35.4697 70.7653 35.6178 69.9200 35.9140 69.2111  c
36.2102 68.5023 36.6038 67.9744 37.0947 67.6274  c
37.4755 67.3523 37.8691 67.2148 38.2753 67.2148  c
38.9355 67.2148 39.5279 67.5512 40.0527 68.2241  c
40.7086 69.0577 41.0366 70.1876 41.0366 71.6137  c
41.0366 72.6124 40.8927 73.4609 40.6049 74.1591  c
40.3172 74.8574 39.9501 75.3641 39.5036 75.6794  c
39.0572 75.9947 38.6266 76.1523 38.2119 76.1523  c
37.3909 76.1523 36.7075 75.6678 36.1616 74.6987  c
35.7003 73.8820 35.4697 72.8981 35.4697 71.7470  c
h
36.7138 71.9057 m
36.7138 73.0906 36.8598 74.0576 37.1518 74.8066  c
37.3930 75.4371 37.7527 75.7524 38.2309 75.7524  c
38.4594 75.7524 38.6964 75.6498 38.9418 75.4445  c
39.1873 75.2393 39.3735 74.8955 39.5004 74.4130  c
39.6951 73.6852 39.7924 72.6590 39.7924 71.3344  c
39.7924 70.3527 39.6909 69.5338 39.4877 68.8779  c
39.3354 68.3912 39.1386 68.0463 38.8974 67.8432  c
38.7239 67.7036 38.5144 67.6337 38.2690 67.6337  c
37.9812 67.6337 37.7252 67.7628 37.5009 68.0210  c
37.1962 68.3722 36.9889 68.9244 36.8789 69.6777  c
36.7688 70.4309 36.7138 71.1736 36.7138 71.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 37.0000 m
39.0000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4697 42.7470 m
25.4697 41.7653 25.6178 40.9200 25.9140 40.2111  c
26.2102 39.5023 26.6038 38.9744 27.0947 38.6274  c
27.4755 38.3523 27.8691 38.2148 28.2753 38.2148  c
28.9355 38.2148 29.5279 38.5512 30.0527 39.2241  c
30.7086 40.0577 31.0366 41.1876 31.0366 42.6137  c
31.0366 43.6124 30.8927 44.4609 30.6049 45.1591  c
30.3172 45.8574 29.9501 46.3641 29.5036 46.6794  c
29.0572 46.9947 28.6266 47.1523 28.2119 47.1523  c
27.3909 47.1523 26.7075 46.6678 26.1616 45.6987  c
25.7003 44.8820 25.4697 43.8981 25.4697 42.7470  c
h
26.7138 42.9057 m
26.7138 44.0906 26.8598 45.0576 27.1518 45.8066  c
27.3930 46.4371 27.7527 46.7524 28.2309 46.7524  c
28.4594 46.7524 28.6964 46.6498 28.9418 46.4445  c
29.1873 46.2393 29.3735 45.8955 29.5004 45.4130  c
29.6951 44.6852 29.7924 43.6590 29.7924 42.3344  c
29.7924 41.3527 29.6909 40.5338 29.4877 39.8779  c
29.3354 39.3912 29.1386 39.0463 28.8974 38.8432  c
28.7239 38.7036 28.5144 38.6337 28.2690 38.6337  c
27.9812 38.6337 27.7252 38.7628 27.5009 39.0210  c
27.1962 39.3722 26.9889 39.9244 26.8789 40.6777  c
26.7688 41.4309 26.7138 42.1736 26.7138 42.9057  c
h
33.6250 45.7685 m
33.8238 45.7685 33.9910 45.8373 34.1264 45.9748  c
34.2618 46.1123 34.3295 46.2784 34.3295 46.4731  c
34.3295 46.6678 34.2608 46.8339 34.1232 46.9714  c
33.9857 47.1089 33.8196 47.1777 33.6250 47.1777  c
33.4303 47.1777 33.2642 47.1089 33.1267 46.9714  c
32.9891 46.8339 32.9204 46.6678 32.9204 46.4731  c
32.9204 46.2742 32.9891 46.1071 33.1267 45.9716  c
33.2642 45.8362 33.4303 45.7685 33.6250 45.7685  c
h
40.6430 38.3925 m
40.1479 39.4716 l
37.5581 39.4716 l
36.9931 40.6269 l
38.1145 40.7919 39.0032 41.2088 39.6591 41.8774  c
40.2220 42.4529 40.5034 43.1300 40.5034 43.9086  c
40.5034 44.3614 40.4113 44.7804 40.2272 45.1655  c
40.0432 45.5506 39.8115 45.8785 39.5322 46.1494  c
39.2529 46.4202 38.9418 46.6381 38.5991 46.8032  c
38.1124 47.0359 37.6131 47.1523 37.1010 47.1523  c
36.5848 47.1523 36.2092 47.0645 35.9743 46.8889  c
35.7395 46.7133 35.6220 46.5196 35.6220 46.3081  c
35.6220 46.1896 35.6707 46.0848 35.7680 45.9939  c
35.8654 45.9029 35.9881 45.8574 36.1362 45.8574  c
36.2462 45.8574 36.3425 45.8743 36.4250 45.9082  c
36.5075 45.9420 36.6482 46.0288 36.8471 46.1684  c
37.1645 46.3885 37.4861 46.4985 37.8120 46.4985  c
38.3071 46.4985 38.7419 46.3112 39.1164 45.9367  c
39.4909 45.5622 39.6782 45.1062 39.6782 44.5688  c
39.6782 44.0483 39.5110 43.5627 39.1767 43.1120  c
38.8424 42.6613 38.3811 42.3133 37.7929 42.0678  c
37.3317 41.8774 36.7032 41.7674 35.9077 41.7377  c
37.5581 38.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 8.00000 m
39.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
36.5234 10.2368 m
38.6181 9.21484 l
38.8276 9.21484 l
38.8276 16.4829 l
38.8276 16.9653 38.8477 17.2657 38.8879 17.3842  c
38.9281 17.5027 39.0117 17.5937 39.1386 17.6572  c
39.2656 17.7207 39.5237 17.7566 39.9130 17.7651  c
39.9130 18.0000 l
36.6757 18.0000 l
36.6757 17.7651 l
37.0820 17.7566 37.3444 17.7217 37.4628 17.6604  c
37.5813 17.5990 37.6639 17.5165 37.7104 17.4128  c
37.7570 17.3091 37.7802 16.9991 37.7802 16.4829  c
37.7802 11.8364 l
37.7802 11.2101 37.7591 10.8081 37.7168 10.6303  c
37.6871 10.4949 37.6332 10.3955 37.5549 10.3320  c
37.4766 10.2685 37.3824 10.2368 37.2724 10.2368  c
37.1158 10.2368 36.8979 10.3024 36.6186 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 120.000 m
41.0000 120.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 114.000 m
41.0000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 108.000 m
41.0000 108.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 102.000 m
41.0000 102.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 90.0000 m
41.0000 90.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 84.0000 m
41.0000 84.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 79.0000 m
41.0000 79.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 73.0000 m
41.0000 73.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 61.0000 m
41.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 55.0000 m
41.0000 55.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 49.0000 m
41.0000 49.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 43.0000 m
41.0000 43.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 32.0000 m
41.0000 32.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 26.0000 m
41.0000 26.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 20.0000 m
41.0000 20.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
43.0000 14.0000 m
41.0000 14.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 364 144 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
