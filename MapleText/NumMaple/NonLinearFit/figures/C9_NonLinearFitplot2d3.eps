%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 214 575 577
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ15“ú 18Žž29•ª26•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
614 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
614.000 0 l
614.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 604 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
207.378 6.01576 189.242 376.484 rc
newpath
270.604 387.172 m
371.459 2.89538 l
S
cliprestore
newpath
0 0 m
0 390.000 l
604.000 390.000 l
604.000 0 l
h
W
Q
q
1.00000 0 0 RG
207.378 6.01576 189.242 376.484 rc
newpath
243.320 386.082 m
247.371 377.976 l
250.940 370.617 l
254.957 362.087 l
258.990 353.259 l
262.877 344.503 l
266.407 336.341 l
270.604 326.373 l
274.160 317.706 l
278.296 307.367 l
281.957 297.986 l
285.974 287.443 l
289.799 277.162 l
293.790 266.183 l
297.455 255.874 l
301.408 244.511 l
305.514 232.441 l
309.088 221.713 l
312.949 209.894 l
316.937 197.431 l
320.839 184.990 l
324.614 172.718 l
328.805 158.823 l
332.572 146.096 l
336.593 132.254 l
340.237 119.485 l
344.221 105.280 l
347.969 91.6810 l
351.888 77.2228 l
355.718 62.8475 l
359.729 47.5440 l
363.592 32.5593 l
367.542 16.9860 l
371.459 1.29287 l
S
cliprestore
newpath
0 0 m
0 390.000 l
604.000 390.000 l
604.000 0 l
h
W
Q
q
207.378 6.01576 189.242 376.484 rc
newpath
299.147 306.803 m
299.088 305.866 l
298.913 304.945 l
298.624 304.053 l
298.226 303.204 l
297.724 302.412 l
297.128 301.689 l
296.446 301.047 l
295.689 300.496 l
294.869 300.044 l
293.999 299.699 l
293.093 299.465 l
292.165 299.348 l
291.230 299.348 l
290.301 299.465 l
289.395 299.699 l
288.525 300.044 l
287.706 300.496 l
286.949 301.047 l
286.267 301.689 l
285.670 302.412 l
285.169 303.204 l
284.771 304.053 l
284.482 304.945 l
284.306 305.866 l
284.248 306.803 l
284.306 307.739 l
284.482 308.660 l
284.771 309.552 l
285.169 310.401 l
285.670 311.193 l
286.267 311.916 l
286.949 312.558 l
287.706 313.110 l
288.525 313.561 l
289.395 313.907 l
290.301 314.140 l
291.230 314.258 l
292.165 314.258 l
293.093 314.140 l
293.999 313.907 l
294.869 313.561 l
295.689 313.110 l
296.446 312.558 l
297.128 311.916 l
297.724 311.193 l
298.226 310.401 l
298.624 309.552 l
298.913 308.660 l
299.088 307.739 l
299.147 306.803 l
S
cliprestore
newpath
0 0 m
0 390.000 l
604.000 390.000 l
604.000 0 l
h
W
Q
q
207.378 6.01576 189.242 376.484 rc
newpath
364.822 56.5687 m
364.763 55.6325 l
364.588 54.7110 l
364.299 53.8189 l
363.900 52.9701 l
363.399 52.1781 l
362.803 51.4553 l
362.121 50.8132 l
361.364 50.2618 l
360.544 49.8099 l
359.674 49.4646 l
358.768 49.2313 l
357.840 49.1137 l
356.904 49.1137 l
355.976 49.2313 l
355.070 49.4646 l
354.200 49.8099 l
353.380 50.2618 l
352.624 50.8132 l
351.942 51.4553 l
351.345 52.1781 l
350.844 52.9701 l
350.446 53.8189 l
350.157 54.7110 l
349.981 55.6325 l
349.923 56.5687 l
349.981 57.5049 l
350.157 58.4263 l
350.446 59.3184 l
350.844 60.1672 l
351.345 60.9592 l
351.942 61.6820 l
352.624 62.3242 l
353.380 62.8756 l
354.200 63.3275 l
355.070 63.6728 l
355.976 63.9061 l
356.904 64.0236 l
357.840 64.0236 l
358.768 63.9061 l
359.674 63.6728 l
360.544 63.3275 l
361.364 62.8756 l
362.121 62.3242 l
362.803 61.6820 l
363.399 60.9592 l
363.900 60.1672 l
364.299 59.3184 l
364.588 58.4263 l
364.763 57.5049 l
364.822 56.5687 l
S
cliprestore
newpath
0 0 m
0 390.000 l
604.000 390.000 l
604.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
208.378 307.000 m
394.621 307.000 l
S
Q
q
q
0 J
1 j
newpath
208.000 307.000 m
208.000 313.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
200 321 7 13 rc
newpath
210.790 328.438 m
202.210 328.438 l
202.210 327.762 l
210.790 327.762 l
h
f
Q
newpath
209.469 327.747 m
209.469 326.765 209.617 325.920 209.914 325.211  c
210.210 324.502 210.603 323.974 211.094 323.627  c
211.475 323.352 211.869 323.214 212.275 323.214  c
212.935 323.214 213.528 323.551 214.052 324.224  c
214.708 325.057 215.036 326.187 215.036 327.613  c
215.036 328.612 214.892 329.460 214.605 330.159  c
214.317 330.857 213.950 331.364 213.503 331.679  c
213.057 331.994 212.626 332.152 212.211 332.152  c
211.391 332.152 210.707 331.667 210.161 330.698  c
209.700 329.882 209.469 328.898 209.469 327.747  c
h
210.713 327.905 m
210.713 329.090 210.859 330.057 211.151 330.806  c
211.393 331.437 211.752 331.752 212.231 331.752  c
212.459 331.752 212.696 331.649 212.941 331.444  c
213.187 331.239 213.373 330.895 213.500 330.413  c
213.695 329.685 213.792 328.659 213.792 327.334  c
213.792 326.352 213.690 325.533 213.487 324.877  c
213.335 324.391 213.138 324.046 212.897 323.843  c
212.724 323.703 212.514 323.633 212.269 323.633  c
211.981 323.633 211.725 323.762 211.501 324.021  c
211.196 324.372 210.988 324.924 210.878 325.677  c
210.768 326.431 210.713 327.173 210.713 327.905  c
h
217.625 330.768 m
217.823 330.768 217.991 330.837 218.126 330.974  c
218.261 331.112 218.329 331.278 218.329 331.473  c
218.329 331.667 218.260 331.833 218.123 331.971  c
217.985 332.109 217.819 332.177 217.625 332.177  c
217.430 332.177 217.264 332.109 217.126 331.971  c
216.989 331.833 216.920 331.667 216.920 331.473  c
216.920 331.274 216.989 331.107 217.126 330.971  c
217.264 330.836 217.430 330.768 217.625 330.768  c
h
224.643 323.392 m
224.147 324.471 l
221.558 324.471 l
220.993 325.627 l
222.114 325.792 223.003 326.208 223.659 326.877  c
224.222 327.453 224.503 328.130 224.503 328.908  c
224.503 329.361 224.411 329.780 224.227 330.165  c
224.043 330.550 223.811 330.878 223.532 331.149  c
223.252 331.420 222.941 331.638 222.599 331.803  c
222.112 332.036 221.613 332.152 221.101 332.152  c
220.584 332.152 220.209 332.064 219.974 331.888  c
219.739 331.713 219.622 331.519 219.622 331.308  c
219.622 331.189 219.670 331.084 219.768 330.993  c
219.865 330.902 219.988 330.857 220.136 330.857  c
220.246 330.857 220.342 330.874 220.425 330.908  c
220.507 330.942 220.648 331.028 220.847 331.168  c
221.164 331.388 221.486 331.498 221.812 331.498  c
222.307 331.498 222.741 331.311 223.116 330.936  c
223.491 330.562 223.678 330.106 223.678 329.568  c
223.678 329.048 223.511 328.562 223.176 328.112  c
222.842 327.661 222.381 327.313 221.793 327.067  c
221.331 326.877 220.703 326.767 219.907 326.737  c
221.558 323.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 307.000 m
246.000 313.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
240.469 324.747 m
240.469 323.765 240.617 322.920 240.914 322.211  c
241.210 321.502 241.603 320.974 242.094 320.627  c
242.475 320.352 242.869 320.214 243.275 320.214  c
243.935 320.214 244.528 320.551 245.052 321.224  c
245.708 322.057 246.036 323.187 246.036 324.613  c
246.036 325.612 245.892 326.460 245.605 327.159  c
245.317 327.857 244.950 328.364 244.503 328.679  c
244.057 328.994 243.626 329.152 243.211 329.152  c
242.391 329.152 241.707 328.667 241.161 327.698  c
240.700 326.882 240.469 325.898 240.469 324.747  c
h
241.713 324.905 m
241.713 326.090 241.859 327.057 242.151 327.806  c
242.393 328.437 242.752 328.752 243.231 328.752  c
243.459 328.752 243.696 328.649 243.941 328.444  c
244.187 328.239 244.373 327.895 244.500 327.413  c
244.695 326.685 244.792 325.659 244.792 324.334  c
244.792 323.352 244.690 322.533 244.487 321.877  c
244.335 321.391 244.138 321.046 243.897 320.843  c
243.724 320.703 243.514 320.633 243.269 320.633  c
242.981 320.633 242.725 320.762 242.501 321.021  c
242.196 321.372 241.988 321.924 241.878 322.677  c
241.768 323.431 241.713 324.173 241.713 324.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
283.000 307.000 m
283.000 313.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
279.469 327.747 m
279.469 326.765 279.617 325.920 279.914 325.211  c
280.210 324.502 280.603 323.974 281.094 323.627  c
281.475 323.352 281.869 323.214 282.275 323.214  c
282.935 323.214 283.528 323.551 284.052 324.224  c
284.708 325.057 285.036 326.187 285.036 327.613  c
285.036 328.612 284.892 329.460 284.605 330.159  c
284.317 330.857 283.950 331.364 283.503 331.679  c
283.057 331.994 282.626 332.152 282.211 332.152  c
281.391 332.152 280.707 331.667 280.161 330.698  c
279.700 329.882 279.469 328.898 279.469 327.747  c
h
280.713 327.905 m
280.713 329.090 280.859 330.057 281.151 330.806  c
281.393 331.437 281.752 331.752 282.231 331.752  c
282.459 331.752 282.696 331.649 282.941 331.444  c
283.187 331.239 283.373 330.895 283.500 330.413  c
283.695 329.685 283.792 328.659 283.792 327.334  c
283.792 326.352 283.690 325.533 283.487 324.877  c
283.335 324.391 283.138 324.046 282.897 323.843  c
282.724 323.703 282.514 323.633 282.269 323.633  c
281.981 323.633 281.725 323.762 281.501 324.021  c
281.196 324.372 280.988 324.924 280.878 325.677  c
280.768 326.431 280.713 327.173 280.713 327.905  c
h
287.625 330.768 m
287.823 330.768 287.991 330.837 288.126 330.974  c
288.261 331.112 288.329 331.278 288.329 331.473  c
288.329 331.667 288.260 331.833 288.123 331.971  c
287.985 332.109 287.819 332.177 287.625 332.177  c
287.430 332.177 287.264 332.109 287.126 331.971  c
286.989 331.833 286.920 331.667 286.920 331.473  c
286.920 331.274 286.989 331.107 287.126 330.971  c
287.264 330.836 287.430 330.768 287.625 330.768  c
h
294.643 323.392 m
294.147 324.471 l
291.558 324.471 l
290.993 325.627 l
292.114 325.792 293.003 326.208 293.659 326.877  c
294.222 327.453 294.503 328.130 294.503 328.908  c
294.503 329.361 294.411 329.780 294.227 330.165  c
294.043 330.550 293.811 330.878 293.532 331.149  c
293.252 331.420 292.941 331.638 292.599 331.803  c
292.112 332.036 291.613 332.152 291.101 332.152  c
290.584 332.152 290.209 332.064 289.974 331.888  c
289.739 331.713 289.622 331.519 289.622 331.308  c
289.622 331.189 289.670 331.084 289.768 330.993  c
289.865 330.902 289.988 330.857 290.136 330.857  c
290.246 330.857 290.342 330.874 290.425 330.908  c
290.507 330.942 290.648 331.028 290.847 331.168  c
291.164 331.388 291.486 331.498 291.812 331.498  c
292.307 331.498 292.741 331.311 293.116 330.936  c
293.491 330.562 293.678 330.106 293.678 329.568  c
293.678 329.048 293.511 328.562 293.176 328.112  c
292.842 327.661 292.381 327.313 291.793 327.067  c
291.331 326.877 290.703 326.767 289.907 326.737  c
291.558 323.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
320.000 307.000 m
320.000 313.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
323.523 324.236 m
325.618 323.214 l
325.827 323.214 l
325.827 330.482 l
325.827 330.965 325.847 331.265 325.887 331.384  c
325.928 331.502 326.011 331.593 326.138 331.657  c
326.265 331.720 326.523 331.756 326.913 331.765  c
326.913 332.000 l
323.675 332.000 l
323.675 331.765 l
324.082 331.756 324.344 331.721 324.462 331.660  c
324.581 331.599 324.663 331.516 324.710 331.412  c
324.757 331.309 324.780 330.999 324.780 330.482  c
324.780 325.836 l
324.780 325.210 324.759 324.808 324.716 324.630  c
324.687 324.495 324.633 324.395 324.554 324.332  c
324.476 324.268 324.382 324.236 324.272 324.236  c
324.115 324.236 323.897 324.302 323.618 324.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
357.000 307.000 m
357.000 313.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
355.523 324.236 m
357.618 323.214 l
357.827 323.214 l
357.827 330.482 l
357.827 330.965 357.847 331.265 357.887 331.384  c
357.928 331.502 358.011 331.593 358.138 331.657  c
358.265 331.720 358.523 331.756 358.913 331.765  c
358.913 332.000 l
355.675 332.000 l
355.675 331.765 l
356.082 331.756 356.344 331.721 356.462 331.660  c
356.581 331.599 356.663 331.516 356.710 331.412  c
356.757 331.309 356.780 330.999 356.780 330.482  c
356.780 325.836 l
356.780 325.210 356.759 324.808 356.716 324.630  c
356.687 324.495 356.633 324.395 356.554 324.332  c
356.476 324.268 356.382 324.236 356.272 324.236  c
356.115 324.236 355.897 324.302 355.618 324.433  c
h
362.625 330.768 m
362.823 330.768 362.991 330.837 363.126 330.974  c
363.261 331.112 363.329 331.278 363.329 331.473  c
363.329 331.667 363.260 331.833 363.123 331.971  c
362.985 332.109 362.819 332.177 362.625 332.177  c
362.430 332.177 362.264 332.109 362.126 331.971  c
361.989 331.833 361.920 331.667 361.920 331.473  c
361.920 331.274 361.989 331.107 362.126 330.971  c
362.264 330.836 362.430 330.768 362.625 330.768  c
h
369.643 323.392 m
369.147 324.471 l
366.558 324.471 l
365.993 325.627 l
367.114 325.792 368.003 326.208 368.659 326.877  c
369.222 327.453 369.503 328.130 369.503 328.908  c
369.503 329.361 369.411 329.780 369.227 330.165  c
369.043 330.550 368.811 330.878 368.532 331.149  c
368.252 331.420 367.941 331.638 367.599 331.803  c
367.112 332.036 366.613 332.152 366.101 332.152  c
365.584 332.152 365.209 332.064 364.974 331.888  c
364.739 331.713 364.622 331.519 364.622 331.308  c
364.622 331.189 364.670 331.084 364.768 330.993  c
364.865 330.902 364.988 330.857 365.136 330.857  c
365.246 330.857 365.342 330.874 365.425 330.908  c
365.507 330.942 365.648 331.028 365.847 331.168  c
366.164 331.388 366.486 331.498 366.812 331.498  c
367.307 331.498 367.741 331.311 368.116 330.936  c
368.491 330.562 368.678 330.106 368.678 329.568  c
368.678 329.048 368.511 328.562 368.176 328.112  c
367.842 327.661 367.381 327.313 366.793 327.067  c
366.331 326.877 365.703 326.767 364.907 326.737  c
366.558 323.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
395.000 307.000 m
395.000 313.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
401.960 330.343 m
401.357 332.000 l
396.279 332.000 l
396.279 331.765 l
397.773 330.402 398.824 329.289 399.434 328.426  c
400.043 327.563 400.348 326.773 400.348 326.058  c
400.348 325.512 400.181 325.064 399.846 324.712  c
399.512 324.361 399.112 324.186 398.647 324.186  c
398.223 324.186 397.844 324.309 397.507 324.557  c
397.171 324.804 396.922 325.167 396.761 325.646  c
396.526 325.646 l
396.632 324.863 396.904 324.262 397.342 323.843  c
397.780 323.424 398.327 323.214 398.983 323.214  c
399.681 323.214 400.264 323.439 400.732 323.887  c
401.199 324.336 401.433 324.865 401.433 325.474  c
401.433 325.910 401.332 326.346 401.128 326.782  c
400.815 327.467 400.307 328.193 399.605 328.959  c
398.551 330.110 397.893 330.804 397.631 331.041  c
399.878 331.041 l
400.335 331.041 400.656 331.024 400.840 330.990  c
401.024 330.956 401.190 330.888 401.338 330.784  c
401.486 330.680 401.615 330.533 401.725 330.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
216.000 307.000 m
216.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
223.000 307.000 m
223.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
231.000 307.000 m
231.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
238.000 307.000 m
238.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
253.000 307.000 m
253.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
261.000 307.000 m
261.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
268.000 307.000 m
268.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
275.000 307.000 m
275.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
290.000 307.000 m
290.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
298.000 307.000 m
298.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
305.000 307.000 m
305.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
313.000 307.000 m
313.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
328.000 307.000 m
328.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
335.000 307.000 m
335.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
342.000 307.000 m
342.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
350.000 307.000 m
350.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
365.000 307.000 m
365.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
372.000 307.000 m
372.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
380.000 307.000 m
380.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
387.000 307.000 m
387.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
246.000 381.500 m
246.000 8.01577 l
S
Q
q
q
0 J
1 j
newpath
246.000 382.000 m
239.000 382.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
224 380 7 13 rc
newpath
234.790 387.438 m
226.210 387.438 l
226.210 386.762 l
234.790 386.762 l
h
f
Q
newpath
234.523 383.236 m
236.618 382.214 l
236.827 382.214 l
236.827 389.482 l
236.827 389.965 236.847 390.265 236.887 390.384  c
236.928 390.502 237.011 390.593 237.138 390.657  c
237.265 390.720 237.523 390.756 237.913 390.765  c
237.913 391.000 l
234.675 391.000 l
234.675 390.765 l
235.082 390.756 235.344 390.721 235.462 390.660  c
235.581 390.599 235.663 390.516 235.710 390.412  c
235.757 390.309 235.780 389.999 235.780 389.482  c
235.780 384.836 l
235.780 384.210 235.759 383.808 235.716 383.630  c
235.687 383.495 235.633 383.395 235.554 383.332  c
235.476 383.268 235.382 383.236 235.272 383.236  c
235.115 383.236 234.897 383.302 234.618 383.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 307.000 m
239.000 307.000 l
S
Q
q
0 J
1 j
newpath
246.000 232.000 m
239.000 232.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
234.523 234.236 m
236.618 233.214 l
236.827 233.214 l
236.827 240.482 l
236.827 240.965 236.847 241.265 236.887 241.384  c
236.928 241.502 237.011 241.593 237.138 241.657  c
237.265 241.720 237.523 241.756 237.913 241.765  c
237.913 242.000 l
234.675 242.000 l
234.675 241.765 l
235.082 241.756 235.344 241.721 235.462 241.660  c
235.581 241.599 235.663 241.516 235.710 241.412  c
235.757 241.309 235.780 240.999 235.780 240.482  c
235.780 235.836 l
235.780 235.210 235.759 234.808 235.716 234.630  c
235.687 234.495 235.633 234.395 235.554 234.332  c
235.476 234.268 235.382 234.236 235.272 234.236  c
235.115 234.236 234.897 234.302 234.618 234.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 157.000 m
239.000 157.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
238.960 165.343 m
238.357 167.000 l
233.279 167.000 l
233.279 166.765 l
234.773 165.402 235.824 164.289 236.434 163.426  c
237.043 162.563 237.348 161.773 237.348 161.058  c
237.348 160.512 237.181 160.064 236.846 159.712  c
236.512 159.361 236.112 159.186 235.647 159.186  c
235.223 159.186 234.844 159.309 234.507 159.557  c
234.171 159.804 233.922 160.167 233.761 160.646  c
233.526 160.646 l
233.632 159.863 233.904 159.262 234.342 158.843  c
234.780 158.424 235.327 158.214 235.983 158.214  c
236.681 158.214 237.264 158.439 237.732 158.887  c
238.199 159.336 238.433 159.865 238.433 160.474  c
238.433 160.910 238.332 161.346 238.128 161.782  c
237.815 162.467 237.307 163.193 236.605 163.959  c
235.551 165.110 234.893 165.804 234.631 166.041  c
236.878 166.041 l
237.335 166.041 237.656 166.024 237.840 165.990  c
238.024 165.956 238.190 165.888 238.338 165.784  c
238.486 165.680 238.615 165.533 238.725 165.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 83.0000 m
239.000 83.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
233.660 85.0302 m
233.905 84.4505 234.215 84.0030 234.590 83.6877  c
234.964 83.3724 235.431 83.2148 235.989 83.2148  c
236.679 83.2148 237.208 83.4391 237.576 83.8877  c
237.856 84.2220 237.995 84.5795 237.995 84.9604  c
237.995 85.5867 237.602 86.2342 236.814 86.9028  c
237.343 87.1101 237.743 87.4064 238.014 87.7915  c
238.285 88.1766 238.420 88.6293 238.420 89.1499  c
238.420 89.8946 238.183 90.5400 237.710 91.0859  c
237.092 91.7968 236.197 92.1523 235.024 92.1523  c
234.445 92.1523 234.050 92.0804 233.841 91.9365  c
233.631 91.7926 233.526 91.6381 233.526 91.4731  c
233.526 91.3504 233.576 91.2425 233.676 91.1494  c
233.775 91.0563 233.895 91.0097 234.034 91.0097  c
234.140 91.0097 234.248 91.0266 234.358 91.0605  c
234.430 91.0817 234.593 91.1589 234.847 91.2922  c
235.101 91.4255 235.276 91.5048 235.374 91.5302  c
235.530 91.5768 235.697 91.6001 235.875 91.6001  c
236.307 91.6001 236.682 91.4329 237.002 91.0986  c
237.321 90.7643 237.481 90.3686 237.481 89.9116  c
237.481 89.5773 237.407 89.2514 237.259 88.9340  c
237.149 88.6971 237.028 88.5172 236.897 88.3945  c
236.715 88.2252 236.465 88.0718 236.148 87.9343  c
235.831 87.7967 235.507 87.7280 235.177 87.7280  c
234.974 87.7280 l
234.974 87.5376 l
235.308 87.4952 235.643 87.3746 235.980 87.1757  c
236.316 86.9768 236.561 86.7377 236.713 86.4585  c
236.865 86.1792 236.941 85.8724 236.941 85.5380  c
236.941 85.1022 236.805 84.7499 236.532 84.4812  c
236.259 84.2124 235.919 84.0781 235.513 84.0781  c
234.857 84.0781 234.309 84.4293 233.869 85.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 8.00000 m
239.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
239.049 14.8261 m
239.049 15.7275 l
237.894 15.7275 l
237.894 18.0000 l
236.846 18.0000 l
236.846 15.7275 l
233.203 15.7275 l
233.203 14.9150 l
237.195 9.21484 l
237.894 9.21484 l
237.894 14.8261 l
h
236.846 14.8261 m
236.846 10.5542 l
233.825 14.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 344.000 m
242.000 344.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 269.000 m
242.000 269.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 195.000 m
242.000 195.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 120.000 m
242.000 120.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
246.000 45.0000 m
242.000 45.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 614 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
