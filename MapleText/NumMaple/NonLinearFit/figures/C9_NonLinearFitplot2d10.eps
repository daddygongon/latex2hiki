%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ15“ú 18Žž29•ª29•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
43.0000 2.00569 344.994 350.994 rc
newpath
44.0000 340.761 m
45.3411 343.800 l
46.6823 346.339 l
48.0234 333.142 l
49.3646 339.012 l
50.7057 331.706 l
52.0469 338.598 l
53.3880 328.313 l
54.7292 338.328 l
56.0704 332.650 l
57.4115 330.873 l
58.7527 331.172 l
60.0938 341.689 l
61.4350 336.171 l
62.7761 325.955 l
64.1173 338.610 l
65.4585 328.409 l
66.7996 333.260 l
68.1408 327.565 l
69.4819 334.533 l
70.8231 328.657 l
72.1642 323.696 l
73.5054 330.195 l
74.8465 331.087 l
76.1877 321.850 l
77.5289 328.209 l
78.8700 332.468 l
80.2112 334.709 l
81.5523 321.066 l
82.8935 323.521 l
84.2346 318.555 l
85.5758 324.532 l
86.9170 314.400 l
88.2581 313.391 l
89.5993 310.149 l
90.9404 319.337 l
92.2816 316.967 l
93.6227 320.200 l
94.9639 304.753 l
96.3050 309.269 l
97.6462 310.474 l
98.9874 309.513 l
100.328 322.100 l
101.669 320.508 l
103.010 309.034 l
104.352 309.116 l
105.693 298.431 l
107.034 295.072 l
108.375 309.804 l
109.716 289.144 l
111.057 301.105 l
112.399 288.918 l
113.740 279.921 l
115.081 291.305 l
116.422 291.805 l
117.763 274.257 l
119.104 270.114 l
120.445 271.643 l
121.787 286.703 l
123.128 276.416 l
124.469 271.159 l
125.810 274.747 l
127.151 271.886 l
128.492 241.152 l
129.834 248.430 l
131.175 225.429 l
132.516 261.516 l
133.857 236.918 l
135.198 253.283 l
136.539 217.177 l
137.880 230.546 l
139.222 186.146 l
140.563 228.884 l
141.904 192.415 l
143.245 208.480 l
144.586 172.007 l
145.927 178.689 l
147.269 191.405 l
148.610 137.707 l
149.951 165.817 l
151.292 110.582 l
152.633 105.316 l
153.974 150.665 l
155.316 127.328 l
156.657 72.1190 l
157.998 69.8082 l
159.339 120.542 l
160.680 50.4031 l
162.021 80.9845 l
163.362 93.1757 l
164.704 116.964 l
166.045 71.0960 l
167.386 85.5571 l
168.727 79.9982 l
170.068 104.282 l
171.409 80.0719 l
172.751 80.0126 l
174.092 138.717 l
175.433 144.225 l
176.774 124.038 l
178.115 105.790 l
179.456 79.9110 l
180.797 93.2400 l
182.139 128.126 l
183.480 156.804 l
184.821 146.844 l
186.162 87.8830 l
187.503 101.431 l
188.844 142.621 l
190.186 141.389 l
191.527 102.673 l
192.868 111.233 l
194.209 91.2424 l
195.550 124.701 l
196.891 135.553 l
198.233 90.8519 l
199.574 85.1340 l
200.915 103.517 l
202.256 71.7502 l
203.597 81.8150 l
204.938 100.290 l
206.279 59.8038 l
207.621 82.5846 l
208.962 82.3200 l
210.303 113.857 l
211.644 118.448 l
212.985 88.9067 l
214.326 103.746 l
215.668 104.214 l
217.009 93.5053 l
218.350 119.886 l
219.691 92.7012 l
221.032 135.676 l
222.373 121.575 l
223.714 100.351 l
225.056 141.315 l
226.397 118.587 l
227.738 182.235 l
229.079 177.287 l
230.420 136.726 l
231.761 191.632 l
233.103 181.822 l
234.444 164.394 l
235.785 224.196 l
237.126 193.678 l
238.467 215.238 l
239.808 202.654 l
241.150 200.475 l
242.491 240.751 l
243.832 233.784 l
245.173 240.573 l
246.514 261.646 l
247.855 241.522 l
249.196 239.683 l
250.538 265.597 l
251.879 272.255 l
253.220 257.253 l
254.561 258.564 l
255.902 259.976 l
257.243 274.393 l
258.585 290.948 l
259.926 280.234 l
261.267 283.358 l
262.608 289.662 l
263.949 297.177 l
265.290 302.685 l
266.631 309.428 l
267.973 311.223 l
269.314 288.756 l
270.655 308.202 l
271.996 298.956 l
273.337 299.814 l
274.678 313.827 l
276.020 307.816 l
277.361 318.002 l
278.702 320.015 l
280.043 317.397 l
281.384 310.142 l
282.725 315.533 l
284.067 320.837 l
285.408 314.582 l
286.749 311.012 l
288.090 314.137 l
289.431 325.351 l
290.772 321.260 l
292.113 322.286 l
293.455 318.082 l
294.796 327.236 l
296.137 334.311 l
297.478 319.530 l
298.819 319.359 l
300.160 321.136 l
301.502 330.949 l
302.843 320.554 l
304.184 326.007 l
305.525 324.913 l
306.866 327.928 l
308.207 328.612 l
309.548 325.216 l
310.890 340.474 l
312.231 335.914 l
313.572 327.616 l
314.913 337.544 l
316.254 336.909 l
317.595 334.751 l
318.937 340.373 l
320.278 338.043 l
321.619 341.601 l
322.960 341.107 l
324.301 342.108 l
325.642 343.241 l
326.983 333.611 l
328.325 332.366 l
329.666 332.534 l
331.007 340.370 l
332.348 343.892 l
333.689 340.320 l
335.030 342.396 l
336.372 345.212 l
337.713 332.255 l
339.054 343.837 l
340.395 343.080 l
341.736 338.308 l
343.077 336.196 l
344.419 343.067 l
345.760 334.137 l
347.101 336.426 l
348.442 341.567 l
349.783 338.216 l
351.124 342.220 l
352.465 349.540 l
353.807 349.777 l
355.148 335.607 l
356.489 339.209 l
357.830 347.195 l
359.171 349.209 l
360.512 344.411 l
361.854 350.243 l
363.195 337.152 l
364.536 345.208 l
365.877 338.624 l
367.218 348.396 l
368.559 343.931 l
369.900 348.523 l
371.242 341.390 l
372.583 345.533 l
373.924 342.571 l
375.265 338.877 l
376.606 347.236 l
377.947 338.766 l
379.289 352.000 l
380.630 343.258 l
381.971 351.713 l
383.312 349.168 l
384.653 343.039 l
385.994 341.481 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
43.0000 2.00569 344.994 350.994 rc
1.00000 0 0 RG
newpath
44.0000 303.297 m
45.7980 303.236 l
47.3625 303.180 l
49.1220 303.116 l
50.8931 303.048 l
52.6557 302.977 l
54.2900 302.909 l
55.9821 302.835 l
57.7322 302.755 l
59.4766 302.672 l
61.2709 302.582 l
62.8514 302.500 l
64.6306 302.402 l
66.4171 302.299 l
68.1388 302.195 l
69.7022 302.096 l
71.5613 301.972 l
73.1361 301.862 l
74.9681 301.726 l
76.5897 301.600 l
78.3688 301.454 l
80.0630 301.306 l
81.8306 301.143 l
83.4539 300.985 l
85.2048 300.804 l
87.0236 300.604 l
88.6068 300.419 l
90.3167 300.206 l
92.0832 299.972 l
93.8113 299.727 l
95.4834 299.474 l
97.3400 299.172 l
99.0082 298.880 l
100.789 298.544 l
102.403 298.217 l
104.168 297.830 l
105.828 297.437 l
107.563 296.992 l
109.260 296.518 l
111.036 295.976 l
112.747 295.405 l
114.497 294.764 l
116.232 294.064 l
117.826 293.356 l
119.654 292.456 l
121.288 291.561 l
123.031 290.497 l
124.698 289.356 l
126.550 287.924 l
128.154 286.517 l
129.974 284.700 l
131.633 282.798 l
133.448 280.394 l
135.013 277.992 l
136.796 274.802 l
138.519 271.155 l
140.240 266.815 l
141.955 261.621 l
143.603 255.593 l
145.384 247.607 l
147.081 238.159 l
148.867 225.678 l
150.485 211.467 l
152.272 191.604 l
153.128 180.225 l
153.984 167.472 l
154.838 153.289 l
155.692 137.607 l
156.583 119.688 l
157.475 100.425 l
158.297 81.9029 l
159.118 63.2608 l
159.959 44.9571 l
160.801 28.6287 l
161.730 14.4785 l
162.658 5.98233 l
162.869 4.97198 l
163.079 4.31759 l
163.289 4.02340 l
163.499 4.09094 l
163.920 5.30416 l
164.340 7.91662 l
165.201 17.2443 l
166.061 30.9785 l
166.935 48.0466 l
167.810 66.7924 l
168.614 84.4300 l
169.418 101.699 l
170.275 119.142 l
171.132 135.245 l
171.983 149.738 l
172.833 162.719 l
174.653 185.703 l
176.259 201.259 l
178.111 214.766 l
179.783 223.693 l
181.437 230.076 l
183.216 234.688 l
184.109 236.230 l
185.002 237.297 l
185.409 237.630 l
185.815 237.870 l
186.221 238.018 l
186.627 238.073 l
187.059 238.032 l
187.490 237.888 l
187.922 237.639 l
188.353 237.285 l
189.195 236.286 l
190.037 234.864 l
191.863 230.213 l
193.442 224.220 l
195.257 214.610 l
196.962 202.283 l
198.651 186.126 l
200.342 165.105 l
201.204 152.237 l
202.066 137.819 l
202.980 120.863 l
203.893 102.357 l
204.731 84.3766 l
205.569 65.9991 l
206.396 48.2828 l
207.223 32.0486 l
208.107 17.7262 l
208.991 8.00323 l
209.432 5.26080 l
209.873 4.05905 l
209.984 4.00570 l
210.094 4.05191 l
210.204 4.19760 l
210.315 4.44262 l
210.535 5.22879 l
210.756 6.40466 l
211.547 13.6742 l
212.339 25.1348 l
213.277 42.7613 l
214.215 63.0484 l
215.000 80.8533 l
215.785 98.5853 l
216.703 118.501 l
217.621 137.019 l
218.497 153.143 l
219.373 167.691 l
220.155 179.380 l
220.937 189.915 l
222.697 209.868 l
224.468 225.620 l
226.231 237.965 l
227.865 247.133 l
229.557 254.848 l
231.307 261.351 l
233.051 266.673 l
234.846 271.205 l
236.426 274.567 l
238.205 277.787 l
239.992 280.532 l
241.714 282.803 l
243.277 284.601 l
245.136 286.468 l
246.711 287.856 l
248.543 289.282 l
250.165 290.401 l
251.944 291.497 l
253.638 292.430 l
255.405 293.304 l
257.029 294.029 l
258.780 294.739 l
260.598 295.406 l
262.182 295.936 l
263.892 296.462 l
265.658 296.959 l
267.386 297.405 l
269.058 297.804 l
270.915 298.211 l
272.583 298.550 l
274.364 298.885 l
275.978 299.167 l
277.743 299.455 l
279.403 299.708 l
281.139 299.956 l
282.835 300.182 l
284.612 300.404 l
286.322 300.604 l
288.072 300.797 l
289.807 300.977 l
291.402 301.133 l
293.229 301.301 l
294.863 301.444 l
296.606 301.588 l
298.274 301.719 l
300.126 301.856 l
301.729 301.969 l
303.549 302.090 l
305.208 302.196 l
307.023 302.305 l
308.589 302.395 l
310.372 302.493 l
312.094 302.583 l
313.815 302.670 l
315.530 302.751 l
317.178 302.827 l
318.959 302.905 l
320.656 302.976 l
322.443 303.047 l
324.060 303.110 l
325.847 303.176 l
327.559 303.236 l
329.267 303.294 l
331.051 303.353 l
332.693 303.404 l
334.376 303.455 l
336.234 303.509 l
337.916 303.556 l
339.636 303.603 l
341.385 303.648 l
342.993 303.689 l
344.707 303.730 l
346.408 303.770 l
348.228 303.811 l
349.834 303.846 l
351.687 303.886 l
353.358 303.920 l
355.013 303.952 l
356.791 303.986 l
358.577 304.019 l
360.203 304.049 l
361.928 304.078 l
363.612 304.107 l
365.438 304.137 l
367.018 304.162 l
368.832 304.189 l
370.537 304.215 l
372.227 304.239 l
373.917 304.263 l
375.641 304.286 l
377.469 304.311 l
379.144 304.332 l
380.798 304.353 l
382.567 304.374 l
384.331 304.395 l
385.994 304.414 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
41.0000 355.000 m
385.994 355.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
207 375 14 15 rc
newpath
213.278 381.255 m
213.486 381.475 213.642 381.695 213.748 381.915  c
213.824 382.067 213.949 382.467 214.123 383.115  c
214.681 382.277 l
214.829 382.074 215.009 381.880 215.221 381.696  c
215.432 381.512 215.619 381.386 215.779 381.318  c
215.881 381.276 215.993 381.255 216.116 381.255  c
216.298 381.255 216.443 381.304 216.551 381.401  c
216.658 381.498 216.712 381.617 216.712 381.756  c
216.712 381.917 216.681 382.027 216.617 382.086  c
216.499 382.192 216.363 382.245 216.211 382.245  c
216.122 382.245 216.027 382.226 215.925 382.188  c
215.726 382.120 215.593 382.086 215.525 382.086  c
215.424 382.086 215.303 382.146 215.164 382.264  c
214.901 382.484 214.588 382.910 214.224 383.540  c
214.745 385.724 l
214.825 386.058 214.893 386.258 214.948 386.324  c
215.003 386.389 215.058 386.422 215.113 386.422  c
215.202 386.422 215.305 386.373 215.424 386.276  c
215.657 386.081 215.856 385.827 216.021 385.514  c
216.243 385.628 l
215.976 386.128 215.638 386.543 215.227 386.873  c
214.994 387.059 214.798 387.152 214.637 387.152  c
214.400 387.152 214.211 387.019 214.072 386.752  c
213.983 386.587 213.799 385.876 213.520 384.619  c
212.859 385.766 212.330 386.504 211.933 386.835  c
211.675 387.046 211.425 387.152 211.184 387.152  c
211.014 387.152 210.860 387.091 210.720 386.968  c
210.619 386.875 210.568 386.750 210.568 386.593  c
210.568 386.454 210.614 386.337 210.708 386.244  c
210.801 386.151 210.915 386.105 211.050 386.105  c
211.186 386.105 211.330 386.172 211.482 386.308  c
211.592 386.405 211.677 386.454 211.736 386.454  c
211.787 386.454 211.852 386.420 211.933 386.352  c
212.132 386.191 212.402 385.844 212.745 385.311  c
213.088 384.778 213.312 384.393 213.418 384.156  c
213.156 383.127 213.014 382.584 212.993 382.524  c
212.895 382.249 212.768 382.055 212.612 381.940  c
212.455 381.826 212.225 381.769 211.920 381.769  c
211.823 381.769 211.710 381.773 211.584 381.782  c
211.584 381.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
110.000 355.000 m
110.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
112.643 367.392 m
112.147 368.471 l
109.558 368.471 l
108.993 369.627 l
110.114 369.792 111.003 370.208 111.659 370.877  c
112.222 371.453 112.503 372.130 112.503 372.908  c
112.503 373.361 112.411 373.780 112.227 374.165  c
112.043 374.550 111.811 374.878 111.532 375.149  c
111.252 375.420 110.941 375.638 110.599 375.803  c
110.112 376.036 109.613 376.152 109.101 376.152  c
108.584 376.152 108.209 376.064 107.974 375.888  c
107.739 375.713 107.622 375.519 107.622 375.308  c
107.622 375.189 107.670 375.084 107.768 374.993  c
107.865 374.902 107.988 374.857 108.136 374.857  c
108.246 374.857 108.342 374.874 108.425 374.908  c
108.507 374.942 108.648 375.028 108.847 375.168  c
109.164 375.388 109.486 375.498 109.812 375.498  c
110.307 375.498 110.741 375.311 111.116 374.936  c
111.491 374.562 111.678 374.106 111.678 373.568  c
111.678 373.048 111.511 372.562 111.176 372.112  c
110.842 371.661 110.381 371.313 109.793 371.067  c
109.331 370.877 108.703 370.767 107.907 370.737  c
109.558 367.392 l
h
114.469 371.747 m
114.469 370.765 114.617 369.920 114.914 369.211  c
115.210 368.502 115.603 367.974 116.094 367.627  c
116.475 367.352 116.869 367.214 117.275 367.214  c
117.935 367.214 118.528 367.551 119.052 368.224  c
119.708 369.057 120.036 370.187 120.036 371.613  c
120.036 372.612 119.892 373.460 119.605 374.159  c
119.317 374.857 118.950 375.364 118.503 375.679  c
118.057 375.994 117.626 376.152 117.211 376.152  c
116.391 376.152 115.707 375.667 115.161 374.698  c
114.700 373.882 114.469 372.898 114.469 371.747  c
h
115.713 371.905 m
115.713 373.090 115.859 374.057 116.151 374.806  c
116.393 375.437 116.752 375.752 117.231 375.752  c
117.459 375.752 117.696 375.649 117.941 375.444  c
118.187 375.239 118.373 374.895 118.500 374.413  c
118.695 373.685 118.792 372.659 118.792 371.334  c
118.792 370.352 118.690 369.533 118.487 368.877  c
118.335 368.391 118.138 368.046 117.897 367.843  c
117.724 367.703 117.514 367.633 117.269 367.633  c
116.981 367.633 116.725 367.762 116.501 368.021  c
116.196 368.372 115.988 368.924 115.878 369.677  c
115.768 370.431 115.713 371.173 115.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
177.000 355.000 m
177.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
172.523 368.236 m
174.618 367.214 l
174.827 367.214 l
174.827 374.482 l
174.827 374.965 174.847 375.265 174.887 375.384  c
174.928 375.502 175.011 375.593 175.138 375.657  c
175.265 375.720 175.523 375.756 175.913 375.765  c
175.913 376.000 l
172.675 376.000 l
172.675 375.765 l
173.082 375.756 173.344 375.721 173.462 375.660  c
173.581 375.599 173.663 375.516 173.710 375.412  c
173.757 375.309 173.780 374.999 173.780 374.482  c
173.780 369.836 l
173.780 369.210 173.759 368.808 173.716 368.630  c
173.687 368.495 173.633 368.395 173.554 368.332  c
173.476 368.268 173.382 368.236 173.272 368.236  c
173.115 368.236 172.897 368.302 172.618 368.433  c
h
178.469 371.747 m
178.469 370.765 178.617 369.920 178.914 369.211  c
179.210 368.502 179.603 367.974 180.094 367.627  c
180.475 367.352 180.869 367.214 181.275 367.214  c
181.935 367.214 182.528 367.551 183.052 368.224  c
183.708 369.057 184.036 370.187 184.036 371.613  c
184.036 372.612 183.892 373.460 183.605 374.159  c
183.317 374.857 182.950 375.364 182.503 375.679  c
182.057 375.994 181.626 376.152 181.211 376.152  c
180.391 376.152 179.707 375.667 179.161 374.698  c
178.700 373.882 178.469 372.898 178.469 371.747  c
h
179.713 371.905 m
179.713 373.090 179.859 374.057 180.151 374.806  c
180.393 375.437 180.752 375.752 181.231 375.752  c
181.459 375.752 181.696 375.649 181.941 375.444  c
182.187 375.239 182.373 374.895 182.500 374.413  c
182.695 373.685 182.792 372.659 182.792 371.334  c
182.792 370.352 182.690 369.533 182.487 368.877  c
182.335 368.391 182.138 368.046 181.897 367.843  c
181.724 367.703 181.514 367.633 181.269 367.633  c
180.981 367.633 180.725 367.762 180.501 368.021  c
180.196 368.372 179.988 368.924 179.878 369.677  c
179.768 370.431 179.713 371.173 179.713 371.905  c
h
185.469 371.747 m
185.469 370.765 185.617 369.920 185.914 369.211  c
186.210 368.502 186.603 367.974 187.094 367.627  c
187.475 367.352 187.869 367.214 188.275 367.214  c
188.935 367.214 189.528 367.551 190.052 368.224  c
190.708 369.057 191.036 370.187 191.036 371.613  c
191.036 372.612 190.892 373.460 190.605 374.159  c
190.317 374.857 189.950 375.364 189.503 375.679  c
189.057 375.994 188.626 376.152 188.211 376.152  c
187.391 376.152 186.707 375.667 186.161 374.698  c
185.700 373.882 185.469 372.898 185.469 371.747  c
h
186.713 371.905 m
186.713 373.090 186.859 374.057 187.151 374.806  c
187.393 375.437 187.752 375.752 188.231 375.752  c
188.459 375.752 188.696 375.649 188.941 375.444  c
189.187 375.239 189.373 374.895 189.500 374.413  c
189.695 373.685 189.792 372.659 189.792 371.334  c
189.792 370.352 189.690 369.533 189.487 368.877  c
189.335 368.391 189.138 368.046 188.897 367.843  c
188.724 367.703 188.514 367.633 188.269 367.633  c
187.981 367.633 187.725 367.762 187.501 368.021  c
187.196 368.372 186.988 368.924 186.878 369.677  c
186.768 370.431 186.713 371.173 186.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
244.000 355.000 m
244.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
239.523 368.236 m
241.618 367.214 l
241.827 367.214 l
241.827 374.482 l
241.827 374.965 241.847 375.265 241.887 375.384  c
241.928 375.502 242.011 375.593 242.138 375.657  c
242.265 375.720 242.523 375.756 242.913 375.765  c
242.913 376.000 l
239.675 376.000 l
239.675 375.765 l
240.082 375.756 240.344 375.721 240.462 375.660  c
240.581 375.599 240.663 375.516 240.710 375.412  c
240.757 375.309 240.780 374.999 240.780 374.482  c
240.780 369.836 l
240.780 369.210 240.759 368.808 240.716 368.630  c
240.687 368.495 240.633 368.395 240.554 368.332  c
240.476 368.268 240.382 368.236 240.272 368.236  c
240.115 368.236 239.897 368.302 239.618 368.433  c
h
250.643 367.392 m
250.147 368.471 l
247.558 368.471 l
246.993 369.627 l
248.114 369.792 249.003 370.208 249.659 370.877  c
250.222 371.453 250.503 372.130 250.503 372.908  c
250.503 373.361 250.411 373.780 250.227 374.165  c
250.043 374.550 249.811 374.878 249.532 375.149  c
249.252 375.420 248.941 375.638 248.599 375.803  c
248.112 376.036 247.613 376.152 247.101 376.152  c
246.584 376.152 246.209 376.064 245.974 375.888  c
245.739 375.713 245.622 375.519 245.622 375.308  c
245.622 375.189 245.670 375.084 245.768 374.993  c
245.865 374.902 245.988 374.857 246.136 374.857  c
246.246 374.857 246.342 374.874 246.425 374.908  c
246.507 374.942 246.648 375.028 246.847 375.168  c
247.164 375.388 247.486 375.498 247.812 375.498  c
248.307 375.498 248.741 375.311 249.116 374.936  c
249.491 374.562 249.678 374.106 249.678 373.568  c
249.678 373.048 249.511 372.562 249.176 372.112  c
248.842 371.661 248.381 371.313 247.793 371.067  c
247.331 370.877 246.703 370.767 245.907 370.737  c
247.558 367.392 l
h
252.469 371.747 m
252.469 370.765 252.617 369.920 252.914 369.211  c
253.210 368.502 253.603 367.974 254.094 367.627  c
254.475 367.352 254.869 367.214 255.275 367.214  c
255.935 367.214 256.528 367.551 257.052 368.224  c
257.708 369.057 258.036 370.187 258.036 371.613  c
258.036 372.612 257.892 373.460 257.605 374.159  c
257.317 374.857 256.950 375.364 256.503 375.679  c
256.057 375.994 255.626 376.152 255.211 376.152  c
254.391 376.152 253.707 375.667 253.161 374.698  c
252.700 373.882 252.469 372.898 252.469 371.747  c
h
253.713 371.905 m
253.713 373.090 253.859 374.057 254.151 374.806  c
254.393 375.437 254.752 375.752 255.231 375.752  c
255.459 375.752 255.696 375.649 255.941 375.444  c
256.187 375.239 256.373 374.895 256.500 374.413  c
256.695 373.685 256.792 372.659 256.792 371.334  c
256.792 370.352 256.690 369.533 256.487 368.877  c
256.335 368.391 256.138 368.046 255.897 367.843  c
255.724 367.703 255.514 367.633 255.269 367.633  c
254.981 367.633 254.725 367.762 254.501 368.021  c
254.196 368.372 253.988 368.924 253.878 369.677  c
253.768 370.431 253.713 371.173 253.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
311.000 355.000 m
311.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
310.960 374.343 m
310.357 376.000 l
305.279 376.000 l
305.279 375.765 l
306.773 374.402 307.824 373.289 308.434 372.426  c
309.043 371.563 309.348 370.773 309.348 370.058  c
309.348 369.512 309.181 369.064 308.846 368.712  c
308.512 368.361 308.112 368.186 307.647 368.186  c
307.223 368.186 306.844 368.309 306.507 368.557  c
306.171 368.804 305.922 369.167 305.761 369.646  c
305.526 369.646 l
305.632 368.863 305.904 368.262 306.342 367.843  c
306.780 367.424 307.327 367.214 307.983 367.214  c
308.681 367.214 309.264 367.439 309.732 367.887  c
310.199 368.336 310.433 368.865 310.433 369.474  c
310.433 369.910 310.332 370.346 310.128 370.782  c
309.815 371.467 309.307 372.193 308.605 372.959  c
307.551 374.110 306.893 374.804 306.631 375.041  c
308.878 375.041 l
309.335 375.041 309.656 375.024 309.840 374.990  c
310.024 374.956 310.190 374.888 310.338 374.784  c
310.486 374.680 310.615 374.533 310.725 374.343  c
h
312.469 371.747 m
312.469 370.765 312.617 369.920 312.914 369.211  c
313.210 368.502 313.603 367.974 314.094 367.627  c
314.475 367.352 314.869 367.214 315.275 367.214  c
315.935 367.214 316.528 367.551 317.052 368.224  c
317.708 369.057 318.036 370.187 318.036 371.613  c
318.036 372.612 317.892 373.460 317.605 374.159  c
317.317 374.857 316.950 375.364 316.503 375.679  c
316.057 375.994 315.626 376.152 315.211 376.152  c
314.391 376.152 313.707 375.667 313.161 374.698  c
312.700 373.882 312.469 372.898 312.469 371.747  c
h
313.713 371.905 m
313.713 373.090 313.859 374.057 314.151 374.806  c
314.393 375.437 314.752 375.752 315.231 375.752  c
315.459 375.752 315.696 375.649 315.941 375.444  c
316.187 375.239 316.373 374.895 316.500 374.413  c
316.695 373.685 316.792 372.659 316.792 371.334  c
316.792 370.352 316.690 369.533 316.487 368.877  c
316.335 368.391 316.138 368.046 315.897 367.843  c
315.724 367.703 315.514 367.633 315.269 367.633  c
314.981 367.633 314.725 367.762 314.501 368.021  c
314.196 368.372 313.988 368.924 313.878 369.677  c
313.768 370.431 313.713 371.173 313.713 371.905  c
h
319.469 371.747 m
319.469 370.765 319.617 369.920 319.914 369.211  c
320.210 368.502 320.603 367.974 321.094 367.627  c
321.475 367.352 321.869 367.214 322.275 367.214  c
322.935 367.214 323.528 367.551 324.052 368.224  c
324.708 369.057 325.036 370.187 325.036 371.613  c
325.036 372.612 324.892 373.460 324.605 374.159  c
324.317 374.857 323.950 375.364 323.503 375.679  c
323.057 375.994 322.626 376.152 322.211 376.152  c
321.391 376.152 320.707 375.667 320.161 374.698  c
319.700 373.882 319.469 372.898 319.469 371.747  c
h
320.713 371.905 m
320.713 373.090 320.859 374.057 321.151 374.806  c
321.393 375.437 321.752 375.752 322.231 375.752  c
322.459 375.752 322.696 375.649 322.941 375.444  c
323.187 375.239 323.373 374.895 323.500 374.413  c
323.695 373.685 323.792 372.659 323.792 371.334  c
323.792 370.352 323.690 369.533 323.487 368.877  c
323.335 368.391 323.138 368.046 322.897 367.843  c
322.724 367.703 322.514 367.633 322.269 367.633  c
321.981 367.633 321.725 367.762 321.501 368.021  c
321.196 368.372 320.988 368.924 320.878 369.677  c
320.768 370.431 320.713 371.173 320.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
378.000 355.000 m
378.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
377.960 374.343 m
377.357 376.000 l
372.279 376.000 l
372.279 375.765 l
373.773 374.402 374.824 373.289 375.434 372.426  c
376.043 371.563 376.348 370.773 376.348 370.058  c
376.348 369.512 376.181 369.064 375.846 368.712  c
375.512 368.361 375.112 368.186 374.647 368.186  c
374.223 368.186 373.844 368.309 373.507 368.557  c
373.171 368.804 372.922 369.167 372.761 369.646  c
372.526 369.646 l
372.632 368.863 372.904 368.262 373.342 367.843  c
373.780 367.424 374.327 367.214 374.983 367.214  c
375.681 367.214 376.264 367.439 376.732 367.887  c
377.199 368.336 377.433 368.865 377.433 369.474  c
377.433 369.910 377.332 370.346 377.128 370.782  c
376.815 371.467 376.307 372.193 375.605 372.959  c
374.551 374.110 373.893 374.804 373.631 375.041  c
375.878 375.041 l
376.335 375.041 376.656 375.024 376.840 374.990  c
377.024 374.956 377.190 374.888 377.338 374.784  c
377.486 374.680 377.615 374.533 377.725 374.343  c
h
384.643 367.392 m
384.147 368.471 l
381.558 368.471 l
380.993 369.627 l
382.114 369.792 383.003 370.208 383.659 370.877  c
384.222 371.453 384.503 372.130 384.503 372.908  c
384.503 373.361 384.411 373.780 384.227 374.165  c
384.043 374.550 383.811 374.878 383.532 375.149  c
383.252 375.420 382.941 375.638 382.599 375.803  c
382.112 376.036 381.613 376.152 381.101 376.152  c
380.584 376.152 380.209 376.064 379.974 375.888  c
379.739 375.713 379.622 375.519 379.622 375.308  c
379.622 375.189 379.670 375.084 379.768 374.993  c
379.865 374.902 379.988 374.857 380.136 374.857  c
380.246 374.857 380.342 374.874 380.425 374.908  c
380.507 374.942 380.648 375.028 380.847 375.168  c
381.164 375.388 381.486 375.498 381.812 375.498  c
382.307 375.498 382.741 375.311 383.116 374.936  c
383.491 374.562 383.678 374.106 383.678 373.568  c
383.678 373.048 383.511 372.562 383.176 372.112  c
382.842 371.661 382.381 371.313 381.793 371.067  c
381.331 370.877 380.703 370.767 379.907 370.737  c
381.558 367.392 l
h
386.469 371.747 m
386.469 370.765 386.617 369.920 386.914 369.211  c
387.210 368.502 387.603 367.974 388.094 367.627  c
388.475 367.352 388.869 367.214 389.275 367.214  c
389.935 367.214 390.528 367.551 391.052 368.224  c
391.708 369.057 392.036 370.187 392.036 371.613  c
392.036 372.612 391.892 373.460 391.605 374.159  c
391.317 374.857 390.950 375.364 390.503 375.679  c
390.057 375.994 389.626 376.152 389.211 376.152  c
388.391 376.152 387.707 375.667 387.161 374.698  c
386.700 373.882 386.469 372.898 386.469 371.747  c
h
387.713 371.905 m
387.713 373.090 387.859 374.057 388.151 374.806  c
388.393 375.437 388.752 375.752 389.231 375.752  c
389.459 375.752 389.696 375.649 389.941 375.444  c
390.187 375.239 390.373 374.895 390.500 374.413  c
390.695 373.685 390.792 372.659 390.792 371.334  c
390.792 370.352 390.690 369.533 390.487 368.877  c
390.335 368.391 390.138 368.046 389.897 367.843  c
389.724 367.703 389.514 367.633 389.269 367.633  c
388.981 367.633 388.725 367.762 388.501 368.021  c
388.196 368.372 387.988 368.924 387.878 369.677  c
387.768 370.431 387.713 371.173 387.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
56.0000 355.000 m
56.0000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
69.0000 355.000 m
69.0000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
83.0000 355.000 m
83.0000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
96.0000 355.000 m
96.0000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
123.000 355.000 m
123.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
137.000 355.000 m
137.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
150.000 355.000 m
150.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
163.000 355.000 m
163.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
190.000 355.000 m
190.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
204.000 355.000 m
204.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
217.000 355.000 m
217.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
230.000 355.000 m
230.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
257.000 355.000 m
257.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
271.000 355.000 m
271.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
284.000 355.000 m
284.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
297.000 355.000 m
297.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
324.000 355.000 m
324.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
338.000 355.000 m
338.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
351.000 355.000 m
351.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
365.000 355.000 m
365.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
41.0000 355.000 m
41.0000 4.00570 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 171 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
41.0000 336.000 m
36.0000 336.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.9604 344.343 m
31.3574 346.000 l
26.2793 346.000 l
26.2793 345.765 l
27.7731 344.402 28.8247 343.289 29.4340 342.426  c
30.0434 341.563 30.3481 340.773 30.3481 340.058  c
30.3481 339.512 30.1809 339.064 29.8466 338.712  c
29.5123 338.361 29.1124 338.186 28.6469 338.186  c
28.2238 338.186 27.8439 338.309 27.5075 338.557  c
27.1711 338.804 26.9225 339.167 26.7617 339.646  c
26.5268 339.646 l
26.6326 338.863 26.9045 338.262 27.3425 337.843  c
27.7805 337.424 28.3274 337.214 28.9834 337.214  c
29.6816 337.214 30.2645 337.439 30.7321 337.887  c
31.1997 338.336 31.4335 338.865 31.4335 339.474  c
31.4335 339.910 31.3320 340.346 31.1289 340.782  c
30.8157 341.467 30.3079 342.193 29.6054 342.959  c
28.5517 344.110 27.8937 344.804 27.6313 345.041  c
29.8784 345.041 l
30.3354 345.041 30.6560 345.024 30.8400 344.990  c
31.0241 344.956 31.1902 344.888 31.3383 344.784  c
31.4864 344.680 31.6155 344.533 31.7255 344.343  c
h
33.4697 341.747 m
33.4697 340.765 33.6178 339.920 33.9140 339.211  c
34.2102 338.502 34.6038 337.974 35.0947 337.627  c
35.4755 337.352 35.8691 337.214 36.2753 337.214  c
36.9355 337.214 37.5279 337.551 38.0527 338.224  c
38.7086 339.057 39.0366 340.187 39.0366 341.613  c
39.0366 342.612 38.8927 343.460 38.6049 344.159  c
38.3172 344.857 37.9501 345.364 37.5036 345.679  c
37.0572 345.994 36.6266 346.152 36.2119 346.152  c
35.3909 346.152 34.7075 345.667 34.1616 344.698  c
33.7003 343.882 33.4697 342.898 33.4697 341.747  c
h
34.7138 341.905 m
34.7138 343.090 34.8598 344.057 35.1518 344.806  c
35.3930 345.437 35.7527 345.752 36.2309 345.752  c
36.4594 345.752 36.6964 345.649 36.9418 345.444  c
37.1873 345.239 37.3735 344.895 37.5004 344.413  c
37.6951 343.685 37.7924 342.659 37.7924 341.334  c
37.7924 340.352 37.6909 339.533 37.4877 338.877  c
37.3354 338.391 37.1386 338.046 36.8974 337.843  c
36.7239 337.703 36.5144 337.633 36.2690 337.633  c
35.9812 337.633 35.7252 337.762 35.5009 338.021  c
35.1962 338.372 34.9889 338.924 34.8789 339.677  c
34.7688 340.431 34.7138 341.173 34.7138 341.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 276.000 m
36.0000 276.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.0493 282.826 m
32.0493 283.727 l
30.8940 283.727 l
30.8940 286.000 l
29.8466 286.000 l
29.8466 283.727 l
26.2031 283.727 l
26.2031 282.915 l
30.1958 277.214 l
30.8940 277.214 l
30.8940 282.826 l
h
29.8466 282.826 m
29.8466 278.554 l
26.8252 282.826 l
h
33.4697 281.747 m
33.4697 280.765 33.6178 279.920 33.9140 279.211  c
34.2102 278.502 34.6038 277.974 35.0947 277.627  c
35.4755 277.352 35.8691 277.214 36.2753 277.214  c
36.9355 277.214 37.5279 277.551 38.0527 278.224  c
38.7086 279.057 39.0366 280.187 39.0366 281.613  c
39.0366 282.612 38.8927 283.460 38.6049 284.159  c
38.3172 284.857 37.9501 285.364 37.5036 285.679  c
37.0572 285.994 36.6266 286.152 36.2119 286.152  c
35.3909 286.152 34.7075 285.667 34.1616 284.698  c
33.7003 283.882 33.4697 282.898 33.4697 281.747  c
h
34.7138 281.905 m
34.7138 283.090 34.8598 284.057 35.1518 284.806  c
35.3930 285.437 35.7527 285.752 36.2309 285.752  c
36.4594 285.752 36.6964 285.649 36.9418 285.444  c
37.1873 285.239 37.3735 284.895 37.5004 284.413  c
37.6951 283.685 37.7924 282.659 37.7924 281.334  c
37.7924 280.352 37.6909 279.533 37.4877 278.877  c
37.3354 278.391 37.1386 278.046 36.8974 277.843  c
36.7239 277.703 36.5144 277.633 36.2690 277.633  c
35.9812 277.633 35.7252 277.762 35.5009 278.021  c
35.1962 278.372 34.9889 278.924 34.8789 279.677  c
34.7688 280.431 34.7138 281.173 34.7138 281.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 216.000 m
36.0000 216.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.8271 217.214 m
31.8271 217.449 l
31.2685 217.504 30.8125 217.615 30.4592 217.783  c
30.1058 217.950 29.7567 218.205 29.4118 218.547  c
29.0669 218.890 28.7813 219.272 28.5549 219.693  c
28.3285 220.114 28.1391 220.615 27.9868 221.194  c
28.5961 220.775 29.2076 220.566 29.8212 220.566  c
30.4095 220.566 30.9194 220.803 31.3510 221.277  c
31.7827 221.751 31.9985 222.360 31.9985 223.105  c
31.9985 223.824 31.7806 224.480 31.3447 225.073  c
30.8199 225.792 30.1259 226.152 29.2627 226.152  c
28.6744 226.152 28.1751 225.957 27.7646 225.568  c
26.9606 224.810 26.5585 223.829 26.5585 222.623  c
26.5585 221.852 26.7130 221.120 27.0219 220.426  c
27.3308 219.732 27.7720 219.117 28.3454 218.579  c
28.9188 218.042 29.4679 217.680 29.9926 217.494  c
30.5174 217.307 31.0061 217.214 31.4589 217.214  c
h
27.8789 221.658 m
27.8027 222.229 27.7646 222.690 27.7646 223.042  c
27.7646 223.448 27.8397 223.889 27.9899 224.365  c
28.1402 224.841 28.3634 225.219 28.6596 225.498  c
28.8754 225.697 29.1378 225.796 29.4467 225.796  c
29.8149 225.796 30.1439 225.623 30.4338 225.276  c
30.7237 224.929 30.8686 224.434 30.8686 223.791  c
30.8686 223.067 30.7247 222.441 30.4370 221.912  c
30.1492 221.383 29.7408 221.118 29.2119 221.118  c
29.0511 221.118 28.8786 221.152 28.6945 221.220  c
28.5105 221.287 28.2386 221.433 27.8789 221.658  c
h
33.4697 221.747 m
33.4697 220.765 33.6178 219.920 33.9140 219.211  c
34.2102 218.502 34.6038 217.974 35.0947 217.627  c
35.4755 217.352 35.8691 217.214 36.2753 217.214  c
36.9355 217.214 37.5279 217.551 38.0527 218.224  c
38.7086 219.057 39.0366 220.187 39.0366 221.613  c
39.0366 222.612 38.8927 223.460 38.6049 224.159  c
38.3172 224.857 37.9501 225.364 37.5036 225.679  c
37.0572 225.994 36.6266 226.152 36.2119 226.152  c
35.3909 226.152 34.7075 225.667 34.1616 224.698  c
33.7003 223.882 33.4697 222.898 33.4697 221.747  c
h
34.7138 221.905 m
34.7138 223.090 34.8598 224.057 35.1518 224.806  c
35.3930 225.437 35.7527 225.752 36.2309 225.752  c
36.4594 225.752 36.6964 225.649 36.9418 225.444  c
37.1873 225.239 37.3735 224.895 37.5004 224.413  c
37.6951 223.685 37.7924 222.659 37.7924 221.334  c
37.7924 220.352 37.6909 219.533 37.4877 218.877  c
37.3354 218.391 37.1386 218.046 36.8974 217.843  c
36.7239 217.703 36.5144 217.633 36.2690 217.633  c
35.9812 217.633 35.7252 217.762 35.5009 218.021  c
35.1962 218.372 34.9889 218.924 34.8789 219.677  c
34.7688 220.431 34.7138 221.173 34.7138 221.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 156.000 m
36.0000 156.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4946 161.664 m
27.8133 161.106 27.3742 160.657 27.1774 160.318  c
26.9807 159.980 26.8823 159.629 26.8823 159.265  c
26.8823 158.706 27.0981 158.225 27.5297 157.821  c
27.9614 157.416 28.5348 157.214 29.2500 157.214  c
29.9440 157.214 30.5026 157.403 30.9257 157.779  c
31.3489 158.156 31.5605 158.585 31.5605 159.068  c
31.5605 159.390 31.4462 159.717 31.2177 160.052  c
30.9892 160.386 30.5131 160.780 29.7895 161.232  c
30.5343 161.808 31.0273 162.261 31.2685 162.591  c
31.5901 163.022 31.7509 163.477 31.7509 163.956  c
31.7509 164.561 31.5203 165.078 31.0590 165.508  c
30.5978 165.937 29.9926 166.152 29.2436 166.152  c
28.4269 166.152 27.7900 165.896 27.3330 165.384  c
26.9690 164.973 26.7871 164.525 26.7871 164.038  c
26.7871 163.657 26.9151 163.280 27.1711 162.905  c
27.4271 162.531 27.8683 162.117 28.4946 161.664  c
h
29.4912 160.985 m
29.9990 160.528 30.3206 160.167 30.4560 159.903  c
30.5914 159.638 30.6591 159.339 30.6591 159.004  c
30.6591 158.560 30.5343 158.212 30.2846 157.960  c
30.0349 157.708 29.6943 157.583 29.2627 157.583  c
28.8310 157.583 28.4798 157.707 28.2089 157.957  c
27.9381 158.207 27.8027 158.499 27.8027 158.833  c
27.8027 159.053 27.8588 159.273 27.9709 159.493  c
28.0830 159.713 28.2428 159.923 28.4502 160.122  c
h
28.7929 161.905 m
28.4417 162.202 28.1814 162.524 28.0122 162.873  c
27.8429 163.222 27.7583 163.600 27.7583 164.006  c
27.7583 164.552 27.9074 164.989 28.2058 165.317  c
28.5041 165.645 28.8839 165.809 29.3452 165.809  c
29.8022 165.809 30.1682 165.680 30.4433 165.422  c
30.7184 165.164 30.8559 164.851 30.8559 164.482  c
30.8559 164.178 30.7755 163.905 30.6147 163.664  c
30.3142 163.215 29.7070 162.629 28.7929 161.905  c
h
33.4697 161.747 m
33.4697 160.765 33.6178 159.920 33.9140 159.211  c
34.2102 158.502 34.6038 157.974 35.0947 157.627  c
35.4755 157.352 35.8691 157.214 36.2753 157.214  c
36.9355 157.214 37.5279 157.551 38.0527 158.224  c
38.7086 159.057 39.0366 160.187 39.0366 161.613  c
39.0366 162.612 38.8927 163.460 38.6049 164.159  c
38.3172 164.857 37.9501 165.364 37.5036 165.679  c
37.0572 165.994 36.6266 166.152 36.2119 166.152  c
35.3909 166.152 34.7075 165.667 34.1616 164.698  c
33.7003 163.882 33.4697 162.898 33.4697 161.747  c
h
34.7138 161.905 m
34.7138 163.090 34.8598 164.057 35.1518 164.806  c
35.3930 165.437 35.7527 165.752 36.2309 165.752  c
36.4594 165.752 36.6964 165.649 36.9418 165.444  c
37.1873 165.239 37.3735 164.895 37.5004 164.413  c
37.6951 163.685 37.7924 162.659 37.7924 161.334  c
37.7924 160.352 37.6909 159.533 37.4877 158.877  c
37.3354 158.391 37.1386 158.046 36.8974 157.843  c
36.7239 157.703 36.5144 157.633 36.2690 157.633  c
35.9812 157.633 35.7252 157.762 35.5009 158.021  c
35.1962 158.372 34.9889 158.924 34.8789 159.677  c
34.7688 160.431 34.7138 161.173 34.7138 161.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 96.0000 m
36.0000 96.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
20.5234 98.2368 m
22.6181 97.2148 l
22.8276 97.2148 l
22.8276 104.482 l
22.8276 104.965 22.8477 105.265 22.8879 105.384  c
22.9281 105.502 23.0117 105.593 23.1386 105.657  c
23.2656 105.720 23.5237 105.756 23.9130 105.765  c
23.9130 106.000 l
20.6757 106.000 l
20.6757 105.765 l
21.0820 105.756 21.3444 105.721 21.4628 105.660  c
21.5813 105.599 21.6639 105.516 21.7104 105.412  c
21.7570 105.309 21.7802 104.999 21.7802 104.482  c
21.7802 99.8364 l
21.7802 99.2101 21.7591 98.8081 21.7168 98.6303  c
21.6871 98.4949 21.6332 98.3955 21.5549 98.3320  c
21.4766 98.2685 21.3824 98.2368 21.2724 98.2368  c
21.1158 98.2368 20.8979 98.3024 20.6186 98.4335  c
h
26.4697 101.747 m
26.4697 100.765 26.6178 99.9200 26.9140 99.2111  c
27.2102 98.5023 27.6038 97.9744 28.0947 97.6274  c
28.4755 97.3523 28.8691 97.2148 29.2753 97.2148  c
29.9355 97.2148 30.5279 97.5512 31.0527 98.2241  c
31.7086 99.0577 32.0366 100.187 32.0366 101.613  c
32.0366 102.612 31.8927 103.460 31.6049 104.159  c
31.3172 104.857 30.9501 105.364 30.5036 105.679  c
30.0572 105.994 29.6266 106.152 29.2119 106.152  c
28.3909 106.152 27.7075 105.667 27.1616 104.698  c
26.7003 103.882 26.4697 102.898 26.4697 101.747  c
h
27.7138 101.905 m
27.7138 103.090 27.8598 104.057 28.1518 104.806  c
28.3930 105.437 28.7527 105.752 29.2309 105.752  c
29.4594 105.752 29.6964 105.649 29.9418 105.444  c
30.1873 105.239 30.3735 104.895 30.5004 104.413  c
30.6951 103.685 30.7924 102.659 30.7924 101.334  c
30.7924 100.352 30.6909 99.5338 30.4877 98.8779  c
30.3354 98.3912 30.1386 98.0463 29.8974 97.8432  c
29.7239 97.7036 29.5144 97.6337 29.2690 97.6337  c
28.9812 97.6337 28.7252 97.7628 28.5009 98.0210  c
28.1962 98.3722 27.9889 98.9244 27.8789 99.6777  c
27.7688 100.431 27.7138 101.173 27.7138 101.905  c
h
33.4697 101.747 m
33.4697 100.765 33.6178 99.9200 33.9140 99.2111  c
34.2102 98.5023 34.6038 97.9744 35.0947 97.6274  c
35.4755 97.3523 35.8691 97.2148 36.2753 97.2148  c
36.9355 97.2148 37.5279 97.5512 38.0527 98.2241  c
38.7086 99.0577 39.0366 100.187 39.0366 101.613  c
39.0366 102.612 38.8927 103.460 38.6049 104.159  c
38.3172 104.857 37.9501 105.364 37.5036 105.679  c
37.0572 105.994 36.6266 106.152 36.2119 106.152  c
35.3909 106.152 34.7075 105.667 34.1616 104.698  c
33.7003 103.882 33.4697 102.898 33.4697 101.747  c
h
34.7138 101.905 m
34.7138 103.090 34.8598 104.057 35.1518 104.806  c
35.3930 105.437 35.7527 105.752 36.2309 105.752  c
36.4594 105.752 36.6964 105.649 36.9418 105.444  c
37.1873 105.239 37.3735 104.895 37.5004 104.413  c
37.6951 103.685 37.7924 102.659 37.7924 101.334  c
37.7924 100.352 37.6909 99.5338 37.4877 98.8779  c
37.3354 98.3912 37.1386 98.0463 36.8974 97.8432  c
36.7239 97.7036 36.5144 97.6337 36.2690 97.6337  c
35.9812 97.6337 35.7252 97.7628 35.5009 98.0210  c
35.1962 98.3722 34.9889 98.9244 34.8789 99.6777  c
34.7688 100.431 34.7138 101.173 34.7138 101.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 36.0000 m
36.0000 36.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
20.5234 38.2368 m
22.6181 37.2148 l
22.8276 37.2148 l
22.8276 44.4829 l
22.8276 44.9653 22.8477 45.2657 22.8879 45.3842  c
22.9281 45.5027 23.0117 45.5937 23.1386 45.6572  c
23.2656 45.7207 23.5237 45.7566 23.9130 45.7651  c
23.9130 46.0000 l
20.6757 46.0000 l
20.6757 45.7651 l
21.0820 45.7566 21.3444 45.7217 21.4628 45.6604  c
21.5813 45.5990 21.6639 45.5165 21.7104 45.4128  c
21.7570 45.3091 21.7802 44.9991 21.7802 44.4829  c
21.7802 39.8364 l
21.7802 39.2101 21.7591 38.8081 21.7168 38.6303  c
21.6871 38.4949 21.6332 38.3955 21.5549 38.3320  c
21.4766 38.2685 21.3824 38.2368 21.2724 38.2368  c
21.1158 38.2368 20.8979 38.3024 20.6186 38.4335  c
h
31.9604 44.3432 m
31.3574 46.0000 l
26.2793 46.0000 l
26.2793 45.7651 l
27.7731 44.4025 28.8247 43.2895 29.4340 42.4262  c
30.0434 41.5629 30.3481 40.7737 30.3481 40.0585  c
30.3481 39.5127 30.1809 39.0641 29.8466 38.7128  c
29.5123 38.3616 29.1124 38.1860 28.6469 38.1860  c
28.2238 38.1860 27.8439 38.3098 27.5075 38.5573  c
27.1711 38.8049 26.9225 39.1678 26.7617 39.6460  c
26.5268 39.6460 l
26.6326 38.8631 26.9045 38.2622 27.3425 37.8432  c
27.7805 37.4243 28.3274 37.2148 28.9834 37.2148  c
29.6816 37.2148 30.2645 37.4391 30.7321 37.8877  c
31.1997 38.3362 31.4335 38.8652 31.4335 39.4746  c
31.4335 39.9104 31.3320 40.3463 31.1289 40.7822  c
30.8157 41.4677 30.3079 42.1935 29.6054 42.9594  c
28.5517 44.1105 27.8937 44.8045 27.6313 45.0415  c
29.8784 45.0415 l
30.3354 45.0415 30.6560 45.0245 30.8400 44.9907  c
31.0241 44.9568 31.1902 44.8881 31.3383 44.7844  c
31.4864 44.6807 31.6155 44.5336 31.7255 44.3432  c
h
33.4697 41.7470 m
33.4697 40.7653 33.6178 39.9200 33.9140 39.2111  c
34.2102 38.5023 34.6038 37.9744 35.0947 37.6274  c
35.4755 37.3523 35.8691 37.2148 36.2753 37.2148  c
36.9355 37.2148 37.5279 37.5512 38.0527 38.2241  c
38.7086 39.0577 39.0366 40.1876 39.0366 41.6137  c
39.0366 42.6124 38.8927 43.4609 38.6049 44.1591  c
38.3172 44.8574 37.9501 45.3641 37.5036 45.6794  c
37.0572 45.9947 36.6266 46.1523 36.2119 46.1523  c
35.3909 46.1523 34.7075 45.6678 34.1616 44.6987  c
33.7003 43.8820 33.4697 42.8981 33.4697 41.7470  c
h
34.7138 41.9057 m
34.7138 43.0906 34.8598 44.0576 35.1518 44.8066  c
35.3930 45.4371 35.7527 45.7524 36.2309 45.7524  c
36.4594 45.7524 36.6964 45.6498 36.9418 45.4445  c
37.1873 45.2393 37.3735 44.8955 37.5004 44.4130  c
37.6951 43.6852 37.7924 42.6590 37.7924 41.3344  c
37.7924 40.3527 37.6909 39.5338 37.4877 38.8779  c
37.3354 38.3912 37.1386 38.0463 36.8974 37.8432  c
36.7239 37.7036 36.5144 37.6337 36.2690 37.6337  c
35.9812 37.6337 35.7252 37.7628 35.5009 38.0210  c
35.1962 38.3722 34.9889 38.9244 34.8789 39.6777  c
34.7688 40.4309 34.7138 41.1736 34.7138 41.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 306.000 m
38.0000 306.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 246.000 m
38.0000 246.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 186.000 m
38.0000 186.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 126.000 m
38.0000 126.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 66.0000 m
38.0000 66.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
41.0000 6.00000 m
38.0000 6.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
