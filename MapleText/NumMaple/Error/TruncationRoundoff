数値計算のねらいは，できるだけ精確・高速に解を得ることである．誤差 (精度) と収束性 (安定性,速度)
が数値計算のキモとなる．前回に説明した収束判定条件による誤差は打ち切り誤差 (truncation error)
と呼ばれる．ここでは，誤差のもう一つの代表例である，計算機に特有の丸め誤差 (roundoff error) について見ておこう．


!!!整数型と実数型の内部表現 
計算機は一般に無限精度の計算をおこなっているわけではない．CPU で足し算をおこなう以上，一般的な計算においては CPUが扱う一番効率のいい数の大きさが存在する．これが,32bit の CPU では 1 ワード,4byte(4x8bits) である．1ワードで表現できる最大整数は,符号に 1bit 必要なので,2^(31)-1 となる．実数は以下のような仮数部と指数を取る浮動小数点数で表わされる．

'''浮動小数点数の内部表現 (IEEE754)．'''
||||{{math 's \times f \times B ^{e-E}'}} 
||
||s||sign bit(符号ビット:正負の区別を表す) 
||e||biased exponent(指数部) 
||f||fraction portion of the number(仮数部) 
||B||base(基底) で通常は 2　
||E||bias(下駄)と呼ばれる  
||real(単精度)||s=1, e=8, f=23 E=127 
||double precision(倍精度)||s=1, e=11, f=52 E=1023
Eは指数が負となる小数点以下の数を表現するためのもの．演算結果は実際の値から浮動小数点数に変換するための操作「丸め (round-off)」が常に行われる．それに伴って現れる誤差を丸め誤差と呼ぶ．

