%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 128 575 663
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ3“ú 20Žž35•ª02•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
364 350 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
364.000 0 l
364.000 350.000 l
0 350.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 354 340 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
35.9806 338.000 m
35.9806 8.00000 l
S
newpath
93.6205 338.000 m
93.6205 8.00000 l
S
newpath
151.260 338.000 m
151.260 8.00000 l
S
newpath
208.900 338.000 m
208.900 8.00000 l
S
newpath
266.540 338.000 m
266.540 8.00000 l
S
newpath
324.180 338.000 m
324.180 8.00000 l
S
0.913725 0.913725 0.913725 RG
newpath
64.8006 338.000 m
64.8006 8.01770 l
S
newpath
122.440 338.000 m
122.440 8.01770 l
S
newpath
180.080 338.000 m
180.080 8.01770 l
S
newpath
237.720 338.000 m
237.720 8.01770 l
S
newpath
295.360 338.000 m
295.360 8.01770 l
S
newpath
353.000 338.000 m
353.000 8.01770 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
35.9806 338.000 m
35.9806 8.00000 l
S
newpath
93.6205 338.000 m
93.6205 8.00000 l
S
newpath
151.260 338.000 m
151.260 8.00000 l
S
newpath
208.900 338.000 m
208.900 8.00000 l
S
newpath
266.540 338.000 m
266.540 8.00000 l
S
newpath
324.180 338.000 m
324.180 8.00000 l
S
0.913725 0.913725 0.913725 RG
newpath
64.8006 338.000 m
64.8006 8.01770 l
S
newpath
122.440 338.000 m
122.440 8.01770 l
S
newpath
180.080 338.000 m
180.080 8.01770 l
S
newpath
237.720 338.000 m
237.720 8.01770 l
S
newpath
295.360 338.000 m
295.360 8.01770 l
S
newpath
353.000 338.000 m
353.000 8.01770 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
30.0000 317.376 m
353.000 317.376 l
S
newpath
30.0000 214.256 m
353.000 214.256 l
S
newpath
30.0000 111.137 m
353.000 111.137 l
S
newpath
30.0000 8.01770 m
353.000 8.01770 l
S
0.913725 0.913725 0.913725 RG
newpath
30.2166 265.816 m
353.000 265.816 l
S
newpath
30.2166 162.696 m
353.000 162.696 l
S
newpath
30.2166 59.5774 m
353.000 59.5774 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
30.0000 317.376 m
353.000 317.376 l
S
newpath
30.0000 214.256 m
353.000 214.256 l
S
newpath
30.0000 111.137 m
353.000 111.137 l
S
newpath
30.0000 8.01770 m
353.000 8.01770 l
S
0.913725 0.913725 0.913725 RG
newpath
30.2166 265.816 m
353.000 265.816 l
S
newpath
30.2166 162.696 m
353.000 162.696 l
S
newpath
30.2166 59.5774 m
353.000 59.5774 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
29.2166 6.01769 325.783 332.982 rc
newpath
41.7446 111.137 m
41.6992 110.878 l
41.5635 110.624 l
41.3398 110.377 l
41.0316 110.143 l
40.6438 109.924 l
40.1824 109.725 l
39.6547 109.548 l
39.0691 109.395 l
38.4348 109.271 l
37.7618 109.175 l
37.0607 109.111 l
36.3425 109.078 l
35.6187 109.078 l
34.9006 109.111 l
34.1995 109.175 l
33.5264 109.271 l
32.8921 109.395 l
32.3065 109.548 l
31.7789 109.725 l
31.3175 109.924 l
30.9296 110.143 l
30.6214 110.377 l
30.3977 110.624 l
30.2621 110.878 l
30.2166 111.137 l
30.2621 111.395 l
30.3977 111.650 l
30.6214 111.896 l
30.9296 112.130 l
31.3175 112.349 l
31.7789 112.549 l
32.3065 112.726 l
32.8921 112.878 l
33.5264 113.003 l
34.1995 113.098 l
34.9006 113.163 l
35.6187 113.195 l
36.3425 113.195 l
37.0607 113.163 l
37.7618 113.098 l
38.4348 113.003 l
39.0691 112.878 l
39.6547 112.726 l
40.1824 112.549 l
40.6438 112.349 l
41.0316 112.130 l
41.3398 111.896 l
41.5635 111.650 l
41.6992 111.395 l
41.7446 111.137 l
h
f
newpath
41.7446 111.137 m
41.6992 110.878 l
41.5635 110.624 l
41.3398 110.377 l
41.0316 110.143 l
40.6438 109.924 l
40.1824 109.725 l
39.6547 109.548 l
39.0691 109.395 l
38.4348 109.271 l
37.7618 109.175 l
37.0607 109.111 l
36.3425 109.078 l
35.6187 109.078 l
34.9006 109.111 l
34.1995 109.175 l
33.5264 109.271 l
32.8921 109.395 l
32.3065 109.548 l
31.7789 109.725 l
31.3175 109.924 l
30.9296 110.143 l
30.6214 110.377 l
30.3977 110.624 l
30.2621 110.878 l
30.2166 111.137 l
30.2621 111.395 l
30.3977 111.650 l
30.6214 111.896 l
30.9296 112.130 l
31.3175 112.349 l
31.7789 112.549 l
32.3065 112.726 l
32.8921 112.878 l
33.5264 113.003 l
34.1995 113.098 l
34.9006 113.163 l
35.6187 113.195 l
36.3425 113.195 l
37.0607 113.163 l
37.7618 113.098 l
38.4348 113.003 l
39.0691 112.878 l
39.6547 112.726 l
40.1824 112.549 l
40.6438 112.349 l
41.0316 112.130 l
41.3398 111.896 l
41.5635 111.650 l
41.6992 111.395 l
41.7446 111.137 l
h
S
cliprestore
newpath
0 0 m
0 340.000 l
354.000 340.000 l
354.000 0 l
h
W
Q
q
29.2166 6.01769 325.783 332.982 rc
newpath
329.944 317.376 m
329.898 317.117 l
329.763 316.863 l
329.539 316.616 l
329.231 316.382 l
328.843 316.163 l
328.381 315.964 l
327.854 315.787 l
327.268 315.634 l
326.634 315.510 l
325.961 315.414 l
325.260 315.350 l
324.542 315.317 l
323.818 315.317 l
323.100 315.350 l
322.398 315.414 l
321.725 315.510 l
321.091 315.634 l
320.506 315.787 l
319.978 315.964 l
319.516 316.163 l
319.129 316.382 l
318.820 316.616 l
318.597 316.863 l
318.461 317.117 l
318.416 317.376 l
318.461 317.634 l
318.597 317.889 l
318.820 318.135 l
319.129 318.369 l
319.516 318.588 l
319.978 318.787 l
320.506 318.965 l
321.091 319.117 l
321.725 319.242 l
322.398 319.337 l
323.100 319.402 l
323.818 319.434 l
324.542 319.434 l
325.260 319.402 l
325.961 319.337 l
326.634 319.242 l
327.268 319.117 l
327.854 318.965 l
328.381 318.787 l
328.843 318.588 l
329.231 318.369 l
329.539 318.135 l
329.763 317.889 l
329.898 317.634 l
329.944 317.376 l
h
f
newpath
329.944 317.376 m
329.898 317.117 l
329.763 316.863 l
329.539 316.616 l
329.231 316.382 l
328.843 316.163 l
328.381 315.964 l
327.854 315.787 l
327.268 315.634 l
326.634 315.510 l
325.961 315.414 l
325.260 315.350 l
324.542 315.317 l
323.818 315.317 l
323.100 315.350 l
322.398 315.414 l
321.725 315.510 l
321.091 315.634 l
320.506 315.787 l
319.978 315.964 l
319.516 316.163 l
319.129 316.382 l
318.820 316.616 l
318.597 316.863 l
318.461 317.117 l
318.416 317.376 l
318.461 317.634 l
318.597 317.889 l
318.820 318.135 l
319.129 318.369 l
319.516 318.588 l
319.978 318.787 l
320.506 318.965 l
321.091 319.117 l
321.725 319.242 l
322.398 319.337 l
323.100 319.402 l
323.818 319.434 l
324.542 319.434 l
325.260 319.402 l
325.961 319.337 l
326.634 319.242 l
327.268 319.117 l
327.854 318.965 l
328.381 318.787 l
328.843 318.588 l
329.231 318.369 l
329.539 318.135 l
329.763 317.889 l
329.898 317.634 l
329.944 317.376 l
h
S
cliprestore
newpath
0 0 m
0 340.000 l
354.000 340.000 l
354.000 0 l
h
W
Q
q
1.00000 0 0 RG
29.2166 6.01769 325.783 332.982 rc
newpath
35.9806 8.01770 m
37.6474 10.3997 l
39.0976 12.4667 l
40.7286 14.7851 l
42.3703 17.1121 l
44.0043 19.4214 l
45.5192 21.5565 l
47.0878 23.7613 l
48.7100 26.0351 l
50.3270 28.2950 l
51.9903 30.6129 l
53.4553 32.6488 l
55.1046 34.9343 l
56.7607 37.2225 l
58.3566 39.4211 l
59.8059 41.4122 l
61.5292 43.7730 l
62.9890 45.7671 l
64.6872 48.0801 l
66.1903 50.1215 l
67.8396 52.3548 l
69.4100 54.4751 l
71.0486 56.6810 l
72.5533 58.7008 l
74.1764 60.8731 l
75.8623 63.1225 l
77.3299 65.0749 l
78.9149 67.1776 l
80.5524 69.3433 l
82.1543 71.4556 l
83.7043 73.4933 l
85.4253 75.7488 l
86.9717 77.7692 l
88.6228 79.9199 l
90.1189 81.8628 l
91.7546 83.9807 l
93.2936 85.9673 l
94.9024 88.0376 l
96.4752 90.0555 l
98.1219 92.1615 l
99.7077 94.1834 l
101.329 96.2447 l
102.938 98.2824 l
104.415 100.149 l
106.109 102.282 l
107.624 104.183 l
109.240 106.205 l
110.786 108.133 l
112.502 110.268 l
113.989 112.110 l
115.676 114.195 l
117.214 116.088 l
118.896 118.153 l
120.347 119.929 l
122.000 121.945 l
123.597 123.886 l
125.192 125.819 l
126.782 127.739 l
128.309 129.577 l
129.960 131.558 l
131.534 133.440 l
133.190 135.414 l
134.689 137.195 l
136.346 139.156 l
137.932 141.029 l
139.515 142.891 l
141.169 144.829 l
142.692 146.608 l
144.252 148.424 l
145.974 150.422 l
147.533 152.225 l
149.127 154.062 l
150.749 155.924 l
152.240 157.630 l
153.829 159.442 l
155.405 161.234 l
157.092 163.145 l
158.581 164.825 l
160.298 166.756 l
161.848 168.493 l
163.381 170.205 l
165.030 172.040 l
166.686 173.876 l
168.192 175.540 l
169.792 177.301 l
171.353 179.014 l
173.045 180.864 l
174.509 182.458 l
176.191 184.283 l
177.772 185.993 l
179.338 187.679 l
180.905 189.361 l
182.503 191.070 l
184.197 192.875 l
185.750 194.523 l
187.284 196.145 l
188.923 197.871 l
190.558 199.588 l
192.026 201.123 l
193.765 202.934 l
195.220 204.444 l
196.922 206.203 l
198.546 207.875 l
199.996 209.363 l
201.627 211.029 l
203.269 212.700 l
204.903 214.357 l
206.418 215.887 l
207.987 217.465 l
209.609 219.091 l
211.226 220.705 l
212.889 222.358 l
214.354 223.809 l
216.003 225.435 l
217.660 227.062 l
219.255 228.623 l
220.705 230.035 l
222.428 231.707 l
223.888 233.118 l
225.586 234.752 l
227.089 236.193 l
228.738 237.768 l
230.309 239.261 l
231.947 240.812 l
233.452 242.230 l
235.075 243.754 l
236.761 245.330 l
238.229 246.696 l
239.814 248.166 l
241.451 249.677 l
243.053 251.150 l
244.603 252.568 l
246.324 254.136 l
247.871 255.538 l
249.522 257.030 l
251.018 258.375 l
252.653 259.839 l
254.192 261.211 l
255.801 262.638 l
257.374 264.028 l
259.021 265.476 l
260.607 266.864 l
262.228 268.278 l
263.837 269.673 l
265.315 270.949 l
267.009 272.405 l
268.524 273.702 l
270.139 275.078 l
271.685 276.389 l
273.402 277.837 l
274.888 279.086 l
276.576 280.496 l
278.113 281.775 l
279.795 283.168 l
281.247 284.364 l
282.900 285.719 l
284.496 287.023 l
286.092 288.318 l
287.681 289.603 l
289.209 290.832 l
290.860 292.153 l
292.433 293.406 l
294.089 294.718 l
295.588 295.900 l
297.245 297.200 l
298.832 298.439 l
300.415 299.668 l
302.068 300.945 l
303.591 302.116 l
305.151 303.309 l
306.873 304.619 l
308.432 305.799 l
310.027 306.999 l
311.648 308.213 l
313.139 309.323 l
314.728 310.501 l
316.305 311.663 l
317.991 312.900 l
319.480 313.985 l
321.197 315.230 l
322.747 316.348 l
324.280 317.448 l
325.929 318.624 l
327.585 319.798 l
329.091 320.861 l
330.691 321.983 l
332.252 323.072 l
333.944 324.245 l
335.409 325.255 l
337.090 326.408 l
338.671 327.485 l
340.237 328.547 l
341.804 329.602 l
343.402 330.673 l
345.096 331.801 l
346.650 332.829 l
348.183 333.837 l
349.822 334.909 l
351.458 335.972 l
353.000 336.968 l
S
cliprestore
newpath
0 0 m
0 340.000 l
354.000 340.000 l
354.000 0 l
h
W
Q
q
0 0 1.00000 RG
29.2166 6.01769 325.783 332.982 rc
newpath
35.9806 111.137 m
353.000 338.000 l
S
cliprestore
newpath
0 0 m
0 340.000 l
354.000 340.000 l
354.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
30.2166 111.000 m
353.000 111.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
188 132 13 15 rc
newpath
193.091 138.407 m
197.122 138.407 l
197.122 138.566 l
192.730 143.136 l
194.589 143.136 l
195.029 143.136 195.309 143.119 195.427 143.085  c
195.546 143.052 195.655 142.980 195.754 142.870  c
195.854 142.760 195.965 142.561 196.087 142.273  c
196.322 142.273 l
195.770 144.000 l
191.638 144.000 l
191.638 143.815 l
196.030 139.245 l
194.202 139.245 l
193.817 139.245 193.584 139.256 193.504 139.277  c
193.385 139.302 193.268 139.369 193.152 139.477  c
193.035 139.585 192.916 139.764 192.793 140.013  c
192.552 140.013 l
h
f
Q
cliprestore
newpath
0 0 m
0 340.000 l
354.000 340.000 l
354.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
36.0000 111.000 m
36.0000 116.000 l
S
Q
q
newpath
94.0000 111.000 m
94.0000 116.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
90.4697 130.747 m
90.4697 129.765 90.6178 128.920 90.9140 128.211  c
91.2102 127.502 91.6038 126.974 92.0947 126.627  c
92.4755 126.352 92.8691 126.214 93.2753 126.214  c
93.9355 126.214 94.5279 126.551 95.0527 127.224  c
95.7086 128.057 96.0366 129.187 96.0366 130.613  c
96.0366 131.612 95.8927 132.460 95.6049 133.159  c
95.3172 133.857 94.9501 134.364 94.5036 134.679  c
94.0572 134.994 93.6266 135.152 93.2119 135.152  c
92.3909 135.152 91.7075 134.667 91.1616 133.698  c
90.7003 132.882 90.4697 131.898 90.4697 130.747  c
h
91.7138 130.905 m
91.7138 132.090 91.8598 133.057 92.1518 133.806  c
92.3930 134.437 92.7527 134.752 93.2309 134.752  c
93.4594 134.752 93.6964 134.649 93.9418 134.444  c
94.1873 134.239 94.3735 133.895 94.5004 133.413  c
94.6951 132.685 94.7924 131.659 94.7924 130.334  c
94.7924 129.352 94.6909 128.533 94.4877 127.877  c
94.3354 127.391 94.1386 127.046 93.8974 126.843  c
93.7239 126.703 93.5144 126.633 93.2690 126.633  c
92.9812 126.633 92.7252 126.762 92.5009 127.021  c
92.1962 127.372 91.9889 127.924 91.8789 128.677  c
91.7688 129.431 91.7138 130.173 91.7138 130.905  c
h
98.6250 133.768 m
98.8238 133.768 98.9910 133.837 99.1264 133.974  c
99.2618 134.112 99.3295 134.278 99.3295 134.473  c
99.3295 134.667 99.2608 134.833 99.1232 134.971  c
98.9857 135.109 98.8196 135.177 98.6250 135.177  c
98.4303 135.177 98.2642 135.109 98.1267 134.971  c
97.9891 134.833 97.9204 134.667 97.9204 134.473  c
97.9204 134.274 97.9891 134.107 98.1267 133.971  c
98.2642 133.836 98.4303 133.768 98.6250 133.768  c
h
105.960 133.343 m
105.357 135.000 l
100.279 135.000 l
100.279 134.765 l
101.773 133.402 102.824 132.289 103.434 131.426  c
104.043 130.563 104.348 129.773 104.348 129.058  c
104.348 128.512 104.181 128.064 103.846 127.712  c
103.512 127.361 103.112 127.186 102.647 127.186  c
102.223 127.186 101.844 127.309 101.507 127.557  c
101.171 127.804 100.922 128.167 100.761 128.646  c
100.526 128.646 l
100.632 127.863 100.904 127.262 101.342 126.843  c
101.780 126.424 102.327 126.214 102.983 126.214  c
103.681 126.214 104.264 126.439 104.732 126.887  c
105.199 127.336 105.433 127.865 105.433 128.474  c
105.433 128.910 105.332 129.346 105.128 129.782  c
104.815 130.467 104.307 131.193 103.605 131.959  c
102.551 133.110 101.893 133.804 101.631 134.041  c
103.878 134.041 l
104.335 134.041 104.656 134.024 104.840 133.990  c
105.024 133.956 105.190 133.888 105.338 133.784  c
105.486 133.680 105.615 133.533 105.725 133.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
151.000 111.000 m
151.000 116.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
148.469 130.747 m
148.469 129.765 148.617 128.920 148.914 128.211  c
149.210 127.502 149.603 126.974 150.094 126.627  c
150.475 126.352 150.869 126.214 151.275 126.214  c
151.935 126.214 152.528 126.551 153.052 127.224  c
153.708 128.057 154.036 129.187 154.036 130.613  c
154.036 131.612 153.892 132.460 153.605 133.159  c
153.317 133.857 152.950 134.364 152.503 134.679  c
152.057 134.994 151.626 135.152 151.211 135.152  c
150.391 135.152 149.707 134.667 149.161 133.698  c
148.700 132.882 148.469 131.898 148.469 130.747  c
h
149.713 130.905 m
149.713 132.090 149.859 133.057 150.151 133.806  c
150.393 134.437 150.752 134.752 151.231 134.752  c
151.459 134.752 151.696 134.649 151.941 134.444  c
152.187 134.239 152.373 133.895 152.500 133.413  c
152.695 132.685 152.792 131.659 152.792 130.334  c
152.792 129.352 152.690 128.533 152.487 127.877  c
152.335 127.391 152.138 127.046 151.897 126.843  c
151.724 126.703 151.514 126.633 151.269 126.633  c
150.981 126.633 150.725 126.762 150.501 127.021  c
150.196 127.372 149.988 127.924 149.878 128.677  c
149.768 129.431 149.713 130.173 149.713 130.905  c
h
156.625 133.768 m
156.823 133.768 156.991 133.837 157.126 133.974  c
157.261 134.112 157.329 134.278 157.329 134.473  c
157.329 134.667 157.260 134.833 157.123 134.971  c
156.985 135.109 156.819 135.177 156.625 135.177  c
156.430 135.177 156.264 135.109 156.126 134.971  c
155.989 134.833 155.920 134.667 155.920 134.473  c
155.920 134.274 155.989 134.107 156.126 133.971  c
156.264 133.836 156.430 133.768 156.625 133.768  c
h
164.049 131.826 m
164.049 132.727 l
162.894 132.727 l
162.894 135.000 l
161.846 135.000 l
161.846 132.727 l
158.203 132.727 l
158.203 131.915 l
162.195 126.214 l
162.894 126.214 l
162.894 131.826 l
h
161.846 131.826 m
161.846 127.554 l
158.825 131.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
209.000 111.000 m
209.000 116.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
205.469 130.747 m
205.469 129.765 205.617 128.920 205.914 128.211  c
206.210 127.502 206.603 126.974 207.094 126.627  c
207.475 126.352 207.869 126.214 208.275 126.214  c
208.935 126.214 209.528 126.551 210.052 127.224  c
210.708 128.057 211.036 129.187 211.036 130.613  c
211.036 131.612 210.892 132.460 210.605 133.159  c
210.317 133.857 209.950 134.364 209.503 134.679  c
209.057 134.994 208.626 135.152 208.211 135.152  c
207.391 135.152 206.707 134.667 206.161 133.698  c
205.700 132.882 205.469 131.898 205.469 130.747  c
h
206.713 130.905 m
206.713 132.090 206.859 133.057 207.151 133.806  c
207.393 134.437 207.752 134.752 208.231 134.752  c
208.459 134.752 208.696 134.649 208.941 134.444  c
209.187 134.239 209.373 133.895 209.500 133.413  c
209.695 132.685 209.792 131.659 209.792 130.334  c
209.792 129.352 209.690 128.533 209.487 127.877  c
209.335 127.391 209.138 127.046 208.897 126.843  c
208.724 126.703 208.514 126.633 208.269 126.633  c
207.981 126.633 207.725 126.762 207.501 127.021  c
207.196 127.372 206.988 127.924 206.878 128.677  c
206.768 129.431 206.713 130.173 206.713 130.905  c
h
213.625 133.768 m
213.823 133.768 213.991 133.837 214.126 133.974  c
214.261 134.112 214.329 134.278 214.329 134.473  c
214.329 134.667 214.260 134.833 214.123 134.971  c
213.985 135.109 213.819 135.177 213.625 135.177  c
213.430 135.177 213.264 135.109 213.126 134.971  c
212.989 134.833 212.920 134.667 212.920 134.473  c
212.920 134.274 212.989 134.107 213.126 133.971  c
213.264 133.836 213.430 133.768 213.625 133.768  c
h
220.827 126.214 m
220.827 126.449 l
220.268 126.504 219.812 126.615 219.459 126.783  c
219.105 126.950 218.756 127.205 218.411 127.547  c
218.067 127.890 217.781 128.272 217.554 128.693  c
217.328 129.114 217.139 129.615 216.986 130.194  c
217.596 129.775 218.207 129.566 218.821 129.566  c
219.409 129.566 219.919 129.803 220.351 130.277  c
220.782 130.751 220.998 131.360 220.998 132.105  c
220.998 132.824 220.780 133.480 220.344 134.073  c
219.820 134.792 219.126 135.152 218.262 135.152  c
217.674 135.152 217.175 134.957 216.764 134.568  c
215.960 133.810 215.558 132.829 215.558 131.623  c
215.558 130.852 215.713 130.120 216.022 129.426  c
216.330 128.732 216.772 128.117 217.345 127.579  c
217.918 127.042 218.467 126.680 218.992 126.494  c
219.517 126.307 220.006 126.214 220.459 126.214  c
h
216.878 130.658 m
216.802 131.229 216.764 131.690 216.764 132.042  c
216.764 132.448 216.839 132.889 216.990 133.365  c
217.140 133.841 217.363 134.219 217.659 134.498  c
217.875 134.697 218.137 134.796 218.446 134.796  c
218.814 134.796 219.144 134.623 219.433 134.276  c
219.723 133.929 219.868 133.434 219.868 132.791  c
219.868 132.067 219.724 131.441 219.437 130.912  c
219.149 130.383 218.740 130.118 218.211 130.118  c
218.051 130.118 217.878 130.152 217.694 130.220  c
217.510 130.287 217.238 130.433 216.878 130.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
267.000 111.000 m
267.000 116.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
263.469 130.747 m
263.469 129.765 263.617 128.920 263.914 128.211  c
264.210 127.502 264.603 126.974 265.094 126.627  c
265.475 126.352 265.869 126.214 266.275 126.214  c
266.935 126.214 267.528 126.551 268.052 127.224  c
268.708 128.057 269.036 129.187 269.036 130.613  c
269.036 131.612 268.892 132.460 268.605 133.159  c
268.317 133.857 267.950 134.364 267.503 134.679  c
267.057 134.994 266.626 135.152 266.211 135.152  c
265.391 135.152 264.707 134.667 264.161 133.698  c
263.700 132.882 263.469 131.898 263.469 130.747  c
h
264.713 130.905 m
264.713 132.090 264.859 133.057 265.151 133.806  c
265.393 134.437 265.752 134.752 266.231 134.752  c
266.459 134.752 266.696 134.649 266.941 134.444  c
267.187 134.239 267.373 133.895 267.500 133.413  c
267.695 132.685 267.792 131.659 267.792 130.334  c
267.792 129.352 267.690 128.533 267.487 127.877  c
267.335 127.391 267.138 127.046 266.897 126.843  c
266.724 126.703 266.514 126.633 266.269 126.633  c
265.981 126.633 265.725 126.762 265.501 127.021  c
265.196 127.372 264.988 127.924 264.878 128.677  c
264.768 129.431 264.713 130.173 264.713 130.905  c
h
271.625 133.768 m
271.823 133.768 271.991 133.837 272.126 133.974  c
272.261 134.112 272.329 134.278 272.329 134.473  c
272.329 134.667 272.260 134.833 272.123 134.971  c
271.985 135.109 271.819 135.177 271.625 135.177  c
271.430 135.177 271.264 135.109 271.126 134.971  c
270.989 134.833 270.920 134.667 270.920 134.473  c
270.920 134.274 270.989 134.107 271.126 133.971  c
271.264 133.836 271.430 133.768 271.625 133.768  c
h
275.494 130.664 m
274.813 130.106 274.374 129.657 274.177 129.318  c
273.980 128.980 273.882 128.629 273.882 128.265  c
273.882 127.706 274.098 127.225 274.529 126.821  c
274.961 126.416 275.534 126.214 276.250 126.214  c
276.944 126.214 277.502 126.403 277.925 126.779  c
278.349 127.156 278.560 127.585 278.560 128.068  c
278.560 128.390 278.446 128.717 278.217 129.052  c
277.989 129.386 277.513 129.780 276.789 130.232  c
277.534 130.808 278.027 131.261 278.268 131.591  c
278.590 132.022 278.751 132.477 278.751 132.956  c
278.751 133.561 278.520 134.078 278.059 134.508  c
277.597 134.937 276.992 135.152 276.243 135.152  c
275.426 135.152 274.790 134.896 274.333 134.384  c
273.969 133.973 273.787 133.525 273.787 133.038  c
273.787 132.657 273.915 132.280 274.171 131.905  c
274.427 131.531 274.868 131.117 275.494 130.664  c
h
276.491 129.985 m
276.999 129.528 277.320 129.167 277.456 128.903  c
277.591 128.638 277.659 128.339 277.659 128.004  c
277.659 127.560 277.534 127.212 277.284 126.960  c
277.035 126.708 276.694 126.583 276.262 126.583  c
275.831 126.583 275.479 126.707 275.209 126.957  c
274.938 127.207 274.802 127.499 274.802 127.833  c
274.802 128.053 274.858 128.273 274.970 128.493  c
275.083 128.713 275.242 128.923 275.450 129.122  c
h
275.793 130.905 m
275.441 131.202 275.181 131.524 275.012 131.873  c
274.842 132.222 274.758 132.600 274.758 133.006  c
274.758 133.552 274.907 133.989 275.205 134.317  c
275.504 134.645 275.884 134.809 276.345 134.809  c
276.802 134.809 277.168 134.680 277.443 134.422  c
277.718 134.164 277.856 133.851 277.856 133.482  c
277.856 133.178 277.775 132.905 277.614 132.664  c
277.314 132.215 276.707 131.629 275.793 130.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
324.000 111.000 m
324.000 116.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
327.523 127.236 m
329.618 126.214 l
329.827 126.214 l
329.827 133.482 l
329.827 133.965 329.847 134.265 329.887 134.384  c
329.928 134.502 330.011 134.593 330.138 134.657  c
330.265 134.720 330.523 134.756 330.913 134.765  c
330.913 135.000 l
327.675 135.000 l
327.675 134.765 l
328.082 134.756 328.344 134.721 328.462 134.660  c
328.581 134.599 328.663 134.516 328.710 134.412  c
328.757 134.309 328.780 133.999 328.780 133.482  c
328.780 128.836 l
328.780 128.210 328.759 127.808 328.716 127.630  c
328.687 127.495 328.633 127.395 328.554 127.332  c
328.476 127.268 328.382 127.236 328.272 127.236  c
328.115 127.236 327.897 127.302 327.618 127.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
65.0000 111.000 m
65.0000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
122.000 111.000 m
122.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
180.000 111.000 m
180.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
238.000 111.000 m
238.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
295.000 111.000 m
295.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
353.000 111.000 m
353.000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
36.0000 338.000 m
36.0000 8.01770 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 217 8 15 rc
Q
cliprestore
newpath
0 0 m
0 340.000 l
354.000 340.000 l
354.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
36.0000 317.000 m
31.0000 317.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 316 7 13 rc
newpath
26.7900 323.438 m
18.2100 323.438 l
18.2100 322.762 l
26.7900 322.762 l
h
f
Q
newpath
30.9604 325.343 m
30.3574 327.000 l
25.2793 327.000 l
25.2793 326.765 l
26.7731 325.402 27.8247 324.289 28.4340 323.426  c
29.0434 322.563 29.3481 321.773 29.3481 321.058  c
29.3481 320.512 29.1809 320.064 28.8466 319.712  c
28.5123 319.361 28.1124 319.186 27.6469 319.186  c
27.2238 319.186 26.8439 319.309 26.5075 319.557  c
26.1711 319.804 25.9225 320.167 25.7617 320.646  c
25.5268 320.646 l
25.6326 319.863 25.9045 319.262 26.3425 318.843  c
26.7805 318.424 27.3274 318.214 27.9834 318.214  c
28.6816 318.214 29.2645 318.439 29.7321 318.887  c
30.1997 319.336 30.4335 319.865 30.4335 320.474  c
30.4335 320.910 30.3320 321.346 30.1289 321.782  c
29.8157 322.467 29.3079 323.193 28.6054 323.959  c
27.5517 325.110 26.8937 325.804 26.6313 326.041  c
28.8784 326.041 l
29.3354 326.041 29.6560 326.024 29.8400 325.990  c
30.0241 325.956 30.1902 325.888 30.3383 325.784  c
30.4864 325.680 30.6155 325.533 30.7255 325.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
36.0000 214.000 m
31.0000 214.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
16 213 7 13 rc
newpath
26.7900 220.438 m
18.2100 220.438 l
18.2100 219.762 l
26.7900 219.762 l
h
f
Q
newpath
26.5234 216.236 m
28.6181 215.214 l
28.8276 215.214 l
28.8276 222.482 l
28.8276 222.965 28.8477 223.265 28.8879 223.384  c
28.9281 223.502 29.0117 223.593 29.1386 223.657  c
29.2656 223.720 29.5237 223.756 29.9130 223.765  c
29.9130 224.000 l
26.6757 224.000 l
26.6757 223.765 l
27.0820 223.756 27.3444 223.721 27.4628 223.660  c
27.5813 223.599 27.6639 223.516 27.7104 223.412  c
27.7570 223.309 27.7802 222.999 27.7802 222.482  c
27.7802 217.836 l
27.7802 217.210 27.7591 216.808 27.7168 216.630  c
27.6871 216.495 27.6332 216.395 27.5549 216.332  c
27.4766 216.268 27.3824 216.236 27.2724 216.236  c
27.1158 216.236 26.8979 216.302 26.6186 216.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
36.0000 111.000 m
31.0000 111.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4697 116.747 m
25.4697 115.765 25.6178 114.920 25.9140 114.211  c
26.2102 113.502 26.6038 112.974 27.0947 112.627  c
27.4755 112.352 27.8691 112.214 28.2753 112.214  c
28.9355 112.214 29.5279 112.551 30.0527 113.224  c
30.7086 114.057 31.0366 115.187 31.0366 116.613  c
31.0366 117.612 30.8927 118.460 30.6049 119.159  c
30.3172 119.857 29.9501 120.364 29.5036 120.679  c
29.0572 120.994 28.6266 121.152 28.2119 121.152  c
27.3909 121.152 26.7075 120.667 26.1616 119.698  c
25.7003 118.882 25.4697 117.898 25.4697 116.747  c
h
26.7138 116.905 m
26.7138 118.090 26.8598 119.057 27.1518 119.806  c
27.3930 120.437 27.7527 120.752 28.2309 120.752  c
28.4594 120.752 28.6964 120.649 28.9418 120.444  c
29.1873 120.239 29.3735 119.895 29.5004 119.413  c
29.6951 118.685 29.7924 117.659 29.7924 116.334  c
29.7924 115.352 29.6909 114.533 29.4877 113.877  c
29.3354 113.391 29.1386 113.046 28.8974 112.843  c
28.7239 112.703 28.5144 112.633 28.2690 112.633  c
27.9812 112.633 27.7252 112.762 27.5009 113.021  c
27.1962 113.372 26.9889 113.924 26.8789 114.677  c
26.7688 115.431 26.7138 116.173 26.7138 116.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
36.0000 8.00000 m
31.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
26.5234 10.2368 m
28.6181 9.21484 l
28.8276 9.21484 l
28.8276 16.4829 l
28.8276 16.9653 28.8477 17.2657 28.8879 17.3842  c
28.9281 17.5027 29.0117 17.5937 29.1386 17.6572  c
29.2656 17.7207 29.5237 17.7566 29.9130 17.7651  c
29.9130 18.0000 l
26.6757 18.0000 l
26.6757 17.7651 l
27.0820 17.7566 27.3444 17.7217 27.4628 17.6604  c
27.5813 17.5990 27.6639 17.5165 27.7104 17.4128  c
27.7570 17.3091 27.7802 16.9991 27.7802 16.4829  c
27.7802 11.8364 l
27.7802 11.2101 27.7591 10.8081 27.7168 10.6303  c
27.6871 10.4949 27.6332 10.3955 27.5549 10.3320  c
27.4766 10.2685 27.3824 10.2368 27.2724 10.2368  c
27.1158 10.2368 26.8979 10.3024 26.6186 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
36.0000 266.000 m
34.0000 266.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
36.0000 163.000 m
34.0000 163.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
36.0000 60.0000 m
34.0000 60.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 364 350 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
