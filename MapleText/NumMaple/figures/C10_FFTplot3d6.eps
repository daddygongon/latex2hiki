%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 280 575 511
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2013”N11ŒŽ29“ú 18Žž50•ª51•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
516 213 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
516.000 0 l
516.000 213.000 l
0 213.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 506 203 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
45.0000 1.00116 459.998 167.998 rc
0.470588 0 0.0549020 RG
newpath
46.0000 3.00116 m
49.5984 12.3779 l
53.1968 19.1089 l
56.7952 25.5487 l
60.3936 32.9016 l
63.9920 40.6783 l
67.5904 50.3336 l
71.1888 49.3101 l
74.7872 53.8400 l
78.3856 61.5223 l
81.9841 61.6025 l
85.5825 79.5165 l
89.1809 64.2877 l
92.7793 68.9509 l
96.3777 68.1140 l
99.9761 72.7351 l
103.574 72.9583 l
107.173 85.8027 l
110.771 89.6759 l
114.369 168.000 l
S
cliprestore
newpath
0 0 m
0 203.000 l
506.000 203.000 l
506.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
44.0000 170.000 m
502.998 170.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
270 188 8 15 rc
Q
cliprestore
newpath
0 0 m
0 203.000 l
506.000 203.000 l
506.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
114.000 170.000 m
114.000 174.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
117.960 190.343 m
117.357 192.000 l
112.279 192.000 l
112.279 191.765 l
113.773 190.402 114.824 189.289 115.434 188.426  c
116.043 187.563 116.348 186.773 116.348 186.058  c
116.348 185.512 116.181 185.064 115.846 184.712  c
115.512 184.361 115.112 184.186 114.647 184.186  c
114.223 184.186 113.844 184.309 113.507 184.557  c
113.171 184.804 112.922 185.167 112.761 185.646  c
112.526 185.646 l
112.632 184.863 112.904 184.262 113.342 183.843  c
113.780 183.424 114.327 183.214 114.983 183.214  c
115.681 183.214 116.264 183.439 116.732 183.887  c
117.199 184.336 117.433 184.865 117.433 185.474  c
117.433 185.910 117.332 186.346 117.128 186.782  c
116.815 187.467 116.307 188.193 115.605 188.959  c
114.551 190.110 113.893 190.804 113.631 191.041  c
115.878 191.041 l
116.335 191.041 116.656 191.024 116.840 190.990  c
117.024 190.956 117.190 190.888 117.338 190.784  c
117.486 190.680 117.615 190.533 117.725 190.343  c
h
119.469 187.747 m
119.469 186.765 119.617 185.920 119.914 185.211  c
120.210 184.502 120.603 183.974 121.094 183.627  c
121.475 183.352 121.869 183.214 122.275 183.214  c
122.935 183.214 123.528 183.551 124.052 184.224  c
124.708 185.057 125.036 186.187 125.036 187.613  c
125.036 188.612 124.892 189.460 124.605 190.159  c
124.317 190.857 123.950 191.364 123.503 191.679  c
123.057 191.994 122.626 192.152 122.211 192.152  c
121.391 192.152 120.707 191.667 120.161 190.698  c
119.700 189.882 119.469 188.898 119.469 187.747  c
h
120.713 187.905 m
120.713 189.090 120.859 190.057 121.151 190.806  c
121.393 191.437 121.752 191.752 122.231 191.752  c
122.459 191.752 122.696 191.649 122.941 191.444  c
123.187 191.239 123.373 190.895 123.500 190.413  c
123.695 189.685 123.792 188.659 123.792 187.334  c
123.792 186.352 123.690 185.533 123.487 184.877  c
123.335 184.391 123.138 184.046 122.897 183.843  c
122.724 183.703 122.514 183.633 122.269 183.633  c
121.981 183.633 121.725 183.762 121.501 184.021  c
121.196 184.372 120.988 184.924 120.878 185.677  c
120.768 186.431 120.713 187.173 120.713 187.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
186.000 170.000 m
186.000 174.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.049 188.826 m
190.049 189.727 l
188.894 189.727 l
188.894 192.000 l
187.846 192.000 l
187.846 189.727 l
184.203 189.727 l
184.203 188.915 l
188.195 183.214 l
188.894 183.214 l
188.894 188.826 l
h
187.846 188.826 m
187.846 184.554 l
184.825 188.826 l
h
191.469 187.747 m
191.469 186.765 191.617 185.920 191.914 185.211  c
192.210 184.502 192.603 183.974 193.094 183.627  c
193.475 183.352 193.869 183.214 194.275 183.214  c
194.935 183.214 195.528 183.551 196.052 184.224  c
196.708 185.057 197.036 186.187 197.036 187.613  c
197.036 188.612 196.892 189.460 196.605 190.159  c
196.317 190.857 195.950 191.364 195.503 191.679  c
195.057 191.994 194.626 192.152 194.211 192.152  c
193.391 192.152 192.707 191.667 192.161 190.698  c
191.700 189.882 191.469 188.898 191.469 187.747  c
h
192.713 187.905 m
192.713 189.090 192.859 190.057 193.151 190.806  c
193.393 191.437 193.752 191.752 194.231 191.752  c
194.459 191.752 194.696 191.649 194.941 191.444  c
195.187 191.239 195.373 190.895 195.500 190.413  c
195.695 189.685 195.792 188.659 195.792 187.334  c
195.792 186.352 195.690 185.533 195.487 184.877  c
195.335 184.391 195.138 184.046 194.897 183.843  c
194.724 183.703 194.514 183.633 194.269 183.633  c
193.981 183.633 193.725 183.762 193.501 184.021  c
193.196 184.372 192.988 184.924 192.878 185.677  c
192.768 186.431 192.713 187.173 192.713 187.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
258.000 170.000 m
258.000 174.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
261.827 183.214 m
261.827 183.449 l
261.268 183.504 260.812 183.615 260.459 183.783  c
260.105 183.950 259.756 184.205 259.411 184.547  c
259.067 184.890 258.781 185.272 258.554 185.693  c
258.328 186.114 258.139 186.615 257.986 187.194  c
258.596 186.775 259.207 186.566 259.821 186.566  c
260.409 186.566 260.919 186.803 261.351 187.277  c
261.782 187.751 261.998 188.360 261.998 189.105  c
261.998 189.824 261.780 190.480 261.344 191.073  c
260.820 191.792 260.126 192.152 259.262 192.152  c
258.674 192.152 258.175 191.957 257.764 191.568  c
256.960 190.810 256.558 189.829 256.558 188.623  c
256.558 187.852 256.713 187.120 257.022 186.426  c
257.330 185.732 257.772 185.117 258.345 184.579  c
258.918 184.042 259.467 183.680 259.992 183.494  c
260.517 183.307 261.006 183.214 261.459 183.214  c
h
257.878 187.658 m
257.802 188.229 257.764 188.690 257.764 189.042  c
257.764 189.448 257.839 189.889 257.990 190.365  c
258.140 190.841 258.363 191.219 258.659 191.498  c
258.875 191.697 259.137 191.796 259.446 191.796  c
259.814 191.796 260.144 191.623 260.433 191.276  c
260.723 190.929 260.868 190.434 260.868 189.791  c
260.868 189.067 260.724 188.441 260.437 187.912  c
260.149 187.383 259.740 187.118 259.211 187.118  c
259.051 187.118 258.878 187.152 258.694 187.220  c
258.510 187.287 258.238 187.433 257.878 187.658  c
h
263.469 187.747 m
263.469 186.765 263.617 185.920 263.914 185.211  c
264.210 184.502 264.603 183.974 265.094 183.627  c
265.475 183.352 265.869 183.214 266.275 183.214  c
266.935 183.214 267.528 183.551 268.052 184.224  c
268.708 185.057 269.036 186.187 269.036 187.613  c
269.036 188.612 268.892 189.460 268.605 190.159  c
268.317 190.857 267.950 191.364 267.503 191.679  c
267.057 191.994 266.626 192.152 266.211 192.152  c
265.391 192.152 264.707 191.667 264.161 190.698  c
263.700 189.882 263.469 188.898 263.469 187.747  c
h
264.713 187.905 m
264.713 189.090 264.859 190.057 265.151 190.806  c
265.393 191.437 265.752 191.752 266.231 191.752  c
266.459 191.752 266.696 191.649 266.941 191.444  c
267.187 191.239 267.373 190.895 267.500 190.413  c
267.695 189.685 267.792 188.659 267.792 187.334  c
267.792 186.352 267.690 185.533 267.487 184.877  c
267.335 184.391 267.138 184.046 266.897 183.843  c
266.724 183.703 266.514 183.633 266.269 183.633  c
265.981 183.633 265.725 183.762 265.501 184.021  c
265.196 184.372 264.988 184.924 264.878 185.677  c
264.768 186.431 264.713 187.173 264.713 187.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
330.000 170.000 m
330.000 174.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
330.494 187.664 m
329.813 187.106 329.374 186.657 329.177 186.318  c
328.980 185.980 328.882 185.629 328.882 185.265  c
328.882 184.706 329.098 184.225 329.529 183.821  c
329.961 183.416 330.534 183.214 331.250 183.214  c
331.944 183.214 332.502 183.403 332.925 183.779  c
333.349 184.156 333.560 184.585 333.560 185.068  c
333.560 185.390 333.446 185.717 333.217 186.052  c
332.989 186.386 332.513 186.780 331.789 187.232  c
332.534 187.808 333.027 188.261 333.268 188.591  c
333.590 189.022 333.751 189.477 333.751 189.956  c
333.751 190.561 333.520 191.078 333.059 191.508  c
332.597 191.937 331.992 192.152 331.243 192.152  c
330.426 192.152 329.790 191.896 329.333 191.384  c
328.969 190.973 328.787 190.525 328.787 190.038  c
328.787 189.657 328.915 189.280 329.171 188.905  c
329.427 188.531 329.868 188.117 330.494 187.664  c
h
331.491 186.985 m
331.999 186.528 332.320 186.167 332.456 185.903  c
332.591 185.638 332.659 185.339 332.659 185.004  c
332.659 184.560 332.534 184.212 332.284 183.960  c
332.035 183.708 331.694 183.583 331.262 183.583  c
330.831 183.583 330.479 183.707 330.209 183.957  c
329.938 184.207 329.802 184.499 329.802 184.833  c
329.802 185.053 329.858 185.273 329.970 185.493  c
330.083 185.713 330.242 185.923 330.450 186.122  c
h
330.793 187.905 m
330.441 188.202 330.181 188.524 330.012 188.873  c
329.842 189.222 329.758 189.600 329.758 190.006  c
329.758 190.552 329.907 190.989 330.205 191.317  c
330.504 191.645 330.884 191.809 331.345 191.809  c
331.802 191.809 332.168 191.680 332.443 191.422  c
332.718 191.164 332.856 190.851 332.856 190.482  c
332.856 190.178 332.775 189.905 332.614 189.664  c
332.314 189.215 331.707 188.629 330.793 187.905  c
h
335.469 187.747 m
335.469 186.765 335.617 185.920 335.914 185.211  c
336.210 184.502 336.603 183.974 337.094 183.627  c
337.475 183.352 337.869 183.214 338.275 183.214  c
338.935 183.214 339.528 183.551 340.052 184.224  c
340.708 185.057 341.036 186.187 341.036 187.613  c
341.036 188.612 340.892 189.460 340.605 190.159  c
340.317 190.857 339.950 191.364 339.503 191.679  c
339.057 191.994 338.626 192.152 338.211 192.152  c
337.391 192.152 336.707 191.667 336.161 190.698  c
335.700 189.882 335.469 188.898 335.469 187.747  c
h
336.713 187.905 m
336.713 189.090 336.859 190.057 337.151 190.806  c
337.393 191.437 337.752 191.752 338.231 191.752  c
338.459 191.752 338.696 191.649 338.941 191.444  c
339.187 191.239 339.373 190.895 339.500 190.413  c
339.695 189.685 339.792 188.659 339.792 187.334  c
339.792 186.352 339.690 185.533 339.487 184.877  c
339.335 184.391 339.138 184.046 338.897 183.843  c
338.724 183.703 338.514 183.633 338.269 183.633  c
337.981 183.633 337.725 183.762 337.501 184.021  c
337.196 184.372 336.988 184.924 336.878 185.677  c
336.768 186.431 336.713 187.173 336.713 187.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
402.000 170.000 m
402.000 174.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
398.523 184.236 m
400.618 183.214 l
400.827 183.214 l
400.827 190.482 l
400.827 190.965 400.847 191.265 400.887 191.384  c
400.928 191.502 401.011 191.593 401.138 191.657  c
401.265 191.720 401.523 191.756 401.913 191.765  c
401.913 192.000 l
398.675 192.000 l
398.675 191.765 l
399.082 191.756 399.344 191.721 399.462 191.660  c
399.581 191.599 399.663 191.516 399.710 191.412  c
399.757 191.309 399.780 190.999 399.780 190.482  c
399.780 185.836 l
399.780 185.210 399.759 184.808 399.716 184.630  c
399.687 184.495 399.633 184.395 399.554 184.332  c
399.476 184.268 399.382 184.236 399.272 184.236  c
399.115 184.236 398.897 184.302 398.618 184.433  c
h
404.469 187.747 m
404.469 186.765 404.617 185.920 404.914 185.211  c
405.210 184.502 405.603 183.974 406.094 183.627  c
406.475 183.352 406.869 183.214 407.275 183.214  c
407.935 183.214 408.528 183.551 409.052 184.224  c
409.708 185.057 410.036 186.187 410.036 187.613  c
410.036 188.612 409.892 189.460 409.605 190.159  c
409.317 190.857 408.950 191.364 408.503 191.679  c
408.057 191.994 407.626 192.152 407.211 192.152  c
406.391 192.152 405.707 191.667 405.161 190.698  c
404.700 189.882 404.469 188.898 404.469 187.747  c
h
405.713 187.905 m
405.713 189.090 405.859 190.057 406.151 190.806  c
406.393 191.437 406.752 191.752 407.231 191.752  c
407.459 191.752 407.696 191.649 407.941 191.444  c
408.187 191.239 408.373 190.895 408.500 190.413  c
408.695 189.685 408.792 188.659 408.792 187.334  c
408.792 186.352 408.690 185.533 408.487 184.877  c
408.335 184.391 408.138 184.046 407.897 183.843  c
407.724 183.703 407.514 183.633 407.269 183.633  c
406.981 183.633 406.725 183.762 406.501 184.021  c
406.196 184.372 405.988 184.924 405.878 185.677  c
405.768 186.431 405.713 187.173 405.713 187.905  c
h
411.469 187.747 m
411.469 186.765 411.617 185.920 411.914 185.211  c
412.210 184.502 412.603 183.974 413.094 183.627  c
413.475 183.352 413.869 183.214 414.275 183.214  c
414.935 183.214 415.528 183.551 416.052 184.224  c
416.708 185.057 417.036 186.187 417.036 187.613  c
417.036 188.612 416.892 189.460 416.605 190.159  c
416.317 190.857 415.950 191.364 415.503 191.679  c
415.057 191.994 414.626 192.152 414.211 192.152  c
413.391 192.152 412.707 191.667 412.161 190.698  c
411.700 189.882 411.469 188.898 411.469 187.747  c
h
412.713 187.905 m
412.713 189.090 412.859 190.057 413.151 190.806  c
413.393 191.437 413.752 191.752 414.231 191.752  c
414.459 191.752 414.696 191.649 414.941 191.444  c
415.187 191.239 415.373 190.895 415.500 190.413  c
415.695 189.685 415.792 188.659 415.792 187.334  c
415.792 186.352 415.690 185.533 415.487 184.877  c
415.335 184.391 415.138 184.046 414.897 183.843  c
414.724 183.703 414.514 183.633 414.269 183.633  c
413.981 183.633 413.725 183.762 413.501 184.021  c
413.196 184.372 412.988 184.924 412.878 185.677  c
412.768 186.431 412.713 187.173 412.713 187.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
474.000 170.000 m
474.000 174.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
470.523 184.236 m
472.618 183.214 l
472.827 183.214 l
472.827 190.482 l
472.827 190.965 472.847 191.265 472.887 191.384  c
472.928 191.502 473.011 191.593 473.138 191.657  c
473.265 191.720 473.523 191.756 473.913 191.765  c
473.913 192.000 l
470.675 192.000 l
470.675 191.765 l
471.082 191.756 471.344 191.721 471.462 191.660  c
471.581 191.599 471.663 191.516 471.710 191.412  c
471.757 191.309 471.780 190.999 471.780 190.482  c
471.780 185.836 l
471.780 185.210 471.759 184.808 471.716 184.630  c
471.687 184.495 471.633 184.395 471.554 184.332  c
471.476 184.268 471.382 184.236 471.272 184.236  c
471.115 184.236 470.897 184.302 470.618 184.433  c
h
481.960 190.343 m
481.357 192.000 l
476.279 192.000 l
476.279 191.765 l
477.773 190.402 478.824 189.289 479.434 188.426  c
480.043 187.563 480.348 186.773 480.348 186.058  c
480.348 185.512 480.181 185.064 479.846 184.712  c
479.512 184.361 479.112 184.186 478.647 184.186  c
478.223 184.186 477.844 184.309 477.507 184.557  c
477.171 184.804 476.922 185.167 476.761 185.646  c
476.526 185.646 l
476.632 184.863 476.904 184.262 477.342 183.843  c
477.780 183.424 478.327 183.214 478.983 183.214  c
479.681 183.214 480.264 183.439 480.732 183.887  c
481.199 184.336 481.433 184.865 481.433 185.474  c
481.433 185.910 481.332 186.346 481.128 186.782  c
480.815 187.467 480.307 188.193 479.605 188.959  c
478.551 190.110 477.893 190.804 477.631 191.041  c
479.878 191.041 l
480.335 191.041 480.656 191.024 480.840 190.990  c
481.024 190.956 481.190 190.888 481.338 190.784  c
481.486 190.680 481.615 190.533 481.725 190.343  c
h
483.469 187.747 m
483.469 186.765 483.617 185.920 483.914 185.211  c
484.210 184.502 484.603 183.974 485.094 183.627  c
485.475 183.352 485.869 183.214 486.275 183.214  c
486.935 183.214 487.528 183.551 488.052 184.224  c
488.708 185.057 489.036 186.187 489.036 187.613  c
489.036 188.612 488.892 189.460 488.605 190.159  c
488.317 190.857 487.950 191.364 487.503 191.679  c
487.057 191.994 486.626 192.152 486.211 192.152  c
485.391 192.152 484.707 191.667 484.161 190.698  c
483.700 189.882 483.469 188.898 483.469 187.747  c
h
484.713 187.905 m
484.713 189.090 484.859 190.057 485.151 190.806  c
485.393 191.437 485.752 191.752 486.231 191.752  c
486.459 191.752 486.696 191.649 486.941 191.444  c
487.187 191.239 487.373 190.895 487.500 190.413  c
487.695 189.685 487.792 188.659 487.792 187.334  c
487.792 186.352 487.690 185.533 487.487 184.877  c
487.335 184.391 487.138 184.046 486.897 183.843  c
486.724 183.703 486.514 183.633 486.269 183.633  c
485.981 183.633 485.725 183.762 485.501 184.021  c
485.196 184.372 484.988 184.924 484.878 185.677  c
484.768 186.431 484.713 187.173 484.713 187.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
78.0000 170.000 m
78.0000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
150.000 170.000 m
150.000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
222.000 170.000 m
222.000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
294.000 170.000 m
294.000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
366.000 170.000 m
366.000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
438.000 170.000 m
438.000 172.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
44.0000 170.000 m
44.0000 3.00116 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 78 8 15 rc
Q
cliprestore
newpath
0 0 m
0 203.000 l
506.000 203.000 l
506.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
44.0000 165.000 m
40.0000 165.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
18.5234 167.236 m
20.6181 166.214 l
20.8276 166.214 l
20.8276 173.482 l
20.8276 173.965 20.8477 174.265 20.8879 174.384  c
20.9281 174.502 21.0117 174.593 21.1386 174.657  c
21.2656 174.720 21.5237 174.756 21.9130 174.765  c
21.9130 175.000 l
18.6757 175.000 l
18.6757 174.765 l
19.0820 174.756 19.3444 174.721 19.4628 174.660  c
19.5813 174.599 19.6639 174.516 19.7104 174.412  c
19.7570 174.309 19.7802 173.999 19.7802 173.482  c
19.7802 168.836 l
19.7802 168.210 19.7591 167.808 19.7168 167.630  c
19.6871 167.495 19.6332 167.395 19.5549 167.332  c
19.4766 167.268 19.3824 167.236 19.2724 167.236  c
19.1158 167.236 18.8979 167.302 18.6186 167.433  c
h
24.4697 170.747 m
24.4697 169.765 24.6178 168.920 24.9140 168.211  c
25.2102 167.502 25.6038 166.974 26.0947 166.627  c
26.4755 166.352 26.8691 166.214 27.2753 166.214  c
27.9355 166.214 28.5279 166.551 29.0527 167.224  c
29.7086 168.057 30.0366 169.187 30.0366 170.613  c
30.0366 171.612 29.8927 172.460 29.6049 173.159  c
29.3172 173.857 28.9501 174.364 28.5036 174.679  c
28.0572 174.994 27.6266 175.152 27.2119 175.152  c
26.3909 175.152 25.7075 174.667 25.1616 173.698  c
24.7003 172.882 24.4697 171.898 24.4697 170.747  c
h
25.7138 170.905 m
25.7138 172.090 25.8598 173.057 26.1518 173.806  c
26.3930 174.437 26.7527 174.752 27.2309 174.752  c
27.4594 174.752 27.6964 174.649 27.9418 174.444  c
28.1873 174.239 28.3735 173.895 28.5004 173.413  c
28.6951 172.685 28.7924 171.659 28.7924 170.334  c
28.7924 169.352 28.6909 168.533 28.4877 167.877  c
28.3354 167.391 28.1386 167.046 27.8974 166.843  c
27.7239 166.703 27.5144 166.633 27.2690 166.633  c
26.9812 166.633 26.7252 166.762 26.5009 167.021  c
26.1962 167.372 25.9889 167.924 25.8789 168.677  c
25.7688 169.431 25.7138 170.173 25.7138 170.905  c
h
f
newpath
33.4052 167.387 m
35.9296 167.387 l
35.9296 168.125 l
33.4052 168.125 l
h
f
newpath
42.5849 168.725 m
42.1210 170.000 l
38.2148 170.000 l
38.2148 169.819 l
39.3639 168.771 40.1728 167.915 40.6416 167.251  c
41.1103 166.586 41.3447 165.979 41.3447 165.429  c
41.3447 165.009 41.2161 164.664 40.9589 164.394  c
40.7018 164.124 40.3942 163.989 40.0361 163.989  c
39.7106 163.989 39.4184 164.084 39.1596 164.274  c
38.9008 164.465 38.7096 164.744 38.5859 165.112  c
38.4052 165.112 l
38.4866 164.510 38.6958 164.047 39.0327 163.725  c
39.3696 163.403 39.7903 163.242 40.2949 163.242  c
40.8320 163.242 41.2804 163.414 41.6401 163.759  c
41.9998 164.104 42.1796 164.511 42.1796 164.980  c
42.1796 165.315 42.1015 165.651 41.9453 165.986  c
41.7044 166.513 41.3138 167.071 40.7734 167.661  c
39.9628 168.546 39.4567 169.080 39.2548 169.262  c
40.9834 169.262 l
41.3349 169.262 41.5815 169.249 41.7231 169.223  c
41.8647 169.197 41.9925 169.144 42.1064 169.064  c
42.2203 168.985 42.3196 168.872 42.4043 168.725  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 138.000 m
40.0000 138.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
18.5234 139.236 m
20.6181 138.214 l
20.8276 138.214 l
20.8276 145.482 l
20.8276 145.965 20.8477 146.265 20.8879 146.384  c
20.9281 146.502 21.0117 146.593 21.1386 146.657  c
21.2656 146.720 21.5237 146.756 21.9130 146.765  c
21.9130 147.000 l
18.6757 147.000 l
18.6757 146.765 l
19.0820 146.756 19.3444 146.721 19.4628 146.660  c
19.5813 146.599 19.6639 146.516 19.7104 146.412  c
19.7570 146.309 19.7802 145.999 19.7802 145.482  c
19.7802 140.836 l
19.7802 140.210 19.7591 139.808 19.7168 139.630  c
19.6871 139.495 19.6332 139.395 19.5549 139.332  c
19.4766 139.268 19.3824 139.236 19.2724 139.236  c
19.1158 139.236 18.8979 139.302 18.6186 139.433  c
h
24.4697 142.747 m
24.4697 141.765 24.6178 140.920 24.9140 140.211  c
25.2102 139.502 25.6038 138.974 26.0947 138.627  c
26.4755 138.352 26.8691 138.214 27.2753 138.214  c
27.9355 138.214 28.5279 138.551 29.0527 139.224  c
29.7086 140.057 30.0366 141.187 30.0366 142.613  c
30.0366 143.612 29.8927 144.460 29.6049 145.159  c
29.3172 145.857 28.9501 146.364 28.5036 146.679  c
28.0572 146.994 27.6266 147.152 27.2119 147.152  c
26.3909 147.152 25.7075 146.667 25.1616 145.698  c
24.7003 144.882 24.4697 143.898 24.4697 142.747  c
h
25.7138 142.905 m
25.7138 144.090 25.8598 145.057 26.1518 145.806  c
26.3930 146.437 26.7527 146.752 27.2309 146.752  c
27.4594 146.752 27.6964 146.649 27.9418 146.444  c
28.1873 146.239 28.3735 145.895 28.5004 145.413  c
28.6951 144.685 28.7924 143.659 28.7924 142.334  c
28.7924 141.352 28.6909 140.533 28.4877 139.877  c
28.3354 139.391 28.1386 139.046 27.8974 138.843  c
27.7239 138.703 27.5144 138.633 27.2690 138.633  c
26.9812 138.633 26.7252 138.762 26.5009 139.021  c
26.1962 139.372 25.9889 139.924 25.8789 140.677  c
25.7688 141.431 25.7138 142.173 25.7138 142.905  c
h
f
newpath
33.4052 139.387 m
35.9296 139.387 l
35.9296 140.125 l
33.4052 140.125 l
h
f
newpath
39.1718 136.028 m
40.7832 135.242 l
40.9443 135.242 l
40.9443 140.833 l
40.9443 141.204 40.9598 141.435 40.9907 141.526  c
41.0216 141.617 41.0859 141.687 41.1835 141.736  c
41.2812 141.785 41.4798 141.812 41.7793 141.819  c
41.7793 142.000 l
39.2890 142.000 l
39.2890 141.819 l
39.6015 141.812 39.8033 141.786 39.8945 141.738  c
39.9856 141.691 40.0491 141.628 40.0849 141.548  c
40.1207 141.468 40.1386 141.230 40.1386 140.833  c
40.1386 137.258 l
40.1386 136.777 40.1224 136.467 40.0898 136.331  c
40.0670 136.226 40.0255 136.150 39.9653 136.101  c
39.9051 136.052 39.8326 136.028 39.7480 136.028  c
39.6276 136.028 39.4599 136.078 39.2451 136.179  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 110.000 m
40.0000 110.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
25.5234 112.236 m
27.6181 111.214 l
27.8276 111.214 l
27.8276 118.482 l
27.8276 118.965 27.8477 119.265 27.8879 119.384  c
27.9281 119.502 28.0117 119.593 28.1386 119.657  c
28.2656 119.720 28.5237 119.756 28.9130 119.765  c
28.9130 120.000 l
25.6757 120.000 l
25.6757 119.765 l
26.0820 119.756 26.3444 119.721 26.4628 119.660  c
26.5813 119.599 26.6639 119.516 26.7104 119.412  c
26.7570 119.309 26.7802 118.999 26.7802 118.482  c
26.7802 113.836 l
26.7802 113.210 26.7591 112.808 26.7168 112.630  c
26.6871 112.495 26.6332 112.395 26.5549 112.332  c
26.4766 112.268 26.3824 112.236 26.2724 112.236  c
26.1158 112.236 25.8979 112.302 25.6186 112.433  c
h
31.4697 115.747 m
31.4697 114.765 31.6178 113.920 31.9140 113.211  c
32.2102 112.502 32.6038 111.974 33.0947 111.627  c
33.4755 111.352 33.8691 111.214 34.2753 111.214  c
34.9355 111.214 35.5279 111.551 36.0527 112.224  c
36.7086 113.057 37.0366 114.187 37.0366 115.613  c
37.0366 116.612 36.8927 117.460 36.6049 118.159  c
36.3172 118.857 35.9501 119.364 35.5036 119.679  c
35.0572 119.994 34.6266 120.152 34.2119 120.152  c
33.3909 120.152 32.7075 119.667 32.1616 118.698  c
31.7003 117.882 31.4697 116.898 31.4697 115.747  c
h
32.7138 115.905 m
32.7138 117.090 32.8598 118.057 33.1518 118.806  c
33.3930 119.437 33.7527 119.752 34.2309 119.752  c
34.4594 119.752 34.6964 119.649 34.9418 119.444  c
35.1873 119.239 35.3735 118.895 35.5004 118.413  c
35.6951 117.685 35.7924 116.659 35.7924 115.334  c
35.7924 114.352 35.6909 113.533 35.4877 112.877  c
35.3354 112.391 35.1386 112.046 34.8974 111.843  c
34.7239 111.703 34.5144 111.633 34.2690 111.633  c
33.9812 111.633 33.7252 111.762 33.5009 112.021  c
33.1962 112.372 32.9889 112.924 32.8789 113.677  c
32.7688 114.431 32.7138 115.173 32.7138 115.905  c
h
f
newpath
38.3613 111.728 m
38.3613 110.973 38.4752 110.323 38.7031 109.777  c
38.9309 109.232 39.2337 108.826 39.6113 108.559  c
39.9043 108.348 40.2070 108.242 40.5195 108.242  c
41.0273 108.242 41.4830 108.501 41.8867 109.018  c
42.3912 109.659 42.6435 110.529 42.6435 111.626  c
42.6435 112.394 42.5328 113.046 42.3115 113.584  c
42.0901 114.121 41.8077 114.510 41.4643 114.753  c
41.1209 114.995 40.7897 115.117 40.4707 115.117  c
39.8391 115.117 39.3134 114.744 38.8935 113.999  c
38.5387 113.370 38.3613 112.613 38.3613 111.728  c
h
39.3183 111.850 m
39.3183 112.762 39.4306 113.505 39.6552 114.082  c
39.8408 114.567 40.1175 114.809 40.4853 114.809  c
40.6611 114.809 40.8434 114.730 41.0322 114.572  c
41.2210 114.414 41.3642 114.150 41.4619 113.779  c
41.6116 113.219 41.6865 112.430 41.6865 111.411  c
41.6865 110.655 41.6084 110.026 41.4521 109.521  c
41.3349 109.147 41.1835 108.881 40.9980 108.725  c
40.8645 108.618 40.7034 108.564 40.5146 108.564  c
40.2932 108.564 40.0963 108.663 39.9238 108.862  c
39.6894 109.132 39.5299 109.557 39.4453 110.136  c
39.3606 110.716 39.3183 111.287 39.3183 111.850  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 83.0000 m
40.0000 83.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
25.5234 84.2368 m
27.6181 83.2148 l
27.8276 83.2148 l
27.8276 90.4829 l
27.8276 90.9653 27.8477 91.2657 27.8879 91.3842  c
27.9281 91.5027 28.0117 91.5937 28.1386 91.6572  c
28.2656 91.7207 28.5237 91.7566 28.9130 91.7651  c
28.9130 92.0000 l
25.6757 92.0000 l
25.6757 91.7651 l
26.0820 91.7566 26.3444 91.7217 26.4628 91.6604  c
26.5813 91.5990 26.6639 91.5165 26.7104 91.4128  c
26.7570 91.3091 26.7802 90.9991 26.7802 90.4829  c
26.7802 85.8364 l
26.7802 85.2101 26.7591 84.8081 26.7168 84.6303  c
26.6871 84.4949 26.6332 84.3955 26.5549 84.3320  c
26.4766 84.2685 26.3824 84.2368 26.2724 84.2368  c
26.1158 84.2368 25.8979 84.3024 25.6186 84.4335  c
h
31.4697 87.7470 m
31.4697 86.7653 31.6178 85.9200 31.9140 85.2111  c
32.2102 84.5023 32.6038 83.9744 33.0947 83.6274  c
33.4755 83.3523 33.8691 83.2148 34.2753 83.2148  c
34.9355 83.2148 35.5279 83.5512 36.0527 84.2241  c
36.7086 85.0577 37.0366 86.1876 37.0366 87.6137  c
37.0366 88.6124 36.8927 89.4609 36.6049 90.1591  c
36.3172 90.8574 35.9501 91.3641 35.5036 91.6794  c
35.0572 91.9947 34.6266 92.1523 34.2119 92.1523  c
33.3909 92.1523 32.7075 91.6678 32.1616 90.6987  c
31.7003 89.8820 31.4697 88.8981 31.4697 87.7470  c
h
32.7138 87.9057 m
32.7138 89.0906 32.8598 90.0576 33.1518 90.8066  c
33.3930 91.4371 33.7527 91.7524 34.2309 91.7524  c
34.4594 91.7524 34.6964 91.6498 34.9418 91.4445  c
35.1873 91.2393 35.3735 90.8955 35.5004 90.4130  c
35.6951 89.6852 35.7924 88.6590 35.7924 87.3344  c
35.7924 86.3527 35.6909 85.5338 35.4877 84.8779  c
35.3354 84.3912 35.1386 84.0463 34.8974 83.8432  c
34.7239 83.7036 34.5144 83.6337 34.2690 83.6337  c
33.9812 83.6337 33.7252 83.7628 33.5009 84.0210  c
33.1962 84.3722 32.9889 84.9244 32.8789 85.6777  c
32.7688 86.4309 32.7138 87.1736 32.7138 87.9057  c
h
f
newpath
39.1718 81.0283 m
40.7832 80.2421 l
40.9443 80.2421 l
40.9443 85.8330 l
40.9443 86.2041 40.9598 86.4352 40.9907 86.5263  c
41.0216 86.6175 41.0859 86.6875 41.1835 86.7363  c
41.2812 86.7851 41.4798 86.8128 41.7793 86.8193  c
41.7793 87.0000 l
39.2890 87.0000 l
39.2890 86.8193 l
39.6015 86.8128 39.8033 86.7859 39.8945 86.7387  c
39.9856 86.6915 40.0491 86.6280 40.0849 86.5483  c
40.1207 86.4685 40.1386 86.2301 40.1386 85.8330  c
40.1386 82.2587 l
40.1386 81.7770 40.1224 81.4677 40.0898 81.3310  c
40.0670 81.2268 40.0255 81.1503 39.9653 81.1015  c
39.9051 81.0527 39.8326 81.0283 39.7480 81.0283  c
39.6276 81.0283 39.4599 81.0787 39.2451 81.1796  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 55.0000 m
40.0000 55.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
25.5234 57.2368 m
27.6181 56.2148 l
27.8276 56.2148 l
27.8276 63.4829 l
27.8276 63.9653 27.8477 64.2657 27.8879 64.3842  c
27.9281 64.5027 28.0117 64.5937 28.1386 64.6572  c
28.2656 64.7207 28.5237 64.7566 28.9130 64.7651  c
28.9130 65.0000 l
25.6757 65.0000 l
25.6757 64.7651 l
26.0820 64.7566 26.3444 64.7217 26.4628 64.6604  c
26.5813 64.5990 26.6639 64.5165 26.7104 64.4128  c
26.7570 64.3091 26.7802 63.9991 26.7802 63.4829  c
26.7802 58.8364 l
26.7802 58.2101 26.7591 57.8081 26.7168 57.6303  c
26.6871 57.4949 26.6332 57.3955 26.5549 57.3320  c
26.4766 57.2685 26.3824 57.2368 26.2724 57.2368  c
26.1158 57.2368 25.8979 57.3024 25.6186 57.4335  c
h
31.4697 60.7470 m
31.4697 59.7653 31.6178 58.9200 31.9140 58.2111  c
32.2102 57.5023 32.6038 56.9744 33.0947 56.6274  c
33.4755 56.3523 33.8691 56.2148 34.2753 56.2148  c
34.9355 56.2148 35.5279 56.5512 36.0527 57.2241  c
36.7086 58.0577 37.0366 59.1876 37.0366 60.6137  c
37.0366 61.6124 36.8927 62.4609 36.6049 63.1591  c
36.3172 63.8574 35.9501 64.3641 35.5036 64.6794  c
35.0572 64.9947 34.6266 65.1523 34.2119 65.1523  c
33.3909 65.1523 32.7075 64.6678 32.1616 63.6987  c
31.7003 62.8820 31.4697 61.8981 31.4697 60.7470  c
h
32.7138 60.9057 m
32.7138 62.0906 32.8598 63.0576 33.1518 63.8066  c
33.3930 64.4371 33.7527 64.7524 34.2309 64.7524  c
34.4594 64.7524 34.6964 64.6498 34.9418 64.4445  c
35.1873 64.2393 35.3735 63.8955 35.5004 63.4130  c
35.6951 62.6852 35.7924 61.6590 35.7924 60.3344  c
35.7924 59.3527 35.6909 58.5338 35.4877 57.8779  c
35.3354 57.3912 35.1386 57.0463 34.8974 56.8432  c
34.7239 56.7036 34.5144 56.6337 34.2690 56.6337  c
33.9812 56.6337 33.7252 56.7628 33.5009 57.0210  c
33.1962 57.3722 32.9889 57.9244 32.8789 58.6777  c
32.7688 59.4309 32.7138 60.1736 32.7138 60.9057  c
h
f
newpath
42.5849 58.7255 m
42.1210 60.0000 l
38.2148 60.0000 l
38.2148 59.8193 l
39.3639 58.7711 40.1728 57.9150 40.6416 57.2509  c
41.1103 56.5869 41.3447 55.9798 41.3447 55.4296  c
41.3447 55.0097 41.2161 54.6647 40.9589 54.3945  c
40.7018 54.1243 40.3942 53.9892 40.0361 53.9892  c
39.7106 53.9892 39.4184 54.0844 39.1596 54.2749  c
38.9008 54.4653 38.7096 54.7444 38.5859 55.1123  c
38.4052 55.1123 l
38.4866 54.5100 38.6958 54.0478 39.0327 53.7255  c
39.3696 53.4033 39.7903 53.2421 40.2949 53.2421  c
40.8320 53.2421 41.2804 53.4147 41.6401 53.7597  c
41.9998 54.1048 42.1796 54.5117 42.1796 54.9804  c
42.1796 55.3157 42.1015 55.6510 41.9453 55.9863  c
41.7044 56.5136 41.3138 57.0719 40.7734 57.6611  c
39.9628 58.5465 39.4567 59.0804 39.2548 59.2627  c
40.9834 59.2627 l
41.3349 59.2627 41.5815 59.2496 41.7231 59.2236  c
41.8647 59.1975 41.9925 59.1446 42.1064 59.0649  c
42.2203 58.9851 42.3196 58.8720 42.4043 58.7255  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 28.0000 m
40.0000 28.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
25.5234 29.2368 m
27.6181 28.2148 l
27.8276 28.2148 l
27.8276 35.4829 l
27.8276 35.9653 27.8477 36.2657 27.8879 36.3842  c
27.9281 36.5027 28.0117 36.5937 28.1386 36.6572  c
28.2656 36.7207 28.5237 36.7566 28.9130 36.7651  c
28.9130 37.0000 l
25.6757 37.0000 l
25.6757 36.7651 l
26.0820 36.7566 26.3444 36.7217 26.4628 36.6604  c
26.5813 36.5990 26.6639 36.5165 26.7104 36.4128  c
26.7570 36.3091 26.7802 35.9991 26.7802 35.4829  c
26.7802 30.8364 l
26.7802 30.2101 26.7591 29.8081 26.7168 29.6303  c
26.6871 29.4949 26.6332 29.3955 26.5549 29.3320  c
26.4766 29.2685 26.3824 29.2368 26.2724 29.2368  c
26.1158 29.2368 25.8979 29.3024 25.6186 29.4335  c
h
31.4697 32.7470 m
31.4697 31.7653 31.6178 30.9200 31.9140 30.2111  c
32.2102 29.5023 32.6038 28.9744 33.0947 28.6274  c
33.4755 28.3523 33.8691 28.2148 34.2753 28.2148  c
34.9355 28.2148 35.5279 28.5512 36.0527 29.2241  c
36.7086 30.0577 37.0366 31.1876 37.0366 32.6137  c
37.0366 33.6124 36.8927 34.4609 36.6049 35.1591  c
36.3172 35.8574 35.9501 36.3641 35.5036 36.6794  c
35.0572 36.9947 34.6266 37.1523 34.2119 37.1523  c
33.3909 37.1523 32.7075 36.6678 32.1616 35.6987  c
31.7003 34.8820 31.4697 33.8981 31.4697 32.7470  c
h
32.7138 32.9057 m
32.7138 34.0906 32.8598 35.0576 33.1518 35.8066  c
33.3930 36.4371 33.7527 36.7524 34.2309 36.7524  c
34.4594 36.7524 34.6964 36.6498 34.9418 36.4445  c
35.1873 36.2393 35.3735 35.8955 35.5004 35.4130  c
35.6951 34.6852 35.7924 33.6590 35.7924 32.3344  c
35.7924 31.3527 35.6909 30.5338 35.4877 29.8779  c
35.3354 29.3912 35.1386 29.0463 34.8974 28.8432  c
34.7239 28.7036 34.5144 28.6337 34.2690 28.6337  c
33.9812 28.6337 33.7252 28.7628 33.5009 29.0210  c
33.1962 29.3722 32.9889 29.9244 32.8789 30.6777  c
32.7688 31.4309 32.7138 32.1736 32.7138 32.9057  c
h
f
newpath
38.5078 26.6386 m
38.6966 26.1927 38.9350 25.8484 39.2231 25.6059  c
39.5112 25.3634 39.8701 25.2421 40.2998 25.2421  c
40.8304 25.2421 41.2373 25.4147 41.5205 25.7597  c
41.7353 26.0169 41.8427 26.2919 41.8427 26.5849  c
41.8427 27.0667 41.5400 27.5647 40.9345 28.0791  c
41.3414 28.2386 41.6490 28.4664 41.8574 28.7627  c
42.0657 29.0589 42.1699 29.4072 42.1699 29.8076  c
42.1699 30.3805 41.9876 30.8769 41.6230 31.2968  c
41.1477 31.8437 40.4593 32.1171 39.5576 32.1171  c
39.1116 32.1171 38.8081 32.0618 38.6469 31.9511  c
38.4858 31.8404 38.4052 31.7216 38.4052 31.5947  c
38.4052 31.5003 38.4435 31.4173 38.5200 31.3457  c
38.5965 31.2740 38.6884 31.2382 38.7959 31.2382  c
38.8772 31.2382 38.9602 31.2513 39.0449 31.2773  c
39.1002 31.2936 39.2255 31.3530 39.4209 31.4555  c
39.6162 31.5581 39.7513 31.6191 39.8261 31.6386  c
39.9466 31.6744 40.0752 31.6923 40.2119 31.6923  c
40.5439 31.6923 40.8328 31.5638 41.0786 31.3066  c
41.3243 31.0494 41.4472 30.7451 41.4472 30.3935  c
41.4472 30.1363 41.3903 29.8857 41.2763 29.6416  c
41.1917 29.4593 41.0989 29.3209 40.9980 29.2265  c
40.8580 29.0963 40.6660 28.9783 40.4218 28.8725  c
40.1777 28.7667 39.9287 28.7138 39.6748 28.7138  c
39.5185 28.7138 l
39.5185 28.5673 l
39.7757 28.5348 40.0336 28.4420 40.2924 28.2890  c
40.5512 28.1360 40.7392 27.9521 40.8564 27.7373  c
40.9736 27.5224 41.0322 27.2864 41.0322 27.0293  c
41.0322 26.6940 40.9272 26.4230 40.7172 26.2163  c
40.5073 26.0096 40.2460 25.9062 39.9335 25.9062  c
39.4290 25.9062 39.0074 26.1764 38.6689 26.7168  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 153.000 m
42.0000 153.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 147.000 m
42.0000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 143.000 m
42.0000 143.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 140.000 m
42.0000 140.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 126.000 m
42.0000 126.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 120.000 m
42.0000 120.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 116.000 m
42.0000 116.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 113.000 m
42.0000 113.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 98.0000 m
42.0000 98.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 92.0000 m
42.0000 92.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 88.0000 m
42.0000 88.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 85.0000 m
42.0000 85.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 71.0000 m
42.0000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 65.0000 m
42.0000 65.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 61.0000 m
42.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 58.0000 m
42.0000 58.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 43.0000 m
42.0000 43.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 37.0000 m
42.0000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 33.0000 m
42.0000 33.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 30.0000 m
42.0000 30.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 21.0000 m
42.0000 21.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 13.0000 m
42.0000 13.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 8.00000 m
42.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 4.00000 m
42.0000 4.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 21.0000 m
42.0000 21.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 13.0000 m
42.0000 13.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 8.00000 m
42.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 4.00000 m
42.0000 4.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 516 213 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
