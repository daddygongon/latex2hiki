%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ5“ú 10Žž47•ª35•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
56.0000 2.00097 327.992 350.999 rc
1.00000 0 0 RG
newpath
57.0000 4.00097 m
74.1048 15.1683 l
91.2097 50.4117 l
108.314 23.4617 l
125.419 31.4591 l
142.524 40.4751 l
159.629 52.6953 l
176.733 74.4390 l
193.838 61.2519 l
210.943 71.8645 l
228.048 94.7872 l
245.153 83.2073 l
262.258 94.5213 l
279.363 139.875 l
296.467 102.116 l
313.572 109.586 l
330.677 117.357 l
347.782 125.809 l
364.887 136.098 l
381.992 155.613 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0 0 RG
56.0000 2.00097 327.992 350.999 rc
newpath
57.0000 4.24090 m
74.1048 28.1650 l
91.2097 74.5015 l
108.314 167.001 l
125.419 352.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
54.0000 355.000 m
381.992 355.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
215 375 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
74.0000 355.000 m
74.0000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
81.9604 374.343 m
81.3574 376.000 l
76.2793 376.000 l
76.2793 375.765 l
77.7731 374.402 78.8247 373.289 79.4340 372.426  c
80.0434 371.563 80.3481 370.773 80.3481 370.058  c
80.3481 369.512 80.1809 369.064 79.8466 368.712  c
79.5123 368.361 79.1124 368.186 78.6469 368.186  c
78.2238 368.186 77.8439 368.309 77.5075 368.557  c
77.1711 368.804 76.9225 369.167 76.7617 369.646  c
76.5268 369.646 l
76.6326 368.863 76.9045 368.262 77.3425 367.843  c
77.7805 367.424 78.3274 367.214 78.9834 367.214  c
79.6816 367.214 80.2645 367.439 80.7321 367.887  c
81.1997 368.336 81.4335 368.865 81.4335 369.474  c
81.4335 369.910 81.3320 370.346 81.1289 370.782  c
80.8157 371.467 80.3079 372.193 79.6054 372.959  c
78.5517 374.110 77.8937 374.804 77.6313 375.041  c
79.8784 375.041 l
80.3354 375.041 80.6560 375.024 80.8400 374.990  c
81.0241 374.956 81.1902 374.888 81.3383 374.784  c
81.4864 374.680 81.6155 374.533 81.7255 374.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
108.000 355.000 m
108.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
116.049 372.826 m
116.049 373.727 l
114.894 373.727 l
114.894 376.000 l
113.846 376.000 l
113.846 373.727 l
110.203 373.727 l
110.203 372.915 l
114.195 367.214 l
114.894 367.214 l
114.894 372.826 l
h
113.846 372.826 m
113.846 368.554 l
110.825 372.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
143.000 355.000 m
143.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
149.827 367.214 m
149.827 367.449 l
149.268 367.504 148.812 367.615 148.459 367.783  c
148.105 367.950 147.756 368.205 147.411 368.547  c
147.067 368.890 146.781 369.272 146.554 369.693  c
146.328 370.114 146.139 370.615 145.986 371.194  c
146.596 370.775 147.207 370.566 147.821 370.566  c
148.409 370.566 148.919 370.803 149.351 371.277  c
149.782 371.751 149.998 372.360 149.998 373.105  c
149.998 373.824 149.780 374.480 149.344 375.073  c
148.820 375.792 148.126 376.152 147.262 376.152  c
146.674 376.152 146.175 375.957 145.764 375.568  c
144.960 374.810 144.558 373.829 144.558 372.623  c
144.558 371.852 144.713 371.120 145.022 370.426  c
145.330 369.732 145.772 369.117 146.345 368.579  c
146.918 368.042 147.467 367.680 147.992 367.494  c
148.517 367.307 149.006 367.214 149.459 367.214  c
h
145.878 371.658 m
145.802 372.229 145.764 372.690 145.764 373.042  c
145.764 373.448 145.839 373.889 145.990 374.365  c
146.140 374.841 146.363 375.219 146.659 375.498  c
146.875 375.697 147.137 375.796 147.446 375.796  c
147.814 375.796 148.144 375.623 148.433 375.276  c
148.723 374.929 148.868 374.434 148.868 373.791  c
148.868 373.067 148.724 372.441 148.437 371.912  c
148.149 371.383 147.740 371.118 147.211 371.118  c
147.051 371.118 146.878 371.152 146.694 371.220  c
146.510 371.287 146.238 371.433 145.878 371.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
177.000 355.000 m
177.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.494 371.664 m
179.813 371.106 179.374 370.657 179.177 370.318  c
178.980 369.980 178.882 369.629 178.882 369.265  c
178.882 368.706 179.098 368.225 179.529 367.821  c
179.961 367.416 180.534 367.214 181.250 367.214  c
181.944 367.214 182.502 367.403 182.925 367.779  c
183.349 368.156 183.560 368.585 183.560 369.068  c
183.560 369.390 183.446 369.717 183.217 370.052  c
182.989 370.386 182.513 370.780 181.789 371.232  c
182.534 371.808 183.027 372.261 183.268 372.591  c
183.590 373.022 183.751 373.477 183.751 373.956  c
183.751 374.561 183.520 375.078 183.059 375.508  c
182.597 375.937 181.992 376.152 181.243 376.152  c
180.426 376.152 179.790 375.896 179.333 375.384  c
178.969 374.973 178.787 374.525 178.787 374.038  c
178.787 373.657 178.915 373.280 179.171 372.905  c
179.427 372.531 179.868 372.117 180.494 371.664  c
h
181.491 370.985 m
181.999 370.528 182.320 370.167 182.456 369.903  c
182.591 369.638 182.659 369.339 182.659 369.004  c
182.659 368.560 182.534 368.212 182.284 367.960  c
182.035 367.708 181.694 367.583 181.262 367.583  c
180.831 367.583 180.479 367.707 180.209 367.957  c
179.938 368.207 179.802 368.499 179.802 368.833  c
179.802 369.053 179.858 369.273 179.970 369.493  c
180.083 369.713 180.242 369.923 180.450 370.122  c
h
180.793 371.905 m
180.441 372.202 180.181 372.524 180.012 372.873  c
179.842 373.222 179.758 373.600 179.758 374.006  c
179.758 374.552 179.907 374.989 180.205 375.317  c
180.504 375.645 180.884 375.809 181.345 375.809  c
181.802 375.809 182.168 375.680 182.443 375.422  c
182.718 375.164 182.856 374.851 182.856 374.482  c
182.856 374.178 182.775 373.905 182.614 373.664  c
182.314 373.215 181.707 372.629 180.793 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
211.000 355.000 m
211.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
209.523 368.236 m
211.618 367.214 l
211.827 367.214 l
211.827 374.482 l
211.827 374.965 211.847 375.265 211.887 375.384  c
211.928 375.502 212.011 375.593 212.138 375.657  c
212.265 375.720 212.523 375.756 212.913 375.765  c
212.913 376.000 l
209.675 376.000 l
209.675 375.765 l
210.082 375.756 210.344 375.721 210.462 375.660  c
210.581 375.599 210.663 375.516 210.710 375.412  c
210.757 375.309 210.780 374.999 210.780 374.482  c
210.780 369.836 l
210.780 369.210 210.759 368.808 210.716 368.630  c
210.687 368.495 210.633 368.395 210.554 368.332  c
210.476 368.268 210.382 368.236 210.272 368.236  c
210.115 368.236 209.897 368.302 209.618 368.433  c
h
215.469 371.747 m
215.469 370.765 215.617 369.920 215.914 369.211  c
216.210 368.502 216.603 367.974 217.094 367.627  c
217.475 367.352 217.869 367.214 218.275 367.214  c
218.935 367.214 219.528 367.551 220.052 368.224  c
220.708 369.057 221.036 370.187 221.036 371.613  c
221.036 372.612 220.892 373.460 220.605 374.159  c
220.317 374.857 219.950 375.364 219.503 375.679  c
219.057 375.994 218.626 376.152 218.211 376.152  c
217.391 376.152 216.707 375.667 216.161 374.698  c
215.700 373.882 215.469 372.898 215.469 371.747  c
h
216.713 371.905 m
216.713 373.090 216.859 374.057 217.151 374.806  c
217.393 375.437 217.752 375.752 218.231 375.752  c
218.459 375.752 218.696 375.649 218.941 375.444  c
219.187 375.239 219.373 374.895 219.500 374.413  c
219.695 373.685 219.792 372.659 219.792 371.334  c
219.792 370.352 219.690 369.533 219.487 368.877  c
219.335 368.391 219.138 368.046 218.897 367.843  c
218.724 367.703 218.514 367.633 218.269 367.633  c
217.981 367.633 217.725 367.762 217.501 368.021  c
217.196 368.372 216.988 368.924 216.878 369.677  c
216.768 370.431 216.713 371.173 216.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
245.000 355.000 m
245.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
244.523 368.236 m
246.618 367.214 l
246.827 367.214 l
246.827 374.482 l
246.827 374.965 246.847 375.265 246.887 375.384  c
246.928 375.502 247.011 375.593 247.138 375.657  c
247.265 375.720 247.523 375.756 247.913 375.765  c
247.913 376.000 l
244.675 376.000 l
244.675 375.765 l
245.082 375.756 245.344 375.721 245.462 375.660  c
245.581 375.599 245.663 375.516 245.710 375.412  c
245.757 375.309 245.780 374.999 245.780 374.482  c
245.780 369.836 l
245.780 369.210 245.759 368.808 245.716 368.630  c
245.687 368.495 245.633 368.395 245.554 368.332  c
245.476 368.268 245.382 368.236 245.272 368.236  c
245.115 368.236 244.897 368.302 244.618 368.433  c
h
255.960 374.343 m
255.357 376.000 l
250.279 376.000 l
250.279 375.765 l
251.773 374.402 252.824 373.289 253.434 372.426  c
254.043 371.563 254.348 370.773 254.348 370.058  c
254.348 369.512 254.181 369.064 253.846 368.712  c
253.512 368.361 253.112 368.186 252.647 368.186  c
252.223 368.186 251.844 368.309 251.507 368.557  c
251.171 368.804 250.922 369.167 250.761 369.646  c
250.526 369.646 l
250.632 368.863 250.904 368.262 251.342 367.843  c
251.780 367.424 252.327 367.214 252.983 367.214  c
253.681 367.214 254.264 367.439 254.732 367.887  c
255.199 368.336 255.433 368.865 255.433 369.474  c
255.433 369.910 255.332 370.346 255.128 370.782  c
254.815 371.467 254.307 372.193 253.605 372.959  c
252.551 374.110 251.893 374.804 251.631 375.041  c
253.878 375.041 l
254.335 375.041 254.656 375.024 254.840 374.990  c
255.024 374.956 255.190 374.888 255.338 374.784  c
255.486 374.680 255.615 374.533 255.725 374.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
279.000 355.000 m
279.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
278.523 368.236 m
280.618 367.214 l
280.827 367.214 l
280.827 374.482 l
280.827 374.965 280.847 375.265 280.887 375.384  c
280.928 375.502 281.011 375.593 281.138 375.657  c
281.265 375.720 281.523 375.756 281.913 375.765  c
281.913 376.000 l
278.675 376.000 l
278.675 375.765 l
279.082 375.756 279.344 375.721 279.462 375.660  c
279.581 375.599 279.663 375.516 279.710 375.412  c
279.757 375.309 279.780 374.999 279.780 374.482  c
279.780 369.836 l
279.780 369.210 279.759 368.808 279.716 368.630  c
279.687 368.495 279.633 368.395 279.554 368.332  c
279.476 368.268 279.382 368.236 279.272 368.236  c
279.115 368.236 278.897 368.302 278.618 368.433  c
h
290.049 372.826 m
290.049 373.727 l
288.894 373.727 l
288.894 376.000 l
287.846 376.000 l
287.846 373.727 l
284.203 373.727 l
284.203 372.915 l
288.195 367.214 l
288.894 367.214 l
288.894 372.826 l
h
287.846 372.826 m
287.846 368.554 l
284.825 372.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
314.000 355.000 m
314.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
312.523 368.236 m
314.618 367.214 l
314.827 367.214 l
314.827 374.482 l
314.827 374.965 314.847 375.265 314.887 375.384  c
314.928 375.502 315.011 375.593 315.138 375.657  c
315.265 375.720 315.523 375.756 315.913 375.765  c
315.913 376.000 l
312.675 376.000 l
312.675 375.765 l
313.082 375.756 313.344 375.721 313.462 375.660  c
313.581 375.599 313.663 375.516 313.710 375.412  c
313.757 375.309 313.780 374.999 313.780 374.482  c
313.780 369.836 l
313.780 369.210 313.759 368.808 313.716 368.630  c
313.687 368.495 313.633 368.395 313.554 368.332  c
313.476 368.268 313.382 368.236 313.272 368.236  c
313.115 368.236 312.897 368.302 312.618 368.433  c
h
323.827 367.214 m
323.827 367.449 l
323.268 367.504 322.812 367.615 322.459 367.783  c
322.105 367.950 321.756 368.205 321.411 368.547  c
321.067 368.890 320.781 369.272 320.554 369.693  c
320.328 370.114 320.139 370.615 319.986 371.194  c
320.596 370.775 321.207 370.566 321.821 370.566  c
322.409 370.566 322.919 370.803 323.351 371.277  c
323.782 371.751 323.998 372.360 323.998 373.105  c
323.998 373.824 323.780 374.480 323.344 375.073  c
322.820 375.792 322.126 376.152 321.262 376.152  c
320.674 376.152 320.175 375.957 319.764 375.568  c
318.960 374.810 318.558 373.829 318.558 372.623  c
318.558 371.852 318.713 371.120 319.022 370.426  c
319.330 369.732 319.772 369.117 320.345 368.579  c
320.918 368.042 321.467 367.680 321.992 367.494  c
322.517 367.307 323.006 367.214 323.459 367.214  c
h
319.878 371.658 m
319.802 372.229 319.764 372.690 319.764 373.042  c
319.764 373.448 319.839 373.889 319.990 374.365  c
320.140 374.841 320.363 375.219 320.659 375.498  c
320.875 375.697 321.137 375.796 321.446 375.796  c
321.814 375.796 322.144 375.623 322.433 375.276  c
322.723 374.929 322.868 374.434 322.868 373.791  c
322.868 373.067 322.724 372.441 322.437 371.912  c
322.149 371.383 321.740 371.118 321.211 371.118  c
321.051 371.118 320.878 371.152 320.694 371.220  c
320.510 371.287 320.238 371.433 319.878 371.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
348.000 355.000 m
348.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
346.523 368.236 m
348.618 367.214 l
348.827 367.214 l
348.827 374.482 l
348.827 374.965 348.847 375.265 348.887 375.384  c
348.928 375.502 349.011 375.593 349.138 375.657  c
349.265 375.720 349.523 375.756 349.913 375.765  c
349.913 376.000 l
346.675 376.000 l
346.675 375.765 l
347.082 375.756 347.344 375.721 347.462 375.660  c
347.581 375.599 347.663 375.516 347.710 375.412  c
347.757 375.309 347.780 374.999 347.780 374.482  c
347.780 369.836 l
347.780 369.210 347.759 368.808 347.716 368.630  c
347.687 368.495 347.633 368.395 347.554 368.332  c
347.476 368.268 347.382 368.236 347.272 368.236  c
347.115 368.236 346.897 368.302 346.618 368.433  c
h
354.494 371.664 m
353.813 371.106 353.374 370.657 353.177 370.318  c
352.980 369.980 352.882 369.629 352.882 369.265  c
352.882 368.706 353.098 368.225 353.529 367.821  c
353.961 367.416 354.534 367.214 355.250 367.214  c
355.944 367.214 356.502 367.403 356.925 367.779  c
357.349 368.156 357.560 368.585 357.560 369.068  c
357.560 369.390 357.446 369.717 357.217 370.052  c
356.989 370.386 356.513 370.780 355.789 371.232  c
356.534 371.808 357.027 372.261 357.268 372.591  c
357.590 373.022 357.751 373.477 357.751 373.956  c
357.751 374.561 357.520 375.078 357.059 375.508  c
356.597 375.937 355.992 376.152 355.243 376.152  c
354.426 376.152 353.790 375.896 353.333 375.384  c
352.969 374.973 352.787 374.525 352.787 374.038  c
352.787 373.657 352.915 373.280 353.171 372.905  c
353.427 372.531 353.868 372.117 354.494 371.664  c
h
355.491 370.985 m
355.999 370.528 356.320 370.167 356.456 369.903  c
356.591 369.638 356.659 369.339 356.659 369.004  c
356.659 368.560 356.534 368.212 356.284 367.960  c
356.035 367.708 355.694 367.583 355.262 367.583  c
354.831 367.583 354.479 367.707 354.209 367.957  c
353.938 368.207 353.802 368.499 353.802 368.833  c
353.802 369.053 353.858 369.273 353.970 369.493  c
354.083 369.713 354.242 369.923 354.450 370.122  c
h
354.793 371.905 m
354.441 372.202 354.181 372.524 354.012 372.873  c
353.842 373.222 353.758 373.600 353.758 374.006  c
353.758 374.552 353.907 374.989 354.205 375.317  c
354.504 375.645 354.884 375.809 355.345 375.809  c
355.802 375.809 356.168 375.680 356.443 375.422  c
356.718 375.164 356.856 374.851 356.856 374.482  c
356.856 374.178 356.775 373.905 356.614 373.664  c
356.314 373.215 355.707 372.629 354.793 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.000 355.000 m
382.000 360.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
384.960 374.343 m
384.357 376.000 l
379.279 376.000 l
379.279 375.765 l
380.773 374.402 381.824 373.289 382.434 372.426  c
383.043 371.563 383.348 370.773 383.348 370.058  c
383.348 369.512 383.181 369.064 382.846 368.712  c
382.512 368.361 382.112 368.186 381.647 368.186  c
381.223 368.186 380.844 368.309 380.507 368.557  c
380.171 368.804 379.922 369.167 379.761 369.646  c
379.526 369.646 l
379.632 368.863 379.904 368.262 380.342 367.843  c
380.780 367.424 381.327 367.214 381.983 367.214  c
382.681 367.214 383.264 367.439 383.732 367.887  c
384.199 368.336 384.433 368.865 384.433 369.474  c
384.433 369.910 384.332 370.346 384.128 370.782  c
383.815 371.467 383.307 372.193 382.605 372.959  c
381.551 374.110 380.893 374.804 380.631 375.041  c
382.878 375.041 l
383.335 375.041 383.656 375.024 383.840 374.990  c
384.024 374.956 384.190 374.888 384.338 374.784  c
384.486 374.680 384.615 374.533 384.725 374.343  c
h
386.469 371.747 m
386.469 370.765 386.617 369.920 386.914 369.211  c
387.210 368.502 387.603 367.974 388.094 367.627  c
388.475 367.352 388.869 367.214 389.275 367.214  c
389.935 367.214 390.528 367.551 391.052 368.224  c
391.708 369.057 392.036 370.187 392.036 371.613  c
392.036 372.612 391.892 373.460 391.605 374.159  c
391.317 374.857 390.950 375.364 390.503 375.679  c
390.057 375.994 389.626 376.152 389.211 376.152  c
388.391 376.152 387.707 375.667 387.161 374.698  c
386.700 373.882 386.469 372.898 386.469 371.747  c
h
387.713 371.905 m
387.713 373.090 387.859 374.057 388.151 374.806  c
388.393 375.437 388.752 375.752 389.231 375.752  c
389.459 375.752 389.696 375.649 389.941 375.444  c
390.187 375.239 390.373 374.895 390.500 374.413  c
390.695 373.685 390.792 372.659 390.792 371.334  c
390.792 370.352 390.690 369.533 390.487 368.877  c
390.335 368.391 390.138 368.046 389.897 367.843  c
389.724 367.703 389.514 367.633 389.269 367.633  c
388.981 367.633 388.725 367.762 388.501 368.021  c
388.196 368.372 387.988 368.924 387.878 369.677  c
387.768 370.431 387.713 371.173 387.713 371.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 355.000 m
57.0000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
91.0000 355.000 m
91.0000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
125.000 355.000 m
125.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
160.000 355.000 m
160.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.000 355.000 m
194.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
228.000 355.000 m
228.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
262.000 355.000 m
262.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
296.000 355.000 m
296.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
331.000 355.000 m
331.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
365.000 355.000 m
365.000 358.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
54.0000 355.000 m
54.0000 4.00097 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 171 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
54.0000 326.000 m
49.0000 326.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
23.5234 328.236 m
25.6181 327.214 l
25.8276 327.214 l
25.8276 334.482 l
25.8276 334.965 25.8477 335.265 25.8879 335.384  c
25.9281 335.502 26.0117 335.593 26.1386 335.657  c
26.2656 335.720 26.5237 335.756 26.9130 335.765  c
26.9130 336.000 l
23.6757 336.000 l
23.6757 335.765 l
24.0820 335.756 24.3444 335.721 24.4628 335.660  c
24.5813 335.599 24.6639 335.516 24.7104 335.412  c
24.7570 335.309 24.7802 334.999 24.7802 334.482  c
24.7802 329.836 l
24.7802 329.210 24.7591 328.808 24.7168 328.630  c
24.6871 328.495 24.6332 328.395 24.5549 328.332  c
24.4766 328.268 24.3824 328.236 24.2724 328.236  c
24.1158 328.236 23.8979 328.302 23.6186 328.433  c
h
29.4697 331.747 m
29.4697 330.765 29.6178 329.920 29.9140 329.211  c
30.2102 328.502 30.6038 327.974 31.0947 327.627  c
31.4755 327.352 31.8691 327.214 32.2753 327.214  c
32.9355 327.214 33.5279 327.551 34.0527 328.224  c
34.7086 329.057 35.0366 330.187 35.0366 331.613  c
35.0366 332.612 34.8927 333.460 34.6049 334.159  c
34.3172 334.857 33.9501 335.364 33.5036 335.679  c
33.0572 335.994 32.6266 336.152 32.2119 336.152  c
31.3909 336.152 30.7075 335.667 30.1616 334.698  c
29.7003 333.882 29.4697 332.898 29.4697 331.747  c
h
30.7138 331.905 m
30.7138 333.090 30.8598 334.057 31.1518 334.806  c
31.3930 335.437 31.7527 335.752 32.2309 335.752  c
32.4594 335.752 32.6964 335.649 32.9418 335.444  c
33.1873 335.239 33.3735 334.895 33.5004 334.413  c
33.6951 333.685 33.7924 332.659 33.7924 331.334  c
33.7924 330.352 33.6909 329.533 33.4877 328.877  c
33.3354 328.391 33.1386 328.046 32.8974 327.843  c
32.7239 327.703 32.5144 327.633 32.2690 327.633  c
31.9812 327.633 31.7252 327.762 31.5009 328.021  c
31.1962 328.372 30.9889 328.924 30.8789 329.677  c
30.7688 330.431 30.7138 331.173 30.7138 331.905  c
h
f
newpath
38.4052 328.387 m
40.9296 328.387 l
40.9296 329.125 l
38.4052 329.125 l
h
f
newpath
44.1718 325.028 m
45.7832 324.242 l
45.9443 324.242 l
45.9443 329.833 l
45.9443 330.204 45.9598 330.435 45.9907 330.526  c
46.0216 330.617 46.0859 330.687 46.1835 330.736  c
46.2812 330.785 46.4798 330.812 46.7793 330.819  c
46.7793 331.000 l
44.2890 331.000 l
44.2890 330.819 l
44.6015 330.812 44.8033 330.786 44.8945 330.738  c
44.9856 330.691 45.0491 330.628 45.0849 330.548  c
45.1207 330.468 45.1386 330.230 45.1386 329.833  c
45.1386 326.258 l
45.1386 325.777 45.1224 325.467 45.0898 325.331  c
45.0670 325.226 45.0255 325.150 44.9653 325.101  c
44.9051 325.052 44.8326 325.028 44.7480 325.028  c
44.6276 325.028 44.4599 325.078 44.2451 325.179  c
h
52.6533 328.558 m
52.6533 329.252 l
51.7646 329.252 l
51.7646 331.000 l
50.9589 331.000 l
50.9589 329.252 l
48.1562 329.252 l
48.1562 328.627 l
51.2275 324.242 l
51.7646 324.242 l
51.7646 328.558 l
h
50.9589 328.558 m
50.9589 325.272 l
48.6347 328.558 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 278.000 m
49.0000 278.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
23.5234 280.236 m
25.6181 279.214 l
25.8276 279.214 l
25.8276 286.482 l
25.8276 286.965 25.8477 287.265 25.8879 287.384  c
25.9281 287.502 26.0117 287.593 26.1386 287.657  c
26.2656 287.720 26.5237 287.756 26.9130 287.765  c
26.9130 288.000 l
23.6757 288.000 l
23.6757 287.765 l
24.0820 287.756 24.3444 287.721 24.4628 287.660  c
24.5813 287.599 24.6639 287.516 24.7104 287.412  c
24.7570 287.309 24.7802 286.999 24.7802 286.482  c
24.7802 281.836 l
24.7802 281.210 24.7591 280.808 24.7168 280.630  c
24.6871 280.495 24.6332 280.395 24.5549 280.332  c
24.4766 280.268 24.3824 280.236 24.2724 280.236  c
24.1158 280.236 23.8979 280.302 23.6186 280.433  c
h
29.4697 283.747 m
29.4697 282.765 29.6178 281.920 29.9140 281.211  c
30.2102 280.502 30.6038 279.974 31.0947 279.627  c
31.4755 279.352 31.8691 279.214 32.2753 279.214  c
32.9355 279.214 33.5279 279.551 34.0527 280.224  c
34.7086 281.057 35.0366 282.187 35.0366 283.613  c
35.0366 284.612 34.8927 285.460 34.6049 286.159  c
34.3172 286.857 33.9501 287.364 33.5036 287.679  c
33.0572 287.994 32.6266 288.152 32.2119 288.152  c
31.3909 288.152 30.7075 287.667 30.1616 286.698  c
29.7003 285.882 29.4697 284.898 29.4697 283.747  c
h
30.7138 283.905 m
30.7138 285.090 30.8598 286.057 31.1518 286.806  c
31.3930 287.437 31.7527 287.752 32.2309 287.752  c
32.4594 287.752 32.6964 287.649 32.9418 287.444  c
33.1873 287.239 33.3735 286.895 33.5004 286.413  c
33.6951 285.685 33.7924 284.659 33.7924 283.334  c
33.7924 282.352 33.6909 281.533 33.4877 280.877  c
33.3354 280.391 33.1386 280.046 32.8974 279.843  c
32.7239 279.703 32.5144 279.633 32.2690 279.633  c
31.9812 279.633 31.7252 279.762 31.5009 280.021  c
31.1962 280.372 30.9889 280.924 30.8789 281.677  c
30.7688 282.431 30.7138 283.173 30.7138 283.905  c
h
f
newpath
38.4052 280.387 m
40.9296 280.387 l
40.9296 281.125 l
38.4052 281.125 l
h
f
newpath
44.1718 277.028 m
45.7832 276.242 l
45.9443 276.242 l
45.9443 281.833 l
45.9443 282.204 45.9598 282.435 45.9907 282.526  c
46.0216 282.617 46.0859 282.687 46.1835 282.736  c
46.2812 282.785 46.4798 282.812 46.7793 282.819  c
46.7793 283.000 l
44.2890 283.000 l
44.2890 282.819 l
44.6015 282.812 44.8033 282.786 44.8945 282.738  c
44.9856 282.691 45.0491 282.628 45.0849 282.548  c
45.1207 282.468 45.1386 282.230 45.1386 281.833  c
45.1386 278.258 l
45.1386 277.777 45.1224 277.467 45.0898 277.331  c
45.0670 277.226 45.0255 277.150 44.9653 277.101  c
44.9051 277.052 44.8326 277.028 44.7480 277.028  c
44.6276 277.028 44.4599 277.078 44.2451 277.179  c
h
52.5849 281.725 m
52.1210 283.000 l
48.2148 283.000 l
48.2148 282.819 l
49.3639 281.771 50.1728 280.915 50.6416 280.251  c
51.1103 279.586 51.3447 278.979 51.3447 278.429  c
51.3447 278.009 51.2161 277.664 50.9589 277.394  c
50.7018 277.124 50.3942 276.989 50.0361 276.989  c
49.7106 276.989 49.4184 277.084 49.1596 277.274  c
48.9008 277.465 48.7096 277.744 48.5859 278.112  c
48.4052 278.112 l
48.4866 277.510 48.6958 277.047 49.0327 276.725  c
49.3696 276.403 49.7903 276.242 50.2949 276.242  c
50.8320 276.242 51.2804 276.414 51.6401 276.759  c
51.9998 277.104 52.1796 277.511 52.1796 277.980  c
52.1796 278.315 52.1015 278.651 51.9453 278.986  c
51.7044 279.513 51.3138 280.071 50.7734 280.661  c
49.9628 281.546 49.4567 282.080 49.2548 282.262  c
50.9834 282.262 l
51.3349 282.262 51.5815 282.249 51.7231 282.223  c
51.8647 282.197 51.9925 282.144 52.1064 282.064  c
52.2203 281.985 52.3196 281.872 52.4043 281.725  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 231.000 m
49.0000 231.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
23.5234 232.236 m
25.6181 231.214 l
25.8276 231.214 l
25.8276 238.482 l
25.8276 238.965 25.8477 239.265 25.8879 239.384  c
25.9281 239.502 26.0117 239.593 26.1386 239.657  c
26.2656 239.720 26.5237 239.756 26.9130 239.765  c
26.9130 240.000 l
23.6757 240.000 l
23.6757 239.765 l
24.0820 239.756 24.3444 239.721 24.4628 239.660  c
24.5813 239.599 24.6639 239.516 24.7104 239.412  c
24.7570 239.309 24.7802 238.999 24.7802 238.482  c
24.7802 233.836 l
24.7802 233.210 24.7591 232.808 24.7168 232.630  c
24.6871 232.495 24.6332 232.395 24.5549 232.332  c
24.4766 232.268 24.3824 232.236 24.2724 232.236  c
24.1158 232.236 23.8979 232.302 23.6186 232.433  c
h
29.4697 235.747 m
29.4697 234.765 29.6178 233.920 29.9140 233.211  c
30.2102 232.502 30.6038 231.974 31.0947 231.627  c
31.4755 231.352 31.8691 231.214 32.2753 231.214  c
32.9355 231.214 33.5279 231.551 34.0527 232.224  c
34.7086 233.057 35.0366 234.187 35.0366 235.613  c
35.0366 236.612 34.8927 237.460 34.6049 238.159  c
34.3172 238.857 33.9501 239.364 33.5036 239.679  c
33.0572 239.994 32.6266 240.152 32.2119 240.152  c
31.3909 240.152 30.7075 239.667 30.1616 238.698  c
29.7003 237.882 29.4697 236.898 29.4697 235.747  c
h
30.7138 235.905 m
30.7138 237.090 30.8598 238.057 31.1518 238.806  c
31.3930 239.437 31.7527 239.752 32.2309 239.752  c
32.4594 239.752 32.6964 239.649 32.9418 239.444  c
33.1873 239.239 33.3735 238.895 33.5004 238.413  c
33.6951 237.685 33.7924 236.659 33.7924 235.334  c
33.7924 234.352 33.6909 233.533 33.4877 232.877  c
33.3354 232.391 33.1386 232.046 32.8974 231.843  c
32.7239 231.703 32.5144 231.633 32.2690 231.633  c
31.9812 231.633 31.7252 231.762 31.5009 232.021  c
31.1962 232.372 30.9889 232.924 30.8789 233.677  c
30.7688 234.431 30.7138 235.173 30.7138 235.905  c
h
f
newpath
38.4052 232.387 m
40.9296 232.387 l
40.9296 233.125 l
38.4052 233.125 l
h
f
newpath
44.1718 229.028 m
45.7832 228.242 l
45.9443 228.242 l
45.9443 233.833 l
45.9443 234.204 45.9598 234.435 45.9907 234.526  c
46.0216 234.617 46.0859 234.687 46.1835 234.736  c
46.2812 234.785 46.4798 234.812 46.7793 234.819  c
46.7793 235.000 l
44.2890 235.000 l
44.2890 234.819 l
44.6015 234.812 44.8033 234.786 44.8945 234.738  c
44.9856 234.691 45.0491 234.628 45.0849 234.548  c
45.1207 234.468 45.1386 234.230 45.1386 233.833  c
45.1386 230.258 l
45.1386 229.777 45.1224 229.467 45.0898 229.331  c
45.0670 229.226 45.0255 229.150 44.9653 229.101  c
44.9051 229.052 44.8326 229.028 44.7480 229.028  c
44.6276 229.028 44.4599 229.078 44.2451 229.179  c
h
48.3613 231.728 m
48.3613 230.973 48.4752 230.323 48.7031 229.777  c
48.9309 229.232 49.2337 228.826 49.6113 228.559  c
49.9043 228.348 50.2070 228.242 50.5195 228.242  c
51.0273 228.242 51.4830 228.501 51.8867 229.018  c
52.3912 229.659 52.6435 230.529 52.6435 231.626  c
52.6435 232.394 52.5328 233.046 52.3115 233.584  c
52.0901 234.121 51.8077 234.510 51.4643 234.753  c
51.1209 234.995 50.7897 235.117 50.4707 235.117  c
49.8391 235.117 49.3134 234.744 48.8935 233.999  c
48.5387 233.370 48.3613 232.613 48.3613 231.728  c
h
49.3183 231.850 m
49.3183 232.762 49.4306 233.505 49.6552 234.082  c
49.8408 234.567 50.1175 234.809 50.4853 234.809  c
50.6611 234.809 50.8434 234.730 51.0322 234.572  c
51.2210 234.414 51.3642 234.150 51.4619 233.779  c
51.6116 233.219 51.6865 232.430 51.6865 231.411  c
51.6865 230.655 51.6084 230.026 51.4521 229.521  c
51.3349 229.147 51.1835 228.881 50.9980 228.725  c
50.8645 228.618 50.7034 228.564 50.5146 228.564  c
50.2932 228.564 50.0963 228.663 49.9238 228.862  c
49.6894 229.132 49.5299 229.557 49.4453 230.136  c
49.3606 230.716 49.3183 231.287 49.3183 231.850  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 183.000 m
49.0000 183.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
28.5234 184.236 m
30.6181 183.214 l
30.8276 183.214 l
30.8276 190.482 l
30.8276 190.965 30.8477 191.265 30.8879 191.384  c
30.9281 191.502 31.0117 191.593 31.1386 191.657  c
31.2656 191.720 31.5237 191.756 31.9130 191.765  c
31.9130 192.000 l
28.6757 192.000 l
28.6757 191.765 l
29.0820 191.756 29.3444 191.721 29.4628 191.660  c
29.5813 191.599 29.6639 191.516 29.7104 191.412  c
29.7570 191.309 29.7802 190.999 29.7802 190.482  c
29.7802 185.836 l
29.7802 185.210 29.7591 184.808 29.7168 184.630  c
29.6871 184.495 29.6332 184.395 29.5549 184.332  c
29.4766 184.268 29.3824 184.236 29.2724 184.236  c
29.1158 184.236 28.8979 184.302 28.6186 184.433  c
h
34.4697 187.747 m
34.4697 186.765 34.6178 185.920 34.9140 185.211  c
35.2102 184.502 35.6038 183.974 36.0947 183.627  c
36.4755 183.352 36.8691 183.214 37.2753 183.214  c
37.9355 183.214 38.5279 183.551 39.0527 184.224  c
39.7086 185.057 40.0366 186.187 40.0366 187.613  c
40.0366 188.612 39.8927 189.460 39.6049 190.159  c
39.3172 190.857 38.9501 191.364 38.5036 191.679  c
38.0572 191.994 37.6266 192.152 37.2119 192.152  c
36.3909 192.152 35.7075 191.667 35.1616 190.698  c
34.7003 189.882 34.4697 188.898 34.4697 187.747  c
h
35.7138 187.905 m
35.7138 189.090 35.8598 190.057 36.1518 190.806  c
36.3930 191.437 36.7527 191.752 37.2309 191.752  c
37.4594 191.752 37.6964 191.649 37.9418 191.444  c
38.1873 191.239 38.3735 190.895 38.5004 190.413  c
38.6951 189.685 38.7924 188.659 38.7924 187.334  c
38.7924 186.352 38.6909 185.533 38.4877 184.877  c
38.3354 184.391 38.1386 184.046 37.8974 183.843  c
37.7239 183.703 37.5144 183.633 37.2690 183.633  c
36.9812 183.633 36.7252 183.762 36.5009 184.021  c
36.1962 184.372 35.9889 184.924 35.8789 185.677  c
35.7688 186.431 35.7138 187.173 35.7138 187.905  c
h
f
newpath
43.4052 184.387 m
45.9296 184.387 l
45.9296 185.125 l
43.4052 185.125 l
h
f
newpath
49.9189 183.665 m
49.3948 183.235 49.0571 182.890 48.9057 182.629  c
48.7543 182.369 48.6787 182.099 48.6787 181.819  c
48.6787 181.389 48.8447 181.019 49.1767 180.708  c
49.5087 180.397 49.9498 180.242 50.5000 180.242  c
51.0338 180.242 51.4635 180.387 51.7890 180.676  c
52.1145 180.966 52.2773 181.296 52.2773 181.668  c
52.2773 181.915 52.1894 182.167 52.0136 182.424  c
51.8378 182.682 51.4716 182.984 50.9150 183.333  c
51.4879 183.775 51.8671 184.124 52.0527 184.377  c
52.3001 184.710 52.4238 185.059 52.4238 185.427  c
52.4238 185.893 52.2464 186.291 51.8916 186.621  c
51.5367 186.952 51.0712 187.117 50.4951 187.117  c
49.8668 187.117 49.3769 186.920 49.0253 186.526  c
48.7454 186.210 48.6054 185.865 48.6054 185.491  c
48.6054 185.198 48.7039 184.907 48.9008 184.619  c
49.0978 184.331 49.4371 184.013 49.9189 183.665  c
h
50.6855 183.142 m
51.0761 182.791 51.3235 182.513 51.4277 182.310  c
51.5319 182.106 51.5839 181.876 51.5839 181.619  c
51.5839 181.277 51.4879 181.009 51.2959 180.815  c
51.1038 180.622 50.8418 180.525 50.5097 180.525  c
50.1777 180.525 49.9075 180.621 49.6992 180.813  c
49.4908 181.005 49.3867 181.230 49.3867 181.487  c
49.3867 181.656 49.4298 181.825 49.5161 181.995  c
49.6023 182.164 49.7252 182.325 49.8847 182.478  c
h
50.1484 183.850 m
49.8782 184.078 49.6780 184.326 49.5478 184.595  c
49.4176 184.863 49.3525 185.154 49.3525 185.466  c
49.3525 185.886 49.4672 186.222 49.6967 186.475  c
49.9262 186.727 50.2184 186.853 50.5732 186.853  c
50.9248 186.853 51.2063 186.754 51.4179 186.555  c
51.6295 186.357 51.7353 186.116 51.7353 185.833  c
51.7353 185.598 51.6735 185.388 51.5498 185.203  c
51.3186 184.858 50.8515 184.407 50.1484 183.850  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 135.000 m
49.0000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
28.5234 137.236 m
30.6181 136.214 l
30.8276 136.214 l
30.8276 143.482 l
30.8276 143.965 30.8477 144.265 30.8879 144.384  c
30.9281 144.502 31.0117 144.593 31.1386 144.657  c
31.2656 144.720 31.5237 144.756 31.9130 144.765  c
31.9130 145.000 l
28.6757 145.000 l
28.6757 144.765 l
29.0820 144.756 29.3444 144.721 29.4628 144.660  c
29.5813 144.599 29.6639 144.516 29.7104 144.412  c
29.7570 144.309 29.7802 143.999 29.7802 143.482  c
29.7802 138.836 l
29.7802 138.210 29.7591 137.808 29.7168 137.630  c
29.6871 137.495 29.6332 137.395 29.5549 137.332  c
29.4766 137.268 29.3824 137.236 29.2724 137.236  c
29.1158 137.236 28.8979 137.302 28.6186 137.433  c
h
34.4697 140.747 m
34.4697 139.765 34.6178 138.920 34.9140 138.211  c
35.2102 137.502 35.6038 136.974 36.0947 136.627  c
36.4755 136.352 36.8691 136.214 37.2753 136.214  c
37.9355 136.214 38.5279 136.551 39.0527 137.224  c
39.7086 138.057 40.0366 139.187 40.0366 140.613  c
40.0366 141.612 39.8927 142.460 39.6049 143.159  c
39.3172 143.857 38.9501 144.364 38.5036 144.679  c
38.0572 144.994 37.6266 145.152 37.2119 145.152  c
36.3909 145.152 35.7075 144.667 35.1616 143.698  c
34.7003 142.882 34.4697 141.898 34.4697 140.747  c
h
35.7138 140.905 m
35.7138 142.090 35.8598 143.057 36.1518 143.806  c
36.3930 144.437 36.7527 144.752 37.2309 144.752  c
37.4594 144.752 37.6964 144.649 37.9418 144.444  c
38.1873 144.239 38.3735 143.895 38.5004 143.413  c
38.6951 142.685 38.7924 141.659 38.7924 140.334  c
38.7924 139.352 38.6909 138.533 38.4877 137.877  c
38.3354 137.391 38.1386 137.046 37.8974 136.843  c
37.7239 136.703 37.5144 136.633 37.2690 136.633  c
36.9812 136.633 36.7252 136.762 36.5009 137.021  c
36.1962 137.372 35.9889 137.924 35.8789 138.677  c
35.7688 139.431 35.7138 140.173 35.7138 140.905  c
h
f
newpath
43.4052 137.387 m
45.9296 137.387 l
45.9296 138.125 l
43.4052 138.125 l
h
f
newpath
52.4824 133.242 m
52.4824 133.422 l
52.0527 133.465 51.7019 133.550 51.4301 133.679  c
51.1583 133.807 50.8898 134.003 50.6245 134.267  c
50.3592 134.531 50.1394 134.825 49.9653 135.148  c
49.7911 135.472 49.6455 135.857 49.5283 136.303  c
49.9970 135.981 50.4674 135.820 50.9394 135.820  c
51.3919 135.820 51.7841 136.002 52.1162 136.367  c
52.4482 136.731 52.6142 137.200 52.6142 137.773  c
52.6142 138.326 52.4466 138.831 52.1113 139.287  c
51.7076 139.840 51.1738 140.117 50.5097 140.117  c
50.0572 140.117 49.6731 139.967 49.3574 139.668  c
48.7389 139.085 48.4296 138.330 48.4296 137.402  c
48.4296 136.809 48.5485 136.246 48.7861 135.712  c
49.0237 135.179 49.3631 134.705 49.8042 134.292  c
50.2452 133.878 50.6676 133.600 51.0712 133.457  c
51.4749 133.313 51.8509 133.242 52.1992 133.242  c
h
49.4453 136.660 m
49.3867 137.099 49.3574 137.454 49.3574 137.724  c
49.3574 138.037 49.4152 138.376 49.5307 138.742  c
49.6463 139.108 49.8180 139.399 50.0459 139.614  c
50.2119 139.767 50.4137 139.843 50.6513 139.843  c
50.9345 139.843 51.1876 139.710 51.4106 139.443  c
51.6336 139.176 51.7451 138.795 51.7451 138.300  c
51.7451 137.744 51.6344 137.262 51.4130 136.855  c
51.1917 136.448 50.8776 136.245 50.4707 136.245  c
50.3470 136.245 50.2143 136.271 50.0727 136.323  c
49.9311 136.375 49.7220 136.487 49.4453 136.660  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 87.0000 m
49.0000 87.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
28.5234 89.2368 m
30.6181 88.2148 l
30.8276 88.2148 l
30.8276 95.4829 l
30.8276 95.9653 30.8477 96.2657 30.8879 96.3842  c
30.9281 96.5027 31.0117 96.5937 31.1386 96.6572  c
31.2656 96.7207 31.5237 96.7566 31.9130 96.7651  c
31.9130 97.0000 l
28.6757 97.0000 l
28.6757 96.7651 l
29.0820 96.7566 29.3444 96.7217 29.4628 96.6604  c
29.5813 96.5990 29.6639 96.5165 29.7104 96.4128  c
29.7570 96.3091 29.7802 95.9991 29.7802 95.4829  c
29.7802 90.8364 l
29.7802 90.2101 29.7591 89.8081 29.7168 89.6303  c
29.6871 89.4949 29.6332 89.3955 29.5549 89.3320  c
29.4766 89.2685 29.3824 89.2368 29.2724 89.2368  c
29.1158 89.2368 28.8979 89.3024 28.6186 89.4335  c
h
34.4697 92.7470 m
34.4697 91.7653 34.6178 90.9200 34.9140 90.2111  c
35.2102 89.5023 35.6038 88.9744 36.0947 88.6274  c
36.4755 88.3523 36.8691 88.2148 37.2753 88.2148  c
37.9355 88.2148 38.5279 88.5512 39.0527 89.2241  c
39.7086 90.0577 40.0366 91.1876 40.0366 92.6137  c
40.0366 93.6124 39.8927 94.4609 39.6049 95.1591  c
39.3172 95.8574 38.9501 96.3641 38.5036 96.6794  c
38.0572 96.9947 37.6266 97.1523 37.2119 97.1523  c
36.3909 97.1523 35.7075 96.6678 35.1616 95.6987  c
34.7003 94.8820 34.4697 93.8981 34.4697 92.7470  c
h
35.7138 92.9057 m
35.7138 94.0906 35.8598 95.0576 36.1518 95.8066  c
36.3930 96.4371 36.7527 96.7524 37.2309 96.7524  c
37.4594 96.7524 37.6964 96.6498 37.9418 96.4445  c
38.1873 96.2393 38.3735 95.8955 38.5004 95.4130  c
38.6951 94.6852 38.7924 93.6590 38.7924 92.3344  c
38.7924 91.3527 38.6909 90.5338 38.4877 89.8779  c
38.3354 89.3912 38.1386 89.0463 37.8974 88.8432  c
37.7239 88.7036 37.5144 88.6337 37.2690 88.6337  c
36.9812 88.6337 36.7252 88.7628 36.5009 89.0210  c
36.1962 89.3722 35.9889 89.9244 35.8789 90.6777  c
35.7688 91.4309 35.7138 92.1736 35.7138 92.9057  c
h
f
newpath
43.4052 89.3877 m
45.9296 89.3877 l
45.9296 90.1250 l
43.4052 90.1250 l
h
f
newpath
52.6533 89.5585 m
52.6533 90.2519 l
51.7646 90.2519 l
51.7646 92.0000 l
50.9589 92.0000 l
50.9589 90.2519 l
48.1562 90.2519 l
48.1562 89.6269 l
51.2275 85.2421 l
51.7646 85.2421 l
51.7646 89.5585 l
h
50.9589 89.5585 m
50.9589 86.2724 l
48.6347 89.5585 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 39.0000 m
49.0000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
f
newpath
28.5234 41.2368 m
30.6181 40.2148 l
30.8276 40.2148 l
30.8276 47.4829 l
30.8276 47.9653 30.8477 48.2657 30.8879 48.3842  c
30.9281 48.5027 31.0117 48.5937 31.1386 48.6572  c
31.2656 48.7207 31.5237 48.7566 31.9130 48.7651  c
31.9130 49.0000 l
28.6757 49.0000 l
28.6757 48.7651 l
29.0820 48.7566 29.3444 48.7217 29.4628 48.6604  c
29.5813 48.5990 29.6639 48.5165 29.7104 48.4128  c
29.7570 48.3091 29.7802 47.9991 29.7802 47.4829  c
29.7802 42.8364 l
29.7802 42.2101 29.7591 41.8081 29.7168 41.6303  c
29.6871 41.4949 29.6332 41.3955 29.5549 41.3320  c
29.4766 41.2685 29.3824 41.2368 29.2724 41.2368  c
29.1158 41.2368 28.8979 41.3024 28.6186 41.4335  c
h
34.4697 44.7470 m
34.4697 43.7653 34.6178 42.9200 34.9140 42.2111  c
35.2102 41.5023 35.6038 40.9744 36.0947 40.6274  c
36.4755 40.3523 36.8691 40.2148 37.2753 40.2148  c
37.9355 40.2148 38.5279 40.5512 39.0527 41.2241  c
39.7086 42.0577 40.0366 43.1876 40.0366 44.6137  c
40.0366 45.6124 39.8927 46.4609 39.6049 47.1591  c
39.3172 47.8574 38.9501 48.3641 38.5036 48.6794  c
38.0572 48.9947 37.6266 49.1523 37.2119 49.1523  c
36.3909 49.1523 35.7075 48.6678 35.1616 47.6987  c
34.7003 46.8820 34.4697 45.8981 34.4697 44.7470  c
h
35.7138 44.9057 m
35.7138 46.0906 35.8598 47.0576 36.1518 47.8066  c
36.3930 48.4371 36.7527 48.7524 37.2309 48.7524  c
37.4594 48.7524 37.6964 48.6498 37.9418 48.4445  c
38.1873 48.2393 38.3735 47.8955 38.5004 47.4130  c
38.6951 46.6852 38.7924 45.6590 38.7924 44.3344  c
38.7924 43.3527 38.6909 42.5338 38.4877 41.8779  c
38.3354 41.3912 38.1386 41.0463 37.8974 40.8432  c
37.7239 40.7036 37.5144 40.6337 37.2690 40.6337  c
36.9812 40.6337 36.7252 40.7628 36.5009 41.0210  c
36.1962 41.3722 35.9889 41.9244 35.8789 42.6777  c
35.7688 43.4309 35.7138 44.1736 35.7138 44.9057  c
h
f
newpath
43.4052 41.3877 m
45.9296 41.3877 l
45.9296 42.1250 l
43.4052 42.1250 l
h
f
newpath
52.5849 42.7255 m
52.1210 44.0000 l
48.2148 44.0000 l
48.2148 43.8193 l
49.3639 42.7711 50.1728 41.9150 50.6416 41.2509  c
51.1103 40.5869 51.3447 39.9798 51.3447 39.4296  c
51.3447 39.0097 51.2161 38.6647 50.9589 38.3945  c
50.7018 38.1243 50.3942 37.9892 50.0361 37.9892  c
49.7106 37.9892 49.4184 38.0844 49.1596 38.2749  c
48.9008 38.4653 48.7096 38.7444 48.5859 39.1123  c
48.4052 39.1123 l
48.4866 38.5100 48.6958 38.0478 49.0327 37.7255  c
49.3696 37.4033 49.7903 37.2421 50.2949 37.2421  c
50.8320 37.2421 51.2804 37.4147 51.6401 37.7597  c
51.9998 38.1048 52.1796 38.5117 52.1796 38.9804  c
52.1796 39.3157 52.1015 39.6510 51.9453 39.9863  c
51.7044 40.5136 51.3138 41.0719 50.7734 41.6611  c
49.9628 42.5465 49.4567 43.0804 49.2548 43.2627  c
50.9834 43.2627 l
51.3349 43.2627 51.5815 43.2496 51.7231 43.2236  c
51.8647 43.1975 51.9925 43.1446 52.1064 43.0649  c
52.2203 42.9851 52.3196 42.8720 52.4043 42.7255  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 302.000 m
51.0000 302.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 302.000 m
51.0000 302.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 254.000 m
51.0000 254.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 207.000 m
51.0000 207.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 159.000 m
51.0000 159.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 111.000 m
51.0000 111.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 63.0000 m
51.0000 63.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 16.0000 m
51.0000 16.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 16.0000 m
51.0000 16.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
