%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 195 575 596
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ16“ú 17Žž06•ª21•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
264 190 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
264.000 0 l
264.000 190.000 l
0 190.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 254 180 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
59.0118 -1.00000 194.772 147.000 rc
1.00000 0 0 RG
newpath
60.0118 145.000 m
60.0235 145.000 l
60.0469 145.000 l
60.0938 145.000 l
60.1874 144.999 l
60.3747 144.999 l
60.7493 144.997 l
61.4984 144.991 l
62.9967 144.964 l
65.9933 144.859 l
71.9866 144.437 l
83.9731 142.750 l
107.946 136.000 l
155.892 109.000 l
251.784 1.00000 l
S
cliprestore
newpath
0 0 m
0 180.000 l
254.000 180.000 l
254.000 0 l
h
W
Q
q
1.00000 0 0 RG
59.0118 -1.00000 194.772 147.000 rc
newpath
60.0118 145.000 m
60.1874 145.000 l
60.3747 145.000 l
60.7493 145.000 l
62.9967 144.999 l
65.9933 144.999 l
71.9866 144.999 l
83.9731 144.998 l
107.946 144.996 l
155.892 144.991 l
251.784 144.982 l
S
cliprestore
newpath
0 0 m
0 180.000 l
254.000 180.000 l
254.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
60.0118 145.000 m
251.784 145.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
151 165 8 15 rc
Q
cliprestore
newpath
0 0 m
0 180.000 l
254.000 180.000 l
254.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
60.0000 145.000 m
60.0000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
62.4697 162.747 m
62.4697 161.765 62.6178 160.920 62.9140 160.211  c
63.2102 159.502 63.6038 158.974 64.0947 158.627  c
64.4755 158.352 64.8691 158.214 65.2753 158.214  c
65.9355 158.214 66.5279 158.551 67.0527 159.224  c
67.7086 160.057 68.0366 161.187 68.0366 162.613  c
68.0366 163.612 67.8927 164.460 67.6049 165.159  c
67.3172 165.857 66.9501 166.364 66.5036 166.679  c
66.0572 166.994 65.6266 167.152 65.2119 167.152  c
64.3909 167.152 63.7075 166.667 63.1616 165.698  c
62.7003 164.882 62.4697 163.898 62.4697 162.747  c
h
63.7138 162.905 m
63.7138 164.090 63.8598 165.057 64.1518 165.806  c
64.3930 166.437 64.7527 166.752 65.2309 166.752  c
65.4594 166.752 65.6964 166.649 65.9418 166.444  c
66.1873 166.239 66.3735 165.895 66.5004 165.413  c
66.6951 164.685 66.7924 163.659 66.7924 162.334  c
66.7924 161.352 66.6909 160.533 66.4877 159.877  c
66.3354 159.391 66.1386 159.046 65.8974 158.843  c
65.7239 158.703 65.5144 158.633 65.2690 158.633  c
64.9812 158.633 64.7252 158.762 64.5009 159.021  c
64.1962 159.372 63.9889 159.924 63.8789 160.677  c
63.7688 161.431 63.7138 162.173 63.7138 162.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
89.0000 145.000 m
89.0000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
78.5234 159.236 m
80.6181 158.214 l
80.8276 158.214 l
80.8276 165.482 l
80.8276 165.965 80.8477 166.265 80.8879 166.384  c
80.9281 166.502 81.0117 166.593 81.1386 166.657  c
81.2656 166.720 81.5237 166.756 81.9130 166.765  c
81.9130 167.000 l
78.6757 167.000 l
78.6757 166.765 l
79.0820 166.756 79.3444 166.721 79.4628 166.660  c
79.5813 166.599 79.6639 166.516 79.7104 166.412  c
79.7570 166.309 79.7802 165.999 79.7802 165.482  c
79.7802 160.836 l
79.7802 160.210 79.7591 159.808 79.7168 159.630  c
79.6871 159.495 79.6332 159.395 79.5549 159.332  c
79.4766 159.268 79.3824 159.236 79.2724 159.236  c
79.1158 159.236 78.8979 159.302 78.6186 159.433  c
h
84.4697 162.747 m
84.4697 161.765 84.6178 160.920 84.9140 160.211  c
85.2102 159.502 85.6038 158.974 86.0947 158.627  c
86.4755 158.352 86.8691 158.214 87.2753 158.214  c
87.9355 158.214 88.5279 158.551 89.0527 159.224  c
89.7086 160.057 90.0366 161.187 90.0366 162.613  c
90.0366 163.612 89.8927 164.460 89.6049 165.159  c
89.3172 165.857 88.9501 166.364 88.5036 166.679  c
88.0572 166.994 87.6266 167.152 87.2119 167.152  c
86.3909 167.152 85.7075 166.667 85.1616 165.698  c
84.7003 164.882 84.4697 163.898 84.4697 162.747  c
h
85.7138 162.905 m
85.7138 164.090 85.8598 165.057 86.1518 165.806  c
86.3930 166.437 86.7527 166.752 87.2309 166.752  c
87.4594 166.752 87.6964 166.649 87.9418 166.444  c
88.1873 166.239 88.3735 165.895 88.5004 165.413  c
88.6951 164.685 88.7924 163.659 88.7924 162.334  c
88.7924 161.352 88.6909 160.533 88.4877 159.877  c
88.3354 159.391 88.1386 159.046 87.8974 158.843  c
87.7239 158.703 87.5144 158.633 87.2690 158.633  c
86.9812 158.633 86.7252 158.762 86.5009 159.021  c
86.1962 159.372 85.9889 159.924 85.8789 160.677  c
85.7688 161.431 85.7138 162.173 85.7138 162.905  c
h
91.4697 162.747 m
91.4697 161.765 91.6178 160.920 91.9140 160.211  c
92.2102 159.502 92.6038 158.974 93.0947 158.627  c
93.4755 158.352 93.8691 158.214 94.2753 158.214  c
94.9355 158.214 95.5279 158.551 96.0527 159.224  c
96.7086 160.057 97.0366 161.187 97.0366 162.613  c
97.0366 163.612 96.8927 164.460 96.6049 165.159  c
96.3172 165.857 95.9501 166.364 95.5036 166.679  c
95.0572 166.994 94.6266 167.152 94.2119 167.152  c
93.3909 167.152 92.7075 166.667 92.1616 165.698  c
91.7003 164.882 91.4697 163.898 91.4697 162.747  c
h
92.7138 162.905 m
92.7138 164.090 92.8598 165.057 93.1518 165.806  c
93.3930 166.437 93.7527 166.752 94.2309 166.752  c
94.4594 166.752 94.6964 166.649 94.9418 166.444  c
95.1873 166.239 95.3735 165.895 95.5004 165.413  c
95.6951 164.685 95.7924 163.659 95.7924 162.334  c
95.7924 161.352 95.6909 160.533 95.4877 159.877  c
95.3354 159.391 95.1386 159.046 94.8974 158.843  c
94.7239 158.703 94.5144 158.633 94.2690 158.633  c
93.9812 158.633 93.7252 158.762 93.5009 159.021  c
93.1962 159.372 92.9889 159.924 92.8789 160.677  c
92.7688 161.431 92.7138 162.173 92.7138 162.905  c
h
98.4697 162.747 m
98.4697 161.765 98.6178 160.920 98.9140 160.211  c
99.2102 159.502 99.6038 158.974 100.094 158.627  c
100.475 158.352 100.869 158.214 101.275 158.214  c
101.935 158.214 102.528 158.551 103.052 159.224  c
103.708 160.057 104.036 161.187 104.036 162.613  c
104.036 163.612 103.892 164.460 103.605 165.159  c
103.317 165.857 102.950 166.364 102.503 166.679  c
102.057 166.994 101.626 167.152 101.211 167.152  c
100.391 167.152 99.7075 166.667 99.1616 165.698  c
98.7003 164.882 98.4697 163.898 98.4697 162.747  c
h
99.7138 162.905 m
99.7138 164.090 99.8598 165.057 100.151 165.806  c
100.393 166.437 100.752 166.752 101.231 166.752  c
101.459 166.752 101.696 166.649 101.941 166.444  c
102.187 166.239 102.373 165.895 102.500 165.413  c
102.695 164.685 102.792 163.659 102.792 162.334  c
102.792 161.352 102.690 160.533 102.487 159.877  c
102.335 159.391 102.138 159.046 101.897 158.843  c
101.724 158.703 101.514 158.633 101.269 158.633  c
100.981 158.633 100.725 158.762 100.501 159.021  c
100.196 159.372 99.9889 159.924 99.8789 160.677  c
99.7688 161.431 99.7138 162.173 99.7138 162.905  c
h
105.469 162.747 m
105.469 161.765 105.617 160.920 105.914 160.211  c
106.210 159.502 106.603 158.974 107.094 158.627  c
107.475 158.352 107.869 158.214 108.275 158.214  c
108.935 158.214 109.528 158.551 110.052 159.224  c
110.708 160.057 111.036 161.187 111.036 162.613  c
111.036 163.612 110.892 164.460 110.605 165.159  c
110.317 165.857 109.950 166.364 109.503 166.679  c
109.057 166.994 108.626 167.152 108.211 167.152  c
107.391 167.152 106.707 166.667 106.161 165.698  c
105.700 164.882 105.469 163.898 105.469 162.747  c
h
106.713 162.905 m
106.713 164.090 106.859 165.057 107.151 165.806  c
107.393 166.437 107.752 166.752 108.231 166.752  c
108.459 166.752 108.696 166.649 108.941 166.444  c
109.187 166.239 109.373 165.895 109.500 165.413  c
109.695 164.685 109.792 163.659 109.792 162.334  c
109.792 161.352 109.690 160.533 109.487 159.877  c
109.335 159.391 109.138 159.046 108.897 158.843  c
108.724 158.703 108.514 158.633 108.269 158.633  c
107.981 158.633 107.725 158.762 107.501 159.021  c
107.196 159.372 106.988 159.924 106.878 160.677  c
106.768 161.431 106.713 162.173 106.713 162.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
119.000 145.000 m
119.000 148.000 l
S
Q
q
newpath
148.000 145.000 m
148.000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
135.660 160.030 m
135.905 159.450 136.215 159.003 136.590 158.687  c
136.964 158.372 137.431 158.214 137.989 158.214  c
138.679 158.214 139.208 158.439 139.576 158.887  c
139.856 159.222 139.995 159.579 139.995 159.960  c
139.995 160.586 139.602 161.234 138.814 161.902  c
139.343 162.110 139.743 162.406 140.014 162.791  c
140.285 163.176 140.420 163.629 140.420 164.149  c
140.420 164.894 140.183 165.540 139.710 166.085  c
139.092 166.796 138.197 167.152 137.024 167.152  c
136.445 167.152 136.050 167.080 135.841 166.936  c
135.631 166.792 135.526 166.638 135.526 166.473  c
135.526 166.350 135.576 166.242 135.676 166.149  c
135.775 166.056 135.895 166.009 136.034 166.009  c
136.140 166.009 136.248 166.026 136.358 166.060  c
136.430 166.081 136.593 166.158 136.847 166.292  c
137.101 166.425 137.276 166.504 137.374 166.530  c
137.530 166.576 137.697 166.600 137.875 166.600  c
138.307 166.600 138.682 166.432 139.002 166.098  c
139.321 165.764 139.481 165.368 139.481 164.911  c
139.481 164.577 139.407 164.251 139.259 163.934  c
139.149 163.697 139.028 163.517 138.897 163.394  c
138.715 163.225 138.465 163.071 138.148 162.934  c
137.831 162.796 137.507 162.728 137.177 162.728  c
136.974 162.728 l
136.974 162.537 l
137.308 162.495 137.643 162.374 137.980 162.175  c
138.316 161.976 138.561 161.737 138.713 161.458  c
138.865 161.179 138.941 160.872 138.941 160.538  c
138.941 160.102 138.805 159.749 138.532 159.481  c
138.259 159.212 137.919 159.078 137.513 159.078  c
136.857 159.078 136.309 159.429 135.869 160.131  c
h
142.469 162.747 m
142.469 161.765 142.617 160.920 142.914 160.211  c
143.210 159.502 143.603 158.974 144.094 158.627  c
144.475 158.352 144.869 158.214 145.275 158.214  c
145.935 158.214 146.528 158.551 147.052 159.224  c
147.708 160.057 148.036 161.187 148.036 162.613  c
148.036 163.612 147.892 164.460 147.605 165.159  c
147.317 165.857 146.950 166.364 146.503 166.679  c
146.057 166.994 145.626 167.152 145.211 167.152  c
144.391 167.152 143.707 166.667 143.161 165.698  c
142.700 164.882 142.469 163.898 142.469 162.747  c
h
143.713 162.905 m
143.713 164.090 143.859 165.057 144.151 165.806  c
144.393 166.437 144.752 166.752 145.231 166.752  c
145.459 166.752 145.696 166.649 145.941 166.444  c
146.187 166.239 146.373 165.895 146.500 165.413  c
146.695 164.685 146.792 163.659 146.792 162.334  c
146.792 161.352 146.690 160.533 146.487 159.877  c
146.335 159.391 146.138 159.046 145.897 158.843  c
145.724 158.703 145.514 158.633 145.269 158.633  c
144.981 158.633 144.725 158.762 144.501 159.021  c
144.196 159.372 143.988 159.924 143.878 160.677  c
143.768 161.431 143.713 162.173 143.713 162.905  c
h
149.469 162.747 m
149.469 161.765 149.617 160.920 149.914 160.211  c
150.210 159.502 150.603 158.974 151.094 158.627  c
151.475 158.352 151.869 158.214 152.275 158.214  c
152.935 158.214 153.528 158.551 154.052 159.224  c
154.708 160.057 155.036 161.187 155.036 162.613  c
155.036 163.612 154.892 164.460 154.605 165.159  c
154.317 165.857 153.950 166.364 153.503 166.679  c
153.057 166.994 152.626 167.152 152.211 167.152  c
151.391 167.152 150.707 166.667 150.161 165.698  c
149.700 164.882 149.469 163.898 149.469 162.747  c
h
150.713 162.905 m
150.713 164.090 150.859 165.057 151.151 165.806  c
151.393 166.437 151.752 166.752 152.231 166.752  c
152.459 166.752 152.696 166.649 152.941 166.444  c
153.187 166.239 153.373 165.895 153.500 165.413  c
153.695 164.685 153.792 163.659 153.792 162.334  c
153.792 161.352 153.690 160.533 153.487 159.877  c
153.335 159.391 153.138 159.046 152.897 158.843  c
152.724 158.703 152.514 158.633 152.269 158.633  c
151.981 158.633 151.725 158.762 151.501 159.021  c
151.196 159.372 150.988 159.924 150.878 160.677  c
150.768 161.431 150.713 162.173 150.713 162.905  c
h
156.469 162.747 m
156.469 161.765 156.617 160.920 156.914 160.211  c
157.210 159.502 157.603 158.974 158.094 158.627  c
158.475 158.352 158.869 158.214 159.275 158.214  c
159.935 158.214 160.528 158.551 161.052 159.224  c
161.708 160.057 162.036 161.187 162.036 162.613  c
162.036 163.612 161.892 164.460 161.605 165.159  c
161.317 165.857 160.950 166.364 160.503 166.679  c
160.057 166.994 159.626 167.152 159.211 167.152  c
158.391 167.152 157.707 166.667 157.161 165.698  c
156.700 164.882 156.469 163.898 156.469 162.747  c
h
157.713 162.905 m
157.713 164.090 157.859 165.057 158.151 165.806  c
158.393 166.437 158.752 166.752 159.231 166.752  c
159.459 166.752 159.696 166.649 159.941 166.444  c
160.187 166.239 160.373 165.895 160.500 165.413  c
160.695 164.685 160.792 163.659 160.792 162.334  c
160.792 161.352 160.690 160.533 160.487 159.877  c
160.335 159.391 160.138 159.046 159.897 158.843  c
159.724 158.703 159.514 158.633 159.269 158.633  c
158.981 158.633 158.725 158.762 158.501 159.021  c
158.196 159.372 157.988 159.924 157.878 160.677  c
157.768 161.431 157.713 162.173 157.713 162.905  c
h
163.469 162.747 m
163.469 161.765 163.617 160.920 163.914 160.211  c
164.210 159.502 164.603 158.974 165.094 158.627  c
165.475 158.352 165.869 158.214 166.275 158.214  c
166.935 158.214 167.528 158.551 168.052 159.224  c
168.708 160.057 169.036 161.187 169.036 162.613  c
169.036 163.612 168.892 164.460 168.605 165.159  c
168.317 165.857 167.950 166.364 167.503 166.679  c
167.057 166.994 166.626 167.152 166.211 167.152  c
165.391 167.152 164.707 166.667 164.161 165.698  c
163.700 164.882 163.469 163.898 163.469 162.747  c
h
164.713 162.905 m
164.713 164.090 164.859 165.057 165.151 165.806  c
165.393 166.437 165.752 166.752 166.231 166.752  c
166.459 166.752 166.696 166.649 166.941 166.444  c
167.187 166.239 167.373 165.895 167.500 165.413  c
167.695 164.685 167.792 163.659 167.792 162.334  c
167.792 161.352 167.690 160.533 167.487 159.877  c
167.335 159.391 167.138 159.046 166.897 158.843  c
166.724 158.703 166.514 158.633 166.269 158.633  c
165.981 158.633 165.725 158.762 165.501 159.021  c
165.196 159.372 164.988 159.924 164.878 160.677  c
164.768 161.431 164.713 162.173 164.713 162.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
177.000 145.000 m
177.000 148.000 l
S
Q
q
newpath
206.000 145.000 m
206.000 148.000 l
S
Q
q
newpath
236.000 145.000 m
236.000 148.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
228.827 158.214 m
228.827 158.449 l
228.268 158.504 227.812 158.615 227.459 158.783  c
227.105 158.950 226.756 159.205 226.411 159.547  c
226.067 159.890 225.781 160.272 225.554 160.693  c
225.328 161.114 225.139 161.615 224.986 162.194  c
225.596 161.775 226.207 161.566 226.821 161.566  c
227.409 161.566 227.919 161.803 228.351 162.277  c
228.782 162.751 228.998 163.360 228.998 164.105  c
228.998 164.824 228.780 165.480 228.344 166.073  c
227.820 166.792 227.126 167.152 226.262 167.152  c
225.674 167.152 225.175 166.957 224.764 166.568  c
223.960 165.810 223.558 164.829 223.558 163.623  c
223.558 162.852 223.713 162.120 224.022 161.426  c
224.330 160.732 224.772 160.117 225.345 159.579  c
225.918 159.042 226.467 158.680 226.992 158.494  c
227.517 158.307 228.006 158.214 228.459 158.214  c
h
224.878 162.658 m
224.802 163.229 224.764 163.690 224.764 164.042  c
224.764 164.448 224.839 164.889 224.990 165.365  c
225.140 165.841 225.363 166.219 225.659 166.498  c
225.875 166.697 226.137 166.796 226.446 166.796  c
226.814 166.796 227.144 166.623 227.433 166.276  c
227.723 165.929 227.868 165.434 227.868 164.791  c
227.868 164.067 227.724 163.441 227.437 162.912  c
227.149 162.383 226.740 162.118 226.211 162.118  c
226.051 162.118 225.878 162.152 225.694 162.220  c
225.510 162.287 225.238 162.433 224.878 162.658  c
h
230.469 162.747 m
230.469 161.765 230.617 160.920 230.914 160.211  c
231.210 159.502 231.603 158.974 232.094 158.627  c
232.475 158.352 232.869 158.214 233.275 158.214  c
233.935 158.214 234.528 158.551 235.052 159.224  c
235.708 160.057 236.036 161.187 236.036 162.613  c
236.036 163.612 235.892 164.460 235.605 165.159  c
235.317 165.857 234.950 166.364 234.503 166.679  c
234.057 166.994 233.626 167.152 233.211 167.152  c
232.391 167.152 231.707 166.667 231.161 165.698  c
230.700 164.882 230.469 163.898 230.469 162.747  c
h
231.713 162.905 m
231.713 164.090 231.859 165.057 232.151 165.806  c
232.393 166.437 232.752 166.752 233.231 166.752  c
233.459 166.752 233.696 166.649 233.941 166.444  c
234.187 166.239 234.373 165.895 234.500 165.413  c
234.695 164.685 234.792 163.659 234.792 162.334  c
234.792 161.352 234.690 160.533 234.487 159.877  c
234.335 159.391 234.138 159.046 233.897 158.843  c
233.724 158.703 233.514 158.633 233.269 158.633  c
232.981 158.633 232.725 158.762 232.501 159.021  c
232.196 159.372 231.988 159.924 231.878 160.677  c
231.768 161.431 231.713 162.173 231.713 162.905  c
h
237.469 162.747 m
237.469 161.765 237.617 160.920 237.914 160.211  c
238.210 159.502 238.603 158.974 239.094 158.627  c
239.475 158.352 239.869 158.214 240.275 158.214  c
240.935 158.214 241.528 158.551 242.052 159.224  c
242.708 160.057 243.036 161.187 243.036 162.613  c
243.036 163.612 242.892 164.460 242.605 165.159  c
242.317 165.857 241.950 166.364 241.503 166.679  c
241.057 166.994 240.626 167.152 240.211 167.152  c
239.391 167.152 238.707 166.667 238.161 165.698  c
237.700 164.882 237.469 163.898 237.469 162.747  c
h
238.713 162.905 m
238.713 164.090 238.859 165.057 239.151 165.806  c
239.393 166.437 239.752 166.752 240.231 166.752  c
240.459 166.752 240.696 166.649 240.941 166.444  c
241.187 166.239 241.373 165.895 241.500 165.413  c
241.695 164.685 241.792 163.659 241.792 162.334  c
241.792 161.352 241.690 160.533 241.487 159.877  c
241.335 159.391 241.138 159.046 240.897 158.843  c
240.724 158.703 240.514 158.633 240.269 158.633  c
239.981 158.633 239.725 158.762 239.501 159.021  c
239.196 159.372 238.988 159.924 238.878 160.677  c
238.768 161.431 238.713 162.173 238.713 162.905  c
h
244.469 162.747 m
244.469 161.765 244.617 160.920 244.914 160.211  c
245.210 159.502 245.603 158.974 246.094 158.627  c
246.475 158.352 246.869 158.214 247.275 158.214  c
247.935 158.214 248.528 158.551 249.052 159.224  c
249.708 160.057 250.036 161.187 250.036 162.613  c
250.036 163.612 249.892 164.460 249.605 165.159  c
249.317 165.857 248.950 166.364 248.503 166.679  c
248.057 166.994 247.626 167.152 247.211 167.152  c
246.391 167.152 245.707 166.667 245.161 165.698  c
244.700 164.882 244.469 163.898 244.469 162.747  c
h
245.713 162.905 m
245.713 164.090 245.859 165.057 246.151 165.806  c
246.393 166.437 246.752 166.752 247.231 166.752  c
247.459 166.752 247.696 166.649 247.941 166.444  c
248.187 166.239 248.373 165.895 248.500 165.413  c
248.695 164.685 248.792 163.659 248.792 162.334  c
248.792 161.352 248.690 160.533 248.487 159.877  c
248.335 159.391 248.138 159.046 247.897 158.843  c
247.724 158.703 247.514 158.633 247.269 158.633  c
246.981 158.633 246.725 158.762 246.501 159.021  c
246.196 159.372 245.988 159.924 245.878 160.677  c
245.768 161.431 245.713 162.173 245.713 162.905  c
h
251.469 162.747 m
251.469 161.765 251.617 160.920 251.914 160.211  c
252.210 159.502 252.603 158.974 253.094 158.627  c
253.475 158.352 253.869 158.214 254.275 158.214  c
254.935 158.214 255.528 158.551 256.052 159.224  c
256.708 160.057 257.036 161.187 257.036 162.613  c
257.036 163.612 256.892 164.460 256.605 165.159  c
256.317 165.857 255.950 166.364 255.503 166.679  c
255.057 166.994 254.626 167.152 254.211 167.152  c
253.391 167.152 252.707 166.667 252.161 165.698  c
251.700 164.882 251.469 163.898 251.469 162.747  c
h
252.713 162.905 m
252.713 164.090 252.859 165.057 253.151 165.806  c
253.393 166.437 253.752 166.752 254.231 166.752  c
254.459 166.752 254.696 166.649 254.941 166.444  c
255.187 166.239 255.373 165.895 255.500 165.413  c
255.695 164.685 255.792 163.659 255.792 162.334  c
255.792 161.352 255.690 160.533 255.487 159.877  c
255.335 159.391 255.138 159.046 254.897 158.843  c
254.724 158.703 254.514 158.633 254.269 158.633  c
253.981 158.633 253.725 158.762 253.501 159.021  c
253.196 159.372 252.988 159.924 252.878 160.677  c
252.768 161.431 252.713 162.173 252.713 162.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
75.0000 145.000 m
75.0000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
104.000 145.000 m
104.000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
133.000 145.000 m
133.000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
162.000 145.000 m
162.000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
192.000 145.000 m
192.000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
221.000 145.000 m
221.000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
250.000 145.000 m
250.000 147.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
60.0000 145.000 m
60.0000 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 66 8 15 rc
Q
cliprestore
newpath
0 0 m
0 180.000 l
254.000 180.000 l
254.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
60.0000 145.000 m
57.0000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
52.4697 150.747 m
52.4697 149.765 52.6178 148.920 52.9140 148.211  c
53.2102 147.502 53.6038 146.974 54.0947 146.627  c
54.4755 146.352 54.8691 146.214 55.2753 146.214  c
55.9355 146.214 56.5279 146.551 57.0527 147.224  c
57.7086 148.057 58.0366 149.187 58.0366 150.613  c
58.0366 151.612 57.8927 152.460 57.6049 153.159  c
57.3172 153.857 56.9501 154.364 56.5036 154.679  c
56.0572 154.994 55.6266 155.152 55.2119 155.152  c
54.3909 155.152 53.7075 154.667 53.1616 153.698  c
52.7003 152.882 52.4697 151.898 52.4697 150.747  c
h
53.7138 150.905 m
53.7138 152.090 53.8598 153.057 54.1518 153.806  c
54.3930 154.437 54.7527 154.752 55.2309 154.752  c
55.4594 154.752 55.6964 154.649 55.9418 154.444  c
56.1873 154.239 56.3735 153.895 56.5004 153.413  c
56.6951 152.685 56.7924 151.659 56.7924 150.334  c
56.7924 149.352 56.6909 148.533 56.4877 147.877  c
56.3354 147.391 56.1386 147.046 55.8974 146.843  c
55.7239 146.703 55.5144 146.633 55.2690 146.633  c
54.9812 146.633 54.7252 146.762 54.5009 147.021  c
54.1962 147.372 53.9889 147.924 53.8789 148.677  c
53.7688 149.431 53.7138 150.173 53.7138 150.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 111.000 m
57.0000 111.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
17.5234 113.236 m
19.6181 112.214 l
19.8276 112.214 l
19.8276 119.482 l
19.8276 119.965 19.8477 120.265 19.8879 120.384  c
19.9281 120.502 20.0117 120.593 20.1386 120.657  c
20.2656 120.720 20.5237 120.756 20.9130 120.765  c
20.9130 121.000 l
17.6757 121.000 l
17.6757 120.765 l
18.0820 120.756 18.3444 120.721 18.4628 120.660  c
18.5813 120.599 18.6639 120.516 18.7104 120.412  c
18.7570 120.309 18.7802 119.999 18.7802 119.482  c
18.7802 114.836 l
18.7802 114.210 18.7591 113.808 18.7168 113.630  c
18.6871 113.495 18.6332 113.395 18.5549 113.332  c
18.4766 113.268 18.3824 113.236 18.2724 113.236  c
18.1158 113.236 17.8979 113.302 17.6186 113.433  c
h
24.6250 119.768 m
24.8238 119.768 24.9910 119.837 25.1264 119.974  c
25.2618 120.112 25.3295 120.278 25.3295 120.473  c
25.3295 120.667 25.2608 120.833 25.1232 120.971  c
24.9857 121.109 24.8196 121.177 24.6250 121.177  c
24.4303 121.177 24.2642 121.109 24.1267 120.971  c
23.9891 120.833 23.9204 120.667 23.9204 120.473  c
23.9204 120.274 23.9891 120.107 24.1267 119.971  c
24.2642 119.836 24.4303 119.768 24.6250 119.768  c
h
f
newpath
36.0860 119.336 m
35.3840 120.038 l
33.1480 117.802 l
30.9120 120.025 l
30.2100 119.323 l
32.4460 117.100 l
30.2100 114.877 l
30.9120 114.175 l
33.1480 116.398 l
35.3840 114.162 l
36.0860 114.864 l
33.8500 117.100 l
h
f
newpath
41.5234 113.236 m
43.6181 112.214 l
43.8276 112.214 l
43.8276 119.482 l
43.8276 119.965 43.8477 120.265 43.8879 120.384  c
43.9281 120.502 44.0117 120.593 44.1386 120.657  c
44.2656 120.720 44.5237 120.756 44.9130 120.765  c
44.9130 121.000 l
41.6757 121.000 l
41.6757 120.765 l
42.0820 120.756 42.3444 120.721 42.4628 120.660  c
42.5813 120.599 42.6639 120.516 42.7104 120.412  c
42.7570 120.309 42.7802 119.999 42.7802 119.482  c
42.7802 114.836 l
42.7802 114.210 42.7591 113.808 42.7168 113.630  c
42.6871 113.495 42.6332 113.395 42.5549 113.332  c
42.4766 113.268 42.3824 113.236 42.2724 113.236  c
42.1158 113.236 41.8979 113.302 41.6186 113.433  c
h
47.4697 116.747 m
47.4697 115.765 47.6178 114.920 47.9140 114.211  c
48.2102 113.502 48.6038 112.974 49.0947 112.627  c
49.4755 112.352 49.8691 112.214 50.2753 112.214  c
50.9355 112.214 51.5279 112.551 52.0527 113.224  c
52.7086 114.057 53.0366 115.187 53.0366 116.613  c
53.0366 117.612 52.8927 118.460 52.6049 119.159  c
52.3172 119.857 51.9501 120.364 51.5036 120.679  c
51.0572 120.994 50.6266 121.152 50.2119 121.152  c
49.3909 121.152 48.7075 120.667 48.1616 119.698  c
47.7003 118.882 47.4697 117.898 47.4697 116.747  c
h
48.7138 116.905 m
48.7138 118.090 48.8598 119.057 49.1518 119.806  c
49.3930 120.437 49.7527 120.752 50.2309 120.752  c
50.4594 120.752 50.6964 120.649 50.9418 120.444  c
51.1873 120.239 51.3735 119.895 51.5004 119.413  c
51.6951 118.685 51.7924 117.659 51.7924 116.334  c
51.7924 115.352 51.6909 114.533 51.4877 113.877  c
51.3354 113.391 51.1386 113.046 50.8974 112.843  c
50.7239 112.703 50.5144 112.633 50.2690 112.633  c
49.9812 112.633 49.7252 112.762 49.5009 113.021  c
49.1962 113.372 48.9889 113.924 48.8789 114.677  c
48.7688 115.431 48.7138 116.173 48.7138 116.905  c
h
f
newpath
54.5273 116.136 m
54.5273 115.956 l
54.9505 115.949 55.3444 115.851 55.7089 115.660  c
56.0735 115.470 56.4259 115.137 56.7661 114.662  c
57.1062 114.186 57.3431 113.664 57.4765 113.094  c
56.9654 113.423 56.5032 113.587 56.0898 113.587  c
55.6243 113.587 55.2255 113.408 54.8935 113.048  c
54.5615 112.688 54.3955 112.210 54.3955 111.615  c
54.3955 111.035 54.5615 110.519 54.8935 110.067  c
55.2939 109.517 55.8164 109.242 56.4609 109.242  c
57.0045 109.242 57.4700 109.466 57.8574 109.916  c
58.3326 110.472 58.5703 111.159 58.5703 111.976  c
58.5703 112.712 58.3896 113.398 58.0283 114.034  c
57.6669 114.671 57.1640 115.199 56.5195 115.619  c
55.9954 115.964 55.4241 116.136 54.8056 116.136  c
h
57.5546 112.733 m
57.6132 112.310 57.6425 111.971 57.6425 111.717  c
57.6425 111.402 57.5888 111.061 57.4814 110.694  c
57.3740 110.328 57.2218 110.047 57.0249 109.852  c
56.8279 109.657 56.6041 109.559 56.3535 109.559  c
56.0638 109.559 55.8099 109.689 55.5918 109.950  c
55.3737 110.210 55.2646 110.598 55.2646 111.112  c
55.2646 111.799 55.4095 112.336 55.6992 112.723  c
55.9108 113.003 56.1712 113.143 56.4804 113.143  c
56.6302 113.143 56.8076 113.107 57.0127 113.036  c
57.2177 112.964 57.3984 112.863 57.5546 112.733  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 78.0000 m
57.0000 78.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
21.9604 85.3432 m
21.3574 87.0000 l
16.2793 87.0000 l
16.2793 86.7651 l
17.7731 85.4025 18.8247 84.2895 19.4340 83.4262  c
20.0434 82.5629 20.3481 81.7737 20.3481 81.0585  c
20.3481 80.5127 20.1809 80.0641 19.8466 79.7128  c
19.5123 79.3616 19.1124 79.1860 18.6469 79.1860  c
18.2238 79.1860 17.8439 79.3098 17.5075 79.5573  c
17.1711 79.8049 16.9225 80.1678 16.7617 80.6460  c
16.5268 80.6460 l
16.6326 79.8631 16.9045 79.2622 17.3425 78.8432  c
17.7805 78.4243 18.3274 78.2148 18.9834 78.2148  c
19.6816 78.2148 20.2645 78.4391 20.7321 78.8877  c
21.1997 79.3362 21.4335 79.8652 21.4335 80.4746  c
21.4335 80.9104 21.3320 81.3463 21.1289 81.7822  c
20.8157 82.4677 20.3079 83.1935 19.6054 83.9594  c
18.5517 85.1105 17.8937 85.8045 17.6313 86.0415  c
19.8784 86.0415 l
20.3354 86.0415 20.6560 86.0245 20.8400 85.9907  c
21.0241 85.9568 21.1902 85.8881 21.3383 85.7844  c
21.4864 85.6807 21.6155 85.5336 21.7255 85.3432  c
h
24.6250 85.7685 m
24.8238 85.7685 24.9910 85.8373 25.1264 85.9748  c
25.2618 86.1123 25.3295 86.2784 25.3295 86.4731  c
25.3295 86.6678 25.2608 86.8339 25.1232 86.9714  c
24.9857 87.1089 24.8196 87.1777 24.6250 87.1777  c
24.4303 87.1777 24.2642 87.1089 24.1267 86.9714  c
23.9891 86.8339 23.9204 86.6678 23.9204 86.4731  c
23.9204 86.2742 23.9891 86.1071 24.1267 85.9716  c
24.2642 85.8362 24.4303 85.7685 24.6250 85.7685  c
h
f
newpath
36.0860 85.3360 m
35.3840 86.0380 l
33.1480 83.8020 l
30.9120 86.0250 l
30.2100 85.3230 l
32.4460 83.1000 l
30.2100 80.8770 l
30.9120 80.1750 l
33.1480 82.3980 l
35.3840 80.1620 l
36.0860 80.8640 l
33.8500 83.1000 l
h
f
newpath
41.5234 79.2368 m
43.6181 78.2148 l
43.8276 78.2148 l
43.8276 85.4829 l
43.8276 85.9653 43.8477 86.2657 43.8879 86.3842  c
43.9281 86.5027 44.0117 86.5937 44.1386 86.6572  c
44.2656 86.7207 44.5237 86.7566 44.9130 86.7651  c
44.9130 87.0000 l
41.6757 87.0000 l
41.6757 86.7651 l
42.0820 86.7566 42.3444 86.7217 42.4628 86.6604  c
42.5813 86.5990 42.6639 86.5165 42.7104 86.4128  c
42.7570 86.3091 42.7802 85.9991 42.7802 85.4829  c
42.7802 80.8364 l
42.7802 80.2101 42.7591 79.8081 42.7168 79.6303  c
42.6871 79.4949 42.6332 79.3955 42.5549 79.3320  c
42.4766 79.2685 42.3824 79.2368 42.2724 79.2368  c
42.1158 79.2368 41.8979 79.3024 41.6186 79.4335  c
h
47.4697 82.7470 m
47.4697 81.7653 47.6178 80.9200 47.9140 80.2111  c
48.2102 79.5023 48.6038 78.9744 49.0947 78.6274  c
49.4755 78.3523 49.8691 78.2148 50.2753 78.2148  c
50.9355 78.2148 51.5279 78.5512 52.0527 79.2241  c
52.7086 80.0577 53.0366 81.1876 53.0366 82.6137  c
53.0366 83.6124 52.8927 84.4609 52.6049 85.1591  c
52.3172 85.8574 51.9501 86.3641 51.5036 86.6794  c
51.0572 86.9947 50.6266 87.1523 50.2119 87.1523  c
49.3909 87.1523 48.7075 86.6678 48.1616 85.6987  c
47.7003 84.8820 47.4697 83.8981 47.4697 82.7470  c
h
48.7138 82.9057 m
48.7138 84.0906 48.8598 85.0576 49.1518 85.8066  c
49.3930 86.4371 49.7527 86.7524 50.2309 86.7524  c
50.4594 86.7524 50.6964 86.6498 50.9418 86.4445  c
51.1873 86.2393 51.3735 85.8955 51.5004 85.4130  c
51.6951 84.6852 51.7924 83.6590 51.7924 82.3344  c
51.7924 81.3527 51.6909 80.5338 51.4877 79.8779  c
51.3354 79.3912 51.1386 79.0463 50.8974 78.8432  c
50.7239 78.7036 50.5144 78.6337 50.2690 78.6337  c
49.9812 78.6337 49.7252 78.7628 49.5009 79.0210  c
49.1962 79.3722 48.9889 79.9244 48.8789 80.6777  c
48.7688 81.4309 48.7138 82.1736 48.7138 82.9057  c
h
f
newpath
54.5273 82.1367 m
54.5273 81.9560 l
54.9505 81.9495 55.3444 81.8510 55.7089 81.6606  c
56.0735 81.4702 56.4259 81.1373 56.7661 80.6621  c
57.1062 80.1868 57.3431 79.6643 57.4765 79.0947  c
56.9654 79.4235 56.5032 79.5878 56.0898 79.5878  c
55.6243 79.5878 55.2255 79.4080 54.8935 79.0483  c
54.5615 78.6886 54.3955 78.2109 54.3955 77.6152  c
54.3955 77.0358 54.5615 76.5198 54.8935 76.0673  c
55.2939 75.5172 55.8164 75.2421 56.4609 75.2421  c
57.0045 75.2421 57.4700 75.4668 57.8574 75.9160  c
58.3326 76.4726 58.5703 77.1595 58.5703 77.9765  c
58.5703 78.7122 58.3896 79.3982 58.0283 80.0346  c
57.6669 80.6710 57.1640 81.1992 56.5195 81.6191  c
55.9954 81.9641 55.4241 82.1367 54.8056 82.1367  c
h
57.5546 78.7334 m
57.6132 78.3102 57.6425 77.9716 57.6425 77.7177  c
57.6425 77.4020 57.5888 77.0610 57.4814 76.6948  c
57.3740 76.3286 57.2218 76.0478 57.0249 75.8525  c
56.8279 75.6572 56.6041 75.5595 56.3535 75.5595  c
56.0638 75.5595 55.8099 75.6897 55.5918 75.9502  c
55.3737 76.2106 55.2646 76.5979 55.2646 77.1123  c
55.2646 77.7991 55.4095 78.3362 55.6992 78.7236  c
55.9108 79.0035 56.1712 79.1435 56.4804 79.1435  c
56.6302 79.1435 56.8076 79.1077 57.0127 79.0361  c
57.2177 78.9645 57.3984 78.8636 57.5546 78.7334  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 44.0000 m
57.0000 44.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
16.6601 47.0302 m
16.9056 46.4505 17.2155 46.0030 17.5900 45.6877  c
17.9646 45.3724 18.4311 45.2148 18.9897 45.2148  c
19.6795 45.2148 20.2085 45.4391 20.5766 45.8877  c
20.8559 46.2220 20.9956 46.5795 20.9956 46.9604  c
20.9956 47.5867 20.6020 48.2342 19.8149 48.9028  c
20.3439 49.1101 20.7438 49.4064 21.0146 49.7915  c
21.2854 50.1766 21.4209 50.6293 21.4209 51.1499  c
21.4209 51.8946 21.1839 52.5400 20.7099 53.0859  c
20.0921 53.7968 19.1971 54.1523 18.0249 54.1523  c
17.4451 54.1523 17.0505 54.0804 16.8410 53.9365  c
16.6315 53.7926 16.5268 53.6381 16.5268 53.4731  c
16.5268 53.3504 16.5765 53.2425 16.6760 53.1494  c
16.7754 53.0563 16.8950 53.0097 17.0346 53.0097  c
17.1404 53.0097 17.2483 53.0266 17.3584 53.0605  c
17.4303 53.0817 17.5932 53.1589 17.8471 53.2922  c
18.1010 53.4255 18.2766 53.5048 18.3740 53.5302  c
18.5306 53.5768 18.6977 53.6001 18.8754 53.6001  c
19.3071 53.6001 19.6827 53.4329 20.0022 53.0986  c
20.3217 52.7643 20.4814 52.3686 20.4814 51.9116  c
20.4814 51.5773 20.4073 51.2514 20.2592 50.9340  c
20.1492 50.6971 20.0286 50.5172 19.8974 50.3945  c
19.7154 50.2252 19.4658 50.0718 19.1484 49.9343  c
18.8310 49.7967 18.5073 49.7280 18.1772 49.7280  c
17.9741 49.7280 l
17.9741 49.5376 l
18.3084 49.4952 18.6438 49.3746 18.9802 49.1757  c
19.3166 48.9768 19.5610 48.7377 19.7133 48.4585  c
19.8657 48.1792 19.9418 47.8724 19.9418 47.5380  c
19.9418 47.1022 19.8054 46.7499 19.5324 46.4812  c
19.2595 46.2124 18.9199 46.0781 18.5136 46.0781  c
17.8577 46.0781 17.3097 46.4293 16.8696 47.1318  c
h
24.6250 52.7685 m
24.8238 52.7685 24.9910 52.8373 25.1264 52.9748  c
25.2618 53.1123 25.3295 53.2784 25.3295 53.4731  c
25.3295 53.6678 25.2608 53.8339 25.1232 53.9714  c
24.9857 54.1089 24.8196 54.1777 24.6250 54.1777  c
24.4303 54.1777 24.2642 54.1089 24.1267 53.9714  c
23.9891 53.8339 23.9204 53.6678 23.9204 53.4731  c
23.9204 53.2742 23.9891 53.1071 24.1267 52.9716  c
24.2642 52.8362 24.4303 52.7685 24.6250 52.7685  c
h
f
newpath
36.0860 52.3360 m
35.3840 53.0380 l
33.1480 50.8020 l
30.9120 53.0250 l
30.2100 52.3230 l
32.4460 50.1000 l
30.2100 47.8770 l
30.9120 47.1750 l
33.1480 49.3980 l
35.3840 47.1620 l
36.0860 47.8640 l
33.8500 50.1000 l
h
f
newpath
41.5234 46.2368 m
43.6181 45.2148 l
43.8276 45.2148 l
43.8276 52.4829 l
43.8276 52.9653 43.8477 53.2657 43.8879 53.3842  c
43.9281 53.5027 44.0117 53.5937 44.1386 53.6572  c
44.2656 53.7207 44.5237 53.7566 44.9130 53.7651  c
44.9130 54.0000 l
41.6757 54.0000 l
41.6757 53.7651 l
42.0820 53.7566 42.3444 53.7217 42.4628 53.6604  c
42.5813 53.5990 42.6639 53.5165 42.7104 53.4128  c
42.7570 53.3091 42.7802 52.9991 42.7802 52.4829  c
42.7802 47.8364 l
42.7802 47.2101 42.7591 46.8081 42.7168 46.6303  c
42.6871 46.4949 42.6332 46.3955 42.5549 46.3320  c
42.4766 46.2685 42.3824 46.2368 42.2724 46.2368  c
42.1158 46.2368 41.8979 46.3024 41.6186 46.4335  c
h
47.4697 49.7470 m
47.4697 48.7653 47.6178 47.9200 47.9140 47.2111  c
48.2102 46.5023 48.6038 45.9744 49.0947 45.6274  c
49.4755 45.3523 49.8691 45.2148 50.2753 45.2148  c
50.9355 45.2148 51.5279 45.5512 52.0527 46.2241  c
52.7086 47.0577 53.0366 48.1876 53.0366 49.6137  c
53.0366 50.6124 52.8927 51.4609 52.6049 52.1591  c
52.3172 52.8574 51.9501 53.3641 51.5036 53.6794  c
51.0572 53.9947 50.6266 54.1523 50.2119 54.1523  c
49.3909 54.1523 48.7075 53.6678 48.1616 52.6987  c
47.7003 51.8820 47.4697 50.8981 47.4697 49.7470  c
h
48.7138 49.9057 m
48.7138 51.0906 48.8598 52.0576 49.1518 52.8066  c
49.3930 53.4371 49.7527 53.7524 50.2309 53.7524  c
50.4594 53.7524 50.6964 53.6498 50.9418 53.4445  c
51.1873 53.2393 51.3735 52.8955 51.5004 52.4130  c
51.6951 51.6852 51.7924 50.6590 51.7924 49.3344  c
51.7924 48.3527 51.6909 47.5338 51.4877 46.8779  c
51.3354 46.3912 51.1386 46.0463 50.8974 45.8432  c
50.7239 45.7036 50.5144 45.6337 50.2690 45.6337  c
49.9812 45.6337 49.7252 45.7628 49.5009 46.0210  c
49.1962 46.3722 48.9889 46.9244 48.8789 47.6777  c
48.7688 48.4309 48.7138 49.1736 48.7138 49.9057  c
h
f
newpath
54.5273 49.1367 m
54.5273 48.9560 l
54.9505 48.9495 55.3444 48.8510 55.7089 48.6606  c
56.0735 48.4702 56.4259 48.1373 56.7661 47.6621  c
57.1062 47.1868 57.3431 46.6643 57.4765 46.0947  c
56.9654 46.4235 56.5032 46.5878 56.0898 46.5878  c
55.6243 46.5878 55.2255 46.4080 54.8935 46.0483  c
54.5615 45.6886 54.3955 45.2109 54.3955 44.6152  c
54.3955 44.0358 54.5615 43.5198 54.8935 43.0673  c
55.2939 42.5172 55.8164 42.2421 56.4609 42.2421  c
57.0045 42.2421 57.4700 42.4668 57.8574 42.9160  c
58.3326 43.4726 58.5703 44.1595 58.5703 44.9765  c
58.5703 45.7122 58.3896 46.3982 58.0283 47.0346  c
57.6669 47.6710 57.1640 48.1992 56.5195 48.6191  c
55.9954 48.9641 55.4241 49.1367 54.8056 49.1367  c
h
57.5546 45.7334 m
57.6132 45.3102 57.6425 44.9716 57.6425 44.7177  c
57.6425 44.4020 57.5888 44.0610 57.4814 43.6948  c
57.3740 43.3286 57.2218 43.0478 57.0249 42.8525  c
56.8279 42.6572 56.6041 42.5595 56.3535 42.5595  c
56.0638 42.5595 55.8099 42.6897 55.5918 42.9502  c
55.3737 43.2106 55.2646 43.5979 55.2646 44.1123  c
55.2646 44.7991 55.4095 45.3362 55.6992 45.7236  c
55.9108 46.0035 56.1712 46.1435 56.4804 46.1435  c
56.6302 46.1435 56.8076 46.1077 57.0127 46.0361  c
57.2177 45.9645 57.3984 45.8636 57.5546 45.7334  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 11.0000 m
57.0000 11.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
22.0493 16.8261 m
22.0493 17.7275 l
20.8940 17.7275 l
20.8940 20.0000 l
19.8466 20.0000 l
19.8466 17.7275 l
16.2031 17.7275 l
16.2031 16.9150 l
20.1958 11.2148 l
20.8940 11.2148 l
20.8940 16.8261 l
h
19.8466 16.8261 m
19.8466 12.5542 l
16.8252 16.8261 l
h
24.6250 18.7685 m
24.8238 18.7685 24.9910 18.8373 25.1264 18.9748  c
25.2618 19.1123 25.3295 19.2784 25.3295 19.4731  c
25.3295 19.6678 25.2608 19.8339 25.1232 19.9714  c
24.9857 20.1089 24.8196 20.1777 24.6250 20.1777  c
24.4303 20.1777 24.2642 20.1089 24.1267 19.9714  c
23.9891 19.8339 23.9204 19.6678 23.9204 19.4731  c
23.9204 19.2742 23.9891 19.1071 24.1267 18.9716  c
24.2642 18.8362 24.4303 18.7685 24.6250 18.7685  c
h
f
newpath
36.0860 18.3360 m
35.3840 19.0380 l
33.1480 16.8020 l
30.9120 19.0250 l
30.2100 18.3230 l
32.4460 16.1000 l
30.2100 13.8770 l
30.9120 13.1750 l
33.1480 15.3980 l
35.3840 13.1620 l
36.0860 13.8640 l
33.8500 16.1000 l
h
f
newpath
41.5234 12.2368 m
43.6181 11.2148 l
43.8276 11.2148 l
43.8276 18.4829 l
43.8276 18.9653 43.8477 19.2657 43.8879 19.3842  c
43.9281 19.5027 44.0117 19.5937 44.1386 19.6572  c
44.2656 19.7207 44.5237 19.7566 44.9130 19.7651  c
44.9130 20.0000 l
41.6757 20.0000 l
41.6757 19.7651 l
42.0820 19.7566 42.3444 19.7217 42.4628 19.6604  c
42.5813 19.5990 42.6639 19.5165 42.7104 19.4128  c
42.7570 19.3091 42.7802 18.9991 42.7802 18.4829  c
42.7802 13.8364 l
42.7802 13.2101 42.7591 12.8081 42.7168 12.6303  c
42.6871 12.4949 42.6332 12.3955 42.5549 12.3320  c
42.4766 12.2685 42.3824 12.2368 42.2724 12.2368  c
42.1158 12.2368 41.8979 12.3024 41.6186 12.4335  c
h
47.4697 15.7470 m
47.4697 14.7653 47.6178 13.9200 47.9140 13.2111  c
48.2102 12.5023 48.6038 11.9744 49.0947 11.6274  c
49.4755 11.3523 49.8691 11.2148 50.2753 11.2148  c
50.9355 11.2148 51.5279 11.5512 52.0527 12.2241  c
52.7086 13.0577 53.0366 14.1876 53.0366 15.6137  c
53.0366 16.6124 52.8927 17.4609 52.6049 18.1591  c
52.3172 18.8574 51.9501 19.3641 51.5036 19.6794  c
51.0572 19.9947 50.6266 20.1523 50.2119 20.1523  c
49.3909 20.1523 48.7075 19.6678 48.1616 18.6987  c
47.7003 17.8820 47.4697 16.8981 47.4697 15.7470  c
h
48.7138 15.9057 m
48.7138 17.0906 48.8598 18.0576 49.1518 18.8066  c
49.3930 19.4371 49.7527 19.7524 50.2309 19.7524  c
50.4594 19.7524 50.6964 19.6498 50.9418 19.4445  c
51.1873 19.2393 51.3735 18.8955 51.5004 18.4130  c
51.6951 17.6852 51.7924 16.6590 51.7924 15.3344  c
51.7924 14.3527 51.6909 13.5338 51.4877 12.8779  c
51.3354 12.3912 51.1386 12.0463 50.8974 11.8432  c
50.7239 11.7036 50.5144 11.6337 50.2690 11.6337  c
49.9812 11.6337 49.7252 11.7628 49.5009 12.0210  c
49.1962 12.3722 48.9889 12.9244 48.8789 13.6777  c
48.7688 14.4309 48.7138 15.1736 48.7138 15.9057  c
h
f
newpath
54.5273 15.1367 m
54.5273 14.9560 l
54.9505 14.9495 55.3444 14.8510 55.7089 14.6606  c
56.0735 14.4702 56.4259 14.1373 56.7661 13.6621  c
57.1062 13.1868 57.3431 12.6643 57.4765 12.0947  c
56.9654 12.4235 56.5032 12.5878 56.0898 12.5878  c
55.6243 12.5878 55.2255 12.4080 54.8935 12.0483  c
54.5615 11.6886 54.3955 11.2109 54.3955 10.6152  c
54.3955 10.0358 54.5615 9.51985 54.8935 9.06738  c
55.2939 8.51725 55.8164 8.24218 56.4609 8.24218  c
57.0045 8.24218 57.4700 8.46679 57.8574 8.91601  c
58.3326 9.47265 58.5703 10.1595 58.5703 10.9765  c
58.5703 11.7122 58.3896 12.3982 58.0283 13.0346  c
57.6669 13.6710 57.1640 14.1992 56.5195 14.6191  c
55.9954 14.9641 55.4241 15.1367 54.8056 15.1367  c
h
57.5546 11.7334 m
57.6132 11.3102 57.6425 10.9716 57.6425 10.7177  c
57.6425 10.4020 57.5888 10.0610 57.4814 9.69482  c
57.3740 9.32861 57.2218 9.04785 57.0249 8.85253  c
56.8279 8.65722 56.6041 8.55957 56.3535 8.55957  c
56.0638 8.55957 55.8099 8.68977 55.5918 8.95019  c
55.3737 9.21061 55.2646 9.59798 55.2646 10.1123  c
55.2646 10.7991 55.4095 11.3362 55.6992 11.7236  c
55.9108 12.0035 56.1712 12.1435 56.4804 12.1435  c
56.6302 12.1435 56.8076 12.1077 57.0127 12.0361  c
57.2177 11.9645 57.3984 11.8636 57.5546 11.7334  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 128.000 m
58.0000 128.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 95.0000 m
58.0000 95.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 61.0000 m
58.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
60.0000 28.0000 m
58.0000 28.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 264 190 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
