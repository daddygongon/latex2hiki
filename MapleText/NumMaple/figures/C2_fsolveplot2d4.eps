%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ3“ú 20Žž35•ª02•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
283 283 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
283.000 0 l
283.000 283.000 l
0 283.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 273 273 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
42.0000 2.00746 223.471 263.492 rc
newpath
193.655 182.931 m
193.626 182.519 l
193.540 182.113 l
193.397 181.720 l
193.201 181.347 l
192.953 180.998 l
192.659 180.680 l
192.323 180.397 l
191.949 180.154 l
191.545 179.955 l
191.116 179.803 l
190.669 179.700 l
190.211 179.649 l
189.750 179.649 l
189.292 179.700 l
188.845 179.803 l
188.416 179.955 l
188.012 180.154 l
187.638 180.397 l
187.302 180.680 l
187.008 180.998 l
186.761 181.347 l
186.564 181.720 l
186.421 182.113 l
186.335 182.519 l
186.306 182.931 l
186.335 183.343 l
186.421 183.749 l
186.564 184.142 l
186.761 184.516 l
187.008 184.864 l
187.302 185.183 l
187.638 185.465 l
188.012 185.708 l
188.416 185.907 l
188.845 186.059 l
189.292 186.162 l
189.750 186.214 l
190.211 186.214 l
190.669 186.162 l
191.116 186.059 l
191.545 185.907 l
191.949 185.708 l
192.323 185.465 l
192.659 185.183 l
192.953 184.864 l
193.201 184.516 l
193.397 184.142 l
193.540 183.749 l
193.626 183.343 l
193.655 182.931 l
h
f
newpath
193.655 182.931 m
193.626 182.519 l
193.540 182.113 l
193.397 181.720 l
193.201 181.347 l
192.953 180.998 l
192.659 180.680 l
192.323 180.397 l
191.949 180.154 l
191.545 179.955 l
191.116 179.803 l
190.669 179.700 l
190.211 179.649 l
189.750 179.649 l
189.292 179.700 l
188.845 179.803 l
188.416 179.955 l
188.012 180.154 l
187.638 180.397 l
187.302 180.680 l
187.008 180.998 l
186.761 181.347 l
186.564 181.720 l
186.421 182.113 l
186.335 182.519 l
186.306 182.931 l
186.335 183.343 l
186.421 183.749 l
186.564 184.142 l
186.761 184.516 l
187.008 184.864 l
187.302 185.183 l
187.638 185.465 l
188.012 185.708 l
188.416 185.907 l
188.845 186.059 l
189.292 186.162 l
189.750 186.214 l
190.211 186.214 l
190.669 186.162 l
191.116 186.059 l
191.545 185.907 l
191.949 185.708 l
192.323 185.465 l
192.659 185.183 l
192.953 184.864 l
193.201 184.516 l
193.397 184.142 l
193.540 183.749 l
193.626 183.343 l
193.655 182.931 l
h
S
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
q
42.0000 2.00746 223.471 263.492 rc
newpath
83.4197 50.7119 m
83.3907 50.2997 l
83.3043 49.8939 l
83.1617 49.5011 l
82.9652 49.1274 l
82.7179 48.7787 l
82.4238 48.4604 l
82.0874 48.1776 l
81.7141 47.9349 l
81.3097 47.7359 l
80.8807 47.5838 l
80.4337 47.4811 l
79.9759 47.4294 l
79.5145 47.4294 l
79.0567 47.4811 l
78.6097 47.5838 l
78.1807 47.7359 l
77.7763 47.9349 l
77.4030 48.1776 l
77.0666 48.4604 l
76.7724 48.7787 l
76.5252 49.1274 l
76.3287 49.5011 l
76.1861 49.8939 l
76.0996 50.2997 l
76.0707 50.7119 l
76.0996 51.1241 l
76.1861 51.5298 l
76.3287 51.9227 l
76.5252 52.2964 l
76.7724 52.6452 l
77.0666 52.9634 l
77.4030 53.2462 l
77.7763 53.4889 l
78.1807 53.6879 l
78.6097 53.8400 l
79.0567 53.9427 l
79.5145 53.9945 l
79.9759 53.9945 l
80.4337 53.9427 l
80.8807 53.8400 l
81.3097 53.6879 l
81.7141 53.4889 l
82.0874 53.2462 l
82.4238 52.9634 l
82.7179 52.6452 l
82.9652 52.2964 l
83.1617 51.9227 l
83.3043 51.5298 l
83.3907 51.1241 l
83.4197 50.7119 l
h
f
newpath
83.4197 50.7119 m
83.3907 50.2997 l
83.3043 49.8939 l
83.1617 49.5011 l
82.9652 49.1274 l
82.7179 48.7787 l
82.4238 48.4604 l
82.0874 48.1776 l
81.7141 47.9349 l
81.3097 47.7359 l
80.8807 47.5838 l
80.4337 47.4811 l
79.9759 47.4294 l
79.5145 47.4294 l
79.0567 47.4811 l
78.6097 47.5838 l
78.1807 47.7359 l
77.7763 47.9349 l
77.4030 48.1776 l
77.0666 48.4604 l
76.7724 48.7787 l
76.5252 49.1274 l
76.3287 49.5011 l
76.1861 49.8939 l
76.0996 50.2997 l
76.0707 50.7119 l
76.0996 51.1241 l
76.1861 51.5298 l
76.3287 51.9227 l
76.5252 52.2964 l
76.7724 52.6452 l
77.0666 52.9634 l
77.4030 53.2462 l
77.7763 53.4889 l
78.1807 53.6879 l
78.6097 53.8400 l
79.0567 53.9427 l
79.5145 53.9945 l
79.9759 53.9945 l
80.4337 53.9427 l
80.8807 53.8400 l
81.3097 53.6879 l
81.7141 53.4889 l
82.0874 53.2462 l
82.4238 52.9634 l
82.7179 52.6452 l
82.9652 52.2964 l
83.1617 51.9227 l
83.3043 51.5298 l
83.3907 51.1241 l
83.4197 50.7119 l
h
S
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
q
42.0000 2.00746 223.471 263.492 rc
1.00000 0 0 RG
newpath
43.0000 4.00747 m
45.1677 6.79925 l
47.4437 9.72554 l
49.6336 12.5363 l
51.8526 15.3797 l
54.1339 18.2980 l
56.2998 21.0639 l
58.5614 23.9471 l
60.7677 26.7551 l
62.9640 29.5456 l
65.1563 32.3264 l
67.3880 35.1523 l
69.5632 37.9020 l
71.7563 40.6697 l
73.9974 43.4931 l
76.1894 46.2499 l
78.4617 49.1028 l
80.6505 51.8460 l
82.8584 54.6084 l
85.0710 57.3720 l
87.3190 60.1750 l
89.5655 62.9710 l
91.7713 65.7117 l
93.9483 68.4120 l
96.2174 71.2216 l
98.4246 73.9497 l
100.663 76.7126 l
102.822 79.3716 l
105.042 82.1012 l
107.210 84.7618 l
109.452 87.5094 l
111.647 90.1932 l
113.902 92.9474 l
116.153 95.6906 l
118.297 98.2988 l
120.579 101.070 l
122.816 103.781 l
124.957 106.373 l
127.227 109.114 l
129.456 111.803 l
131.601 114.384 l
133.899 117.145 l
136.059 119.736 l
138.321 122.444 l
140.509 125.059 l
142.698 127.669 l
144.899 130.290 l
147.157 132.974 l
149.364 135.592 l
151.522 138.148 l
153.743 140.774 l
156.056 143.503 l
158.199 146.026 l
160.477 148.705 l
162.622 151.221 l
164.874 153.859 l
167.050 156.403 l
169.349 159.085 l
171.466 161.552 l
173.680 164.126 l
175.907 166.710 l
178.146 169.303 l
180.332 171.831 l
182.633 174.487 l
184.756 176.932 l
187.009 179.522 l
189.283 182.132 l
191.507 184.679 l
193.685 187.169 l
195.874 189.667 l
198.113 192.217 l
200.344 194.753 l
202.490 197.188 l
204.722 199.715 l
206.921 202.200 l
209.148 204.713 l
211.391 207.239 l
213.570 209.687 l
215.830 212.222 l
218.045 214.702 l
220.256 217.171 l
222.502 219.676 l
224.696 222.119 l
226.901 224.567 l
229.110 227.017 l
230.195 228.217 l
232.476 230.740 l
234.713 233.207 l
236.855 235.566 l
237.951 236.771 l
240.160 239.196 l
241.354 240.505 l
243.498 242.852 l
244.645 244.106 l
246.844 246.506 l
249.042 248.900 l
250.219 250.180 l
252.407 252.556 l
254.595 254.928 l
255.685 256.107 l
257.975 258.581 l
260.121 260.896 l
261.261 262.124 l
263.471 264.500 l
S
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
q
42.0000 2.00746 223.471 263.492 rc
0.196078 0.803922 0.196078 RG
newpath
43.0000 50.7119 m
263.471 50.7119 l
S
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
q
42.0000 2.00746 223.471 263.492 rc
newpath
189.981 182.931 m
189.981 50.7119 l
S
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
219 50 14 17 rc
newpath
228.551 62.6090 m
228.533 62.9123 228.438 63.1745 228.265 63.3955  c
228.091 63.6165 227.879 63.7876 227.628 63.9090  c
227.506 63.9696 227.374 64.0216 227.231 64.0650  c
227.088 64.1083 226.943 64.1451 226.796 64.1755  c
226.648 64.2058 226.503 64.2275 226.360 64.2405  c
226.217 64.2535 226.094 64.2600 225.990 64.2600  c
225.522 64.2600 225.086 64.1885 224.683 64.0455  c
224.280 63.9025 223.979 63.7313 223.780 63.5320  c
223.450 63.2026 223.286 62.8126 223.286 62.3620  c
223.286 61.9893 223.403 61.6535 223.637 61.3545  c
223.871 61.0555 224.235 60.8453 224.729 60.7240  c
224.564 60.6546 224.406 60.5810 224.254 60.5030  c
224.102 60.4250 223.968 60.3318 223.851 60.2235  c
223.734 60.1151 223.641 59.9851 223.572 59.8335  c
223.502 59.6818 223.468 59.4976 223.468 59.2810  c
223.468 58.9950 223.550 58.7241 223.715 58.4685  c
223.879 58.2128 224.152 57.9896 224.534 57.7990  c
224.733 57.7036 224.965 57.6256 225.229 57.5650  c
225.493 57.5043 225.795 57.4740 226.133 57.4740  c
226.384 57.4740 226.607 57.4891 226.802 57.5195  c
226.997 57.5498 227.212 57.6256 227.446 57.7470  c
227.680 57.8683 227.855 58.0113 227.972 58.1760  c
228.089 58.3406 228.148 58.4966 228.148 58.6440  c
228.148 58.8173 228.089 58.9625 227.972 59.0795  c
227.855 59.1965 227.719 59.2550 227.563 59.2550  c
227.311 59.2550 227.138 59.1791 227.043 59.0275  c
226.947 58.8758 226.869 58.7046 226.809 58.5140  c
226.757 58.3666 226.653 58.2345 226.497 58.1175  c
226.341 58.0005 226.137 57.9420 225.886 57.9420  c
225.712 57.9420 225.550 57.9766 225.398 58.0460  c
225.246 58.1153 225.114 58.2063 225.002 58.3190  c
224.768 58.5530 224.651 58.8823 224.651 59.3070  c
224.651 59.6363 224.742 59.9115 224.924 60.1325  c
225.106 60.3535 225.396 60.4640 225.795 60.4640  c
225.925 60.4640 226.094 60.4510 226.302 60.4250  c
226.510 60.3990 226.679 60.3860 226.809 60.3860  c
226.982 60.3860 227.108 60.4163 227.186 60.4770  c
227.264 60.5376 227.303 60.6026 227.303 60.6720  c
227.303 60.7586 227.235 60.8475 227.101 60.9385  c
226.967 61.0295 226.809 61.0750 226.627 61.0750  c
226.505 61.0750 226.369 61.0598 226.217 61.0295  c
226.065 60.9991 225.925 60.9840 225.795 60.9840  c
225.457 60.9840 225.181 61.0966 224.969 61.3220  c
224.757 61.5473 224.651 61.8680 224.651 62.2840  c
224.651 62.5006 224.674 62.6696 224.722 62.7910  c
224.770 62.9123 224.854 63.0336 224.976 63.1550  c
225.123 63.3023 225.331 63.4236 225.600 63.5190  c
225.868 63.6143 226.180 63.6620 226.536 63.6620  c
226.934 63.6620 227.281 63.5861 227.576 63.4345  c
227.870 63.2828 228.083 62.9773 228.213 62.5180  c
h
f
Q
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
127 34 14 17 rc
newpath
136.005 45.4780 m
136.005 45.1833 135.974 44.8865 135.914 44.5875  c
135.853 44.2885 135.762 44.0220 135.641 43.7880  c
135.519 43.5540 135.385 43.3373 135.238 43.1380  c
135.090 42.9386 134.917 42.7480 134.718 42.5660  c
134.362 42.6440 134.070 42.7631 133.840 42.9235  c
133.610 43.0838 133.426 43.2745 133.288 43.4955  c
133.149 43.7165 133.051 43.9635 132.995 44.2365  c
132.939 44.5095 132.911 44.8020 132.911 45.1140  c
132.911 45.3740 132.937 45.6491 132.989 45.9395  c
133.041 46.2298 133.119 46.4833 133.223 46.7000  c
133.275 46.8213 133.337 46.9361 133.411 47.0445  c
133.485 47.1528 133.571 47.2525 133.671 47.3435  c
133.771 47.4345 133.886 47.5060 134.016 47.5580  c
134.146 47.6100 134.302 47.6360 134.484 47.6360  c
134.666 47.6360 134.839 47.5991 135.004 47.5255  c
135.168 47.4518 135.311 47.3543 135.433 47.2330  c
135.615 47.0510 135.755 46.8040 135.855 46.4920  c
135.955 46.1800 136.005 45.8420 136.005 45.4780  c
h
137.253 45.0360 m
137.253 45.4086 137.203 45.7466 137.103 46.0500  c
137.003 46.3533 136.867 46.6285 136.694 46.8755  c
136.520 47.1225 136.319 47.3391 136.089 47.5255  c
135.859 47.7118 135.615 47.8700 135.355 48.0000  c
135.181 48.0866 134.995 48.1495 134.796 48.1885  c
134.596 48.2275 134.406 48.2470 134.224 48.2470  c
134.102 48.2470 133.942 48.2318 133.743 48.2015  c
133.543 48.1711 133.366 48.1170 133.210 48.0390  c
132.958 47.9176 132.713 47.7573 132.475 47.5580  c
132.237 47.3586 132.022 47.0683 131.832 46.6870  c
131.710 46.4356 131.628 46.1973 131.585 45.9720  c
131.541 45.7466 131.520 45.5430 131.520 45.3610  c
131.520 44.9796 131.598 44.6005 131.754 44.2235  c
131.910 43.8465 132.122 43.5236 132.391 43.2550  c
132.850 42.7956 133.491 42.4403 134.315 42.1890  c
132.833 40.8370 l
132.642 40.6636 132.501 40.4643 132.410 40.2390  c
132.319 40.0136 132.274 39.8143 132.274 39.6410  c
132.274 39.5110 132.293 39.3940 132.332 39.2900  c
132.371 39.1860 132.451 39.0733 132.573 38.9520  c
132.633 38.8913 132.716 38.8220 132.820 38.7440  c
132.924 38.6660 133.019 38.6053 133.106 38.5620  c
133.253 38.4926 133.415 38.4450 133.593 38.4190  c
133.771 38.3930 133.959 38.3800 134.159 38.3800  c
134.211 38.3800 134.286 38.3821 134.386 38.3865  c
134.486 38.3908 134.592 38.3995 134.705 38.4125  c
134.817 38.4255 134.930 38.4385 135.043 38.4515  c
135.155 38.4645 135.251 38.4840 135.329 38.5100  c
135.823 38.6573 136.178 38.8306 136.395 39.0300  c
136.611 39.2293 136.720 39.4503 136.720 39.6930  c
136.720 39.8403 136.657 39.9638 136.531 40.0635  c
136.405 40.1631 136.273 40.2130 136.135 40.2130  c
136.013 40.2130 135.898 40.1826 135.790 40.1220  c
135.682 40.0613 135.578 39.9876 135.478 39.9010  c
135.378 39.8143 135.281 39.7211 135.186 39.6215  c
135.090 39.5218 135.004 39.4330 134.926 39.3550  c
134.735 39.1643 134.533 39.0408 134.321 38.9845  c
134.109 38.9281 133.951 38.9000 133.847 38.9000  c
133.682 38.9000 133.537 38.9303 133.411 38.9910  c
133.285 39.0516 133.175 39.1296 133.080 39.2250  c
132.958 39.3463 132.898 39.4980 132.898 39.6800  c
132.898 39.8013 132.930 39.9161 132.995 40.0245  c
133.060 40.1328 133.140 40.2346 133.236 40.3300  c
133.435 40.5293 133.649 40.7070 133.879 40.8630  c
134.109 41.0190 134.349 41.1750 134.601 41.3310  c
134.731 41.4090 134.858 41.4848 134.984 41.5585  c
135.110 41.6321 135.238 41.7145 135.368 41.8055  c
135.498 41.8965 135.634 42.0005 135.777 42.1175  c
135.920 42.2345 136.070 42.3710 136.226 42.5270  c
136.529 42.8303 136.776 43.1943 136.967 43.6190  c
137.157 44.0436 137.253 44.5160 137.253 45.0360  c
h
f
Q
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
2 J
0 j
q
newpath
40.0000 67.0000 m
263.471 67.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
147 87 13 15 rc
newpath
152.091 93.4077 m
156.122 93.4077 l
156.122 93.5664 l
151.730 98.1367 l
153.589 98.1367 l
154.029 98.1367 154.309 98.1197 154.427 98.0859  c
154.546 98.0520 154.655 97.9801 154.754 97.8701  c
154.854 97.7600 154.965 97.5612 155.087 97.2734  c
155.322 97.2734 l
154.770 99.0000 l
150.638 99.0000 l
150.638 98.8159 l
155.030 94.2456 l
153.202 94.2456 l
152.817 94.2456 152.584 94.2561 152.504 94.2773  c
152.385 94.3027 152.268 94.3693 152.152 94.4772  c
152.035 94.5852 151.916 94.7640 151.793 95.0136  c
151.552 95.0136 l
h
f
Q
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
43.0000 67.0000 m
43.0000 71.0000 l
S
Q
q
0 J
1 j
newpath
116.000 67.0000 m
116.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
113.469 85.7470 m
113.469 84.7653 113.617 83.9200 113.914 83.2111  c
114.210 82.5023 114.603 81.9744 115.094 81.6274  c
115.475 81.3523 115.869 81.2148 116.275 81.2148  c
116.935 81.2148 117.528 81.5512 118.052 82.2241  c
118.708 83.0577 119.036 84.1876 119.036 85.6137  c
119.036 86.6124 118.892 87.4609 118.605 88.1591  c
118.317 88.8574 117.950 89.3641 117.503 89.6794  c
117.057 89.9947 116.626 90.1523 116.211 90.1523  c
115.391 90.1523 114.707 89.6678 114.161 88.6987  c
113.700 87.8820 113.469 86.8981 113.469 85.7470  c
h
114.713 85.9057 m
114.713 87.0906 114.859 88.0576 115.151 88.8066  c
115.393 89.4371 115.752 89.7524 116.231 89.7524  c
116.459 89.7524 116.696 89.6498 116.941 89.4445  c
117.187 89.2393 117.373 88.8955 117.500 88.4130  c
117.695 87.6852 117.792 86.6590 117.792 85.3344  c
117.792 84.3527 117.690 83.5338 117.487 82.8779  c
117.335 82.3912 117.138 82.0463 116.897 81.8432  c
116.724 81.7036 116.514 81.6337 116.269 81.6337  c
115.981 81.6337 115.725 81.7628 115.501 82.0210  c
115.196 82.3722 114.988 82.9244 114.878 83.6777  c
114.768 84.4309 114.713 85.1736 114.713 85.9057  c
h
121.625 88.7685 m
121.823 88.7685 121.991 88.8373 122.126 88.9748  c
122.261 89.1123 122.329 89.2784 122.329 89.4731  c
122.329 89.6678 122.260 89.8339 122.123 89.9714  c
121.985 90.1089 121.819 90.1777 121.625 90.1777  c
121.430 90.1777 121.264 90.1089 121.126 89.9714  c
120.989 89.8339 120.920 89.6678 120.920 89.4731  c
120.920 89.2742 120.989 89.1071 121.126 88.9716  c
121.264 88.8362 121.430 88.7685 121.625 88.7685  c
h
123.660 83.0302 m
123.905 82.4505 124.215 82.0030 124.590 81.6877  c
124.964 81.3724 125.431 81.2148 125.989 81.2148  c
126.679 81.2148 127.208 81.4391 127.576 81.8877  c
127.856 82.2220 127.995 82.5795 127.995 82.9604  c
127.995 83.5867 127.602 84.2342 126.814 84.9028  c
127.343 85.1101 127.743 85.4064 128.014 85.7915  c
128.285 86.1766 128.420 86.6293 128.420 87.1499  c
128.420 87.8946 128.183 88.5400 127.710 89.0859  c
127.092 89.7968 126.197 90.1523 125.024 90.1523  c
124.445 90.1523 124.050 90.0804 123.841 89.9365  c
123.631 89.7926 123.526 89.6381 123.526 89.4731  c
123.526 89.3504 123.576 89.2425 123.676 89.1494  c
123.775 89.0563 123.895 89.0097 124.034 89.0097  c
124.140 89.0097 124.248 89.0266 124.358 89.0605  c
124.430 89.0817 124.593 89.1589 124.847 89.2922  c
125.101 89.4255 125.276 89.5048 125.374 89.5302  c
125.530 89.5768 125.697 89.6001 125.875 89.6001  c
126.307 89.6001 126.682 89.4329 127.002 89.0986  c
127.321 88.7643 127.481 88.3686 127.481 87.9116  c
127.481 87.5773 127.407 87.2514 127.259 86.9340  c
127.149 86.6971 127.028 86.5172 126.897 86.3945  c
126.715 86.2252 126.465 86.0718 126.148 85.9343  c
125.831 85.7967 125.507 85.7280 125.177 85.7280  c
124.974 85.7280 l
124.974 85.5376 l
125.308 85.4952 125.643 85.3746 125.980 85.1757  c
126.316 84.9768 126.561 84.7377 126.713 84.4585  c
126.865 84.1792 126.941 83.8724 126.941 83.5380  c
126.941 83.1022 126.805 82.7499 126.532 82.4812  c
126.259 82.2124 125.919 82.0781 125.513 82.0781  c
124.857 82.0781 124.309 82.4293 123.869 83.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
190.000 67.0000 m
190.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.469 85.7470 m
186.469 84.7653 186.617 83.9200 186.914 83.2111  c
187.210 82.5023 187.603 81.9744 188.094 81.6274  c
188.475 81.3523 188.869 81.2148 189.275 81.2148  c
189.935 81.2148 190.528 81.5512 191.052 82.2241  c
191.708 83.0577 192.036 84.1876 192.036 85.6137  c
192.036 86.6124 191.892 87.4609 191.605 88.1591  c
191.317 88.8574 190.950 89.3641 190.503 89.6794  c
190.057 89.9947 189.626 90.1523 189.211 90.1523  c
188.391 90.1523 187.707 89.6678 187.161 88.6987  c
186.700 87.8820 186.469 86.8981 186.469 85.7470  c
h
187.713 85.9057 m
187.713 87.0906 187.859 88.0576 188.151 88.8066  c
188.393 89.4371 188.752 89.7524 189.231 89.7524  c
189.459 89.7524 189.696 89.6498 189.941 89.4445  c
190.187 89.2393 190.373 88.8955 190.500 88.4130  c
190.695 87.6852 190.792 86.6590 190.792 85.3344  c
190.792 84.3527 190.690 83.5338 190.487 82.8779  c
190.335 82.3912 190.138 82.0463 189.897 81.8432  c
189.724 81.7036 189.514 81.6337 189.269 81.6337  c
188.981 81.6337 188.725 81.7628 188.501 82.0210  c
188.196 82.3722 187.988 82.9244 187.878 83.6777  c
187.768 84.4309 187.713 85.1736 187.713 85.9057  c
h
194.625 88.7685 m
194.823 88.7685 194.991 88.8373 195.126 88.9748  c
195.261 89.1123 195.329 89.2784 195.329 89.4731  c
195.329 89.6678 195.260 89.8339 195.123 89.9714  c
194.985 90.1089 194.819 90.1777 194.625 90.1777  c
194.430 90.1777 194.264 90.1089 194.126 89.9714  c
193.989 89.8339 193.920 89.6678 193.920 89.4731  c
193.920 89.2742 193.989 89.1071 194.126 88.9716  c
194.264 88.8362 194.430 88.7685 194.625 88.7685  c
h
202.049 86.8261 m
202.049 87.7275 l
200.894 87.7275 l
200.894 90.0000 l
199.846 90.0000 l
199.846 87.7275 l
196.203 87.7275 l
196.203 86.9150 l
200.195 81.2148 l
200.894 81.2148 l
200.894 86.8261 l
h
199.846 86.8261 m
199.846 82.5542 l
196.825 86.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
263.000 67.0000 m
263.000 71.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
260.469 85.7470 m
260.469 84.7653 260.617 83.9200 260.914 83.2111  c
261.210 82.5023 261.603 81.9744 262.094 81.6274  c
262.475 81.3523 262.869 81.2148 263.275 81.2148  c
263.935 81.2148 264.528 81.5512 265.052 82.2241  c
265.708 83.0577 266.036 84.1876 266.036 85.6137  c
266.036 86.6124 265.892 87.4609 265.605 88.1591  c
265.317 88.8574 264.950 89.3641 264.503 89.6794  c
264.057 89.9947 263.626 90.1523 263.211 90.1523  c
262.391 90.1523 261.707 89.6678 261.161 88.6987  c
260.700 87.8820 260.469 86.8981 260.469 85.7470  c
h
261.713 85.9057 m
261.713 87.0906 261.859 88.0576 262.151 88.8066  c
262.393 89.4371 262.752 89.7524 263.231 89.7524  c
263.459 89.7524 263.696 89.6498 263.941 89.4445  c
264.187 89.2393 264.373 88.8955 264.500 88.4130  c
264.695 87.6852 264.792 86.6590 264.792 85.3344  c
264.792 84.3527 264.690 83.5338 264.487 82.8779  c
264.335 82.3912 264.138 82.0463 263.897 81.8432  c
263.724 81.7036 263.514 81.6337 263.269 81.6337  c
262.981 81.6337 262.725 81.7628 262.501 82.0210  c
262.196 82.3722 261.988 82.9244 261.878 83.6777  c
261.768 84.4309 261.713 85.1736 261.713 85.9057  c
h
268.625 88.7685 m
268.823 88.7685 268.991 88.8373 269.126 88.9748  c
269.261 89.1123 269.329 89.2784 269.329 89.4731  c
269.329 89.6678 269.260 89.8339 269.123 89.9714  c
268.985 90.1089 268.819 90.1777 268.625 90.1777  c
268.430 90.1777 268.264 90.1089 268.126 89.9714  c
267.989 89.8339 267.920 89.6678 267.920 89.4731  c
267.920 89.2742 267.989 89.1071 268.126 88.9716  c
268.264 88.8362 268.430 88.7685 268.625 88.7685  c
h
275.643 81.3925 m
275.147 82.4716 l
272.558 82.4716 l
271.993 83.6269 l
273.114 83.7919 274.003 84.2088 274.659 84.8774  c
275.222 85.4529 275.503 86.1300 275.503 86.9086  c
275.503 87.3614 275.411 87.7804 275.227 88.1655  c
275.043 88.5506 274.811 88.8785 274.532 89.1494  c
274.252 89.4202 273.941 89.6381 273.599 89.8032  c
273.112 90.0359 272.613 90.1523 272.101 90.1523  c
271.584 90.1523 271.209 90.0645 270.974 89.8889  c
270.739 89.7133 270.622 89.5196 270.622 89.3081  c
270.622 89.1896 270.670 89.0848 270.768 88.9939  c
270.865 88.9029 270.988 88.8574 271.136 88.8574  c
271.246 88.8574 271.342 88.8743 271.425 88.9082  c
271.507 88.9420 271.648 89.0288 271.847 89.1684  c
272.164 89.3885 272.486 89.4985 272.812 89.4985  c
273.307 89.4985 273.741 89.3112 274.116 88.9367  c
274.491 88.5622 274.678 88.1062 274.678 87.5688  c
274.678 87.0483 274.511 86.5627 274.176 86.1120  c
273.842 85.6613 273.381 85.3133 272.793 85.0678  c
272.331 84.8774 271.703 84.7674 270.907 84.7377  c
272.558 81.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
80.0000 67.0000 m
80.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
153.000 67.0000 m
153.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
227.000 67.0000 m
227.000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
40.0000 264.500 m
40.0000 4.00747 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 127 8 15 rc
Q
cliprestore
newpath
0 0 m
0 273.000 l
273.000 273.000 l
273.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
40.0000 265.000 m
36.0000 265.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 263 7 13 rc
newpath
25.7900 270.438 m
17.2100 270.438 l
17.2100 269.762 l
25.7900 269.762 l
h
f
Q
newpath
24.4697 269.747 m
24.4697 268.765 24.6178 267.920 24.9140 267.211  c
25.2102 266.502 25.6038 265.974 26.0947 265.627  c
26.4755 265.352 26.8691 265.214 27.2753 265.214  c
27.9355 265.214 28.5279 265.551 29.0527 266.224  c
29.7086 267.057 30.0366 268.187 30.0366 269.613  c
30.0366 270.612 29.8927 271.460 29.6049 272.159  c
29.3172 272.857 28.9501 273.364 28.5036 273.679  c
28.0572 273.994 27.6266 274.152 27.2119 274.152  c
26.3909 274.152 25.7075 273.667 25.1616 272.698  c
24.7003 271.882 24.4697 270.898 24.4697 269.747  c
h
25.7138 269.905 m
25.7138 271.090 25.8598 272.057 26.1518 272.806  c
26.3930 273.437 26.7527 273.752 27.2309 273.752  c
27.4594 273.752 27.6964 273.649 27.9418 273.444  c
28.1873 273.239 28.3735 272.895 28.5004 272.413  c
28.6951 271.685 28.7924 270.659 28.7924 269.334  c
28.7924 268.352 28.6909 267.533 28.4877 266.877  c
28.3354 266.391 28.1386 266.046 27.8974 265.843  c
27.7239 265.703 27.5144 265.633 27.2690 265.633  c
26.9812 265.633 26.7252 265.762 26.5009 266.021  c
26.1962 266.372 25.9889 266.924 25.8789 267.677  c
25.7688 268.431 25.7138 269.173 25.7138 269.905  c
h
32.6250 272.768 m
32.8238 272.768 32.9910 272.837 33.1264 272.974  c
33.2618 273.112 33.3295 273.278 33.3295 273.473  c
33.3295 273.667 33.2608 273.833 33.1232 273.971  c
32.9857 274.109 32.8196 274.177 32.6250 274.177  c
32.4303 274.177 32.2642 274.109 32.1267 273.971  c
31.9891 273.833 31.9204 273.667 31.9204 273.473  c
31.9204 273.274 31.9891 273.107 32.1267 272.971  c
32.2642 272.836 32.4303 272.768 32.6250 272.768  c
h
34.6601 267.030 m
34.9056 266.450 35.2155 266.003 35.5900 265.687  c
35.9646 265.372 36.4311 265.214 36.9897 265.214  c
37.6795 265.214 38.2085 265.439 38.5766 265.887  c
38.8559 266.222 38.9956 266.579 38.9956 266.960  c
38.9956 267.586 38.6020 268.234 37.8149 268.902  c
38.3439 269.110 38.7438 269.406 39.0146 269.791  c
39.2854 270.176 39.4209 270.629 39.4209 271.149  c
39.4209 271.894 39.1839 272.540 38.7099 273.085  c
38.0921 273.796 37.1971 274.152 36.0249 274.152  c
35.4451 274.152 35.0505 274.080 34.8410 273.936  c
34.6315 273.792 34.5268 273.638 34.5268 273.473  c
34.5268 273.350 34.5765 273.242 34.6760 273.149  c
34.7754 273.056 34.8950 273.009 35.0346 273.009  c
35.1404 273.009 35.2483 273.026 35.3584 273.060  c
35.4303 273.081 35.5932 273.158 35.8471 273.292  c
36.1010 273.425 36.2766 273.504 36.3740 273.530  c
36.5306 273.576 36.6977 273.600 36.8754 273.600  c
37.3071 273.600 37.6827 273.432 38.0022 273.098  c
38.3217 272.764 38.4814 272.368 38.4814 271.911  c
38.4814 271.577 38.4073 271.251 38.2592 270.934  c
38.1492 270.697 38.0286 270.517 37.8974 270.394  c
37.7154 270.225 37.4658 270.071 37.1484 269.934  c
36.8310 269.796 36.5073 269.728 36.1772 269.728  c
35.9741 269.728 l
35.9741 269.537 l
36.3084 269.495 36.6438 269.374 36.9802 269.175  c
37.3166 268.976 37.5610 268.737 37.7133 268.458  c
37.8657 268.179 37.9418 267.872 37.9418 267.538  c
37.9418 267.102 37.8054 266.749 37.5324 266.481  c
37.2595 266.212 36.9199 266.078 36.5136 266.078  c
35.8577 266.078 35.3097 266.429 34.8696 267.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 199.000 m
36.0000 199.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 197 7 13 rc
newpath
25.7900 204.438 m
17.2100 204.438 l
17.2100 203.762 l
25.7900 203.762 l
h
f
Q
newpath
24.4697 203.747 m
24.4697 202.765 24.6178 201.920 24.9140 201.211  c
25.2102 200.502 25.6038 199.974 26.0947 199.627  c
26.4755 199.352 26.8691 199.214 27.2753 199.214  c
27.9355 199.214 28.5279 199.551 29.0527 200.224  c
29.7086 201.057 30.0366 202.187 30.0366 203.613  c
30.0366 204.612 29.8927 205.460 29.6049 206.159  c
29.3172 206.857 28.9501 207.364 28.5036 207.679  c
28.0572 207.994 27.6266 208.152 27.2119 208.152  c
26.3909 208.152 25.7075 207.667 25.1616 206.698  c
24.7003 205.882 24.4697 204.898 24.4697 203.747  c
h
25.7138 203.905 m
25.7138 205.090 25.8598 206.057 26.1518 206.806  c
26.3930 207.437 26.7527 207.752 27.2309 207.752  c
27.4594 207.752 27.6964 207.649 27.9418 207.444  c
28.1873 207.239 28.3735 206.895 28.5004 206.413  c
28.6951 205.685 28.7924 204.659 28.7924 203.334  c
28.7924 202.352 28.6909 201.533 28.4877 200.877  c
28.3354 200.391 28.1386 200.046 27.8974 199.843  c
27.7239 199.703 27.5144 199.633 27.2690 199.633  c
26.9812 199.633 26.7252 199.762 26.5009 200.021  c
26.1962 200.372 25.9889 200.924 25.8789 201.677  c
25.7688 202.431 25.7138 203.173 25.7138 203.905  c
h
32.6250 206.768 m
32.8238 206.768 32.9910 206.837 33.1264 206.974  c
33.2618 207.112 33.3295 207.278 33.3295 207.473  c
33.3295 207.667 33.2608 207.833 33.1232 207.971  c
32.9857 208.109 32.8196 208.177 32.6250 208.177  c
32.4303 208.177 32.2642 208.109 32.1267 207.971  c
31.9891 207.833 31.9204 207.667 31.9204 207.473  c
31.9204 207.274 31.9891 207.107 32.1267 206.971  c
32.2642 206.836 32.4303 206.768 32.6250 206.768  c
h
39.9604 206.343 m
39.3574 208.000 l
34.2793 208.000 l
34.2793 207.765 l
35.7731 206.402 36.8247 205.289 37.4340 204.426  c
38.0434 203.563 38.3481 202.773 38.3481 202.058  c
38.3481 201.512 38.1809 201.064 37.8466 200.712  c
37.5123 200.361 37.1124 200.186 36.6469 200.186  c
36.2238 200.186 35.8439 200.309 35.5075 200.557  c
35.1711 200.804 34.9225 201.167 34.7617 201.646  c
34.5268 201.646 l
34.6326 200.863 34.9045 200.262 35.3425 199.843  c
35.7805 199.424 36.3274 199.214 36.9834 199.214  c
37.6816 199.214 38.2645 199.439 38.7321 199.887  c
39.1997 200.336 39.4335 200.865 39.4335 201.474  c
39.4335 201.910 39.3320 202.346 39.1289 202.782  c
38.8157 203.467 38.3079 204.193 37.6054 204.959  c
36.5517 206.110 35.8937 206.804 35.6313 207.041  c
37.8784 207.041 l
38.3354 207.041 38.6560 207.024 38.8400 206.990  c
39.0241 206.956 39.1902 206.888 39.3383 206.784  c
39.4864 206.680 39.6155 206.533 39.7255 206.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 133.000 m
36.0000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
15 131 7 13 rc
newpath
25.7900 138.438 m
17.2100 138.438 l
17.2100 137.762 l
25.7900 137.762 l
h
f
Q
newpath
24.4697 137.747 m
24.4697 136.765 24.6178 135.920 24.9140 135.211  c
25.2102 134.502 25.6038 133.974 26.0947 133.627  c
26.4755 133.352 26.8691 133.214 27.2753 133.214  c
27.9355 133.214 28.5279 133.551 29.0527 134.224  c
29.7086 135.057 30.0366 136.187 30.0366 137.613  c
30.0366 138.612 29.8927 139.460 29.6049 140.159  c
29.3172 140.857 28.9501 141.364 28.5036 141.679  c
28.0572 141.994 27.6266 142.152 27.2119 142.152  c
26.3909 142.152 25.7075 141.667 25.1616 140.698  c
24.7003 139.882 24.4697 138.898 24.4697 137.747  c
h
25.7138 137.905 m
25.7138 139.090 25.8598 140.057 26.1518 140.806  c
26.3930 141.437 26.7527 141.752 27.2309 141.752  c
27.4594 141.752 27.6964 141.649 27.9418 141.444  c
28.1873 141.239 28.3735 140.895 28.5004 140.413  c
28.6951 139.685 28.7924 138.659 28.7924 137.334  c
28.7924 136.352 28.6909 135.533 28.4877 134.877  c
28.3354 134.391 28.1386 134.046 27.8974 133.843  c
27.7239 133.703 27.5144 133.633 27.2690 133.633  c
26.9812 133.633 26.7252 133.762 26.5009 134.021  c
26.1962 134.372 25.9889 134.924 25.8789 135.677  c
25.7688 136.431 25.7138 137.173 25.7138 137.905  c
h
32.6250 140.768 m
32.8238 140.768 32.9910 140.837 33.1264 140.974  c
33.2618 141.112 33.3295 141.278 33.3295 141.473  c
33.3295 141.667 33.2608 141.833 33.1232 141.971  c
32.9857 142.109 32.8196 142.177 32.6250 142.177  c
32.4303 142.177 32.2642 142.109 32.1267 141.971  c
31.9891 141.833 31.9204 141.667 31.9204 141.473  c
31.9204 141.274 31.9891 141.107 32.1267 140.971  c
32.2642 140.836 32.4303 140.768 32.6250 140.768  c
h
35.5234 134.236 m
37.6181 133.214 l
37.8276 133.214 l
37.8276 140.482 l
37.8276 140.965 37.8477 141.265 37.8879 141.384  c
37.9281 141.502 38.0117 141.593 38.1386 141.657  c
38.2656 141.720 38.5237 141.756 38.9130 141.765  c
38.9130 142.000 l
35.6757 142.000 l
35.6757 141.765 l
36.0820 141.756 36.3444 141.721 36.4628 141.660  c
36.5813 141.599 36.6639 141.516 36.7104 141.412  c
36.7570 141.309 36.7802 140.999 36.7802 140.482  c
36.7802 135.836 l
36.7802 135.210 36.7591 134.808 36.7168 134.630  c
36.6871 134.495 36.6332 134.395 36.5549 134.332  c
36.4766 134.268 36.3824 134.236 36.2724 134.236  c
36.1158 134.236 35.8979 134.302 35.6186 134.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 67.0000 m
36.0000 67.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
34.4697 72.7470 m
34.4697 71.7653 34.6178 70.9200 34.9140 70.2111  c
35.2102 69.5023 35.6038 68.9744 36.0947 68.6274  c
36.4755 68.3523 36.8691 68.2148 37.2753 68.2148  c
37.9355 68.2148 38.5279 68.5512 39.0527 69.2241  c
39.7086 70.0577 40.0366 71.1876 40.0366 72.6137  c
40.0366 73.6124 39.8927 74.4609 39.6049 75.1591  c
39.3172 75.8574 38.9501 76.3641 38.5036 76.6794  c
38.0572 76.9947 37.6266 77.1523 37.2119 77.1523  c
36.3909 77.1523 35.7075 76.6678 35.1616 75.6987  c
34.7003 74.8820 34.4697 73.8981 34.4697 72.7470  c
h
35.7138 72.9057 m
35.7138 74.0906 35.8598 75.0576 36.1518 75.8066  c
36.3930 76.4371 36.7527 76.7524 37.2309 76.7524  c
37.4594 76.7524 37.6964 76.6498 37.9418 76.4445  c
38.1873 76.2393 38.3735 75.8955 38.5004 75.4130  c
38.6951 74.6852 38.7924 73.6590 38.7924 72.3344  c
38.7924 71.3527 38.6909 70.5338 38.4877 69.8779  c
38.3354 69.3912 38.1386 69.0463 37.8974 68.8432  c
37.7239 68.7036 37.5144 68.6337 37.2690 68.6337  c
36.9812 68.6337 36.7252 68.7628 36.5009 69.0210  c
36.1962 69.3722 35.9889 69.9244 35.8789 70.6777  c
35.7688 71.4309 35.7138 72.1736 35.7138 72.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 232.000 m
38.0000 232.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 166.000 m
38.0000 166.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 100.000 m
38.0000 100.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 34.0000 m
38.0000 34.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 283 283 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
