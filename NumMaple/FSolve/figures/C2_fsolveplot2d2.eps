%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 113 575 678
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N8ŒŽ3“ú 20Žž35•ª02•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
328 333 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
328.000 0 l
328.000 333.000 l
0 333.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 318 323 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
newpath
46.0000 321.000 m
46.0000 8.00000 l
S
newpath
78.8095 321.000 m
78.8095 8.00000 l
S
newpath
111.619 321.000 m
111.619 8.00000 l
S
newpath
144.428 321.000 m
144.428 8.00000 l
S
newpath
177.238 321.000 m
177.238 8.00000 l
S
newpath
210.047 321.000 m
210.047 8.00000 l
S
newpath
242.857 321.000 m
242.857 8.00000 l
S
newpath
275.666 321.000 m
275.666 8.00000 l
S
newpath
308.476 321.000 m
308.476 8.00000 l
S
0.913725 0.913725 0.913725 RG
newpath
62.4047 321.000 m
62.4047 8.01864 l
S
newpath
95.2142 321.000 m
95.2142 8.01864 l
S
newpath
128.023 321.000 m
128.023 8.01864 l
S
newpath
160.833 321.000 m
160.833 8.01864 l
S
newpath
193.642 321.000 m
193.642 8.01864 l
S
newpath
226.452 321.000 m
226.452 8.01864 l
S
newpath
259.261 321.000 m
259.261 8.01864 l
S
newpath
292.071 321.000 m
292.071 8.01864 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
46.0000 321.000 m
46.0000 8.00000 l
S
newpath
78.8095 321.000 m
78.8095 8.00000 l
S
newpath
111.619 321.000 m
111.619 8.00000 l
S
newpath
144.428 321.000 m
144.428 8.00000 l
S
newpath
177.238 321.000 m
177.238 8.00000 l
S
newpath
210.047 321.000 m
210.047 8.00000 l
S
newpath
242.857 321.000 m
242.857 8.00000 l
S
newpath
275.666 321.000 m
275.666 8.00000 l
S
newpath
308.476 321.000 m
308.476 8.00000 l
S
0.913725 0.913725 0.913725 RG
newpath
62.4047 321.000 m
62.4047 8.01864 l
S
newpath
95.2142 321.000 m
95.2142 8.01864 l
S
newpath
128.023 321.000 m
128.023 8.01864 l
S
newpath
160.833 321.000 m
160.833 8.01864 l
S
newpath
193.642 321.000 m
193.642 8.01864 l
S
newpath
226.452 321.000 m
226.452 8.01864 l
S
newpath
259.261 321.000 m
259.261 8.01864 l
S
newpath
292.071 321.000 m
292.071 8.01864 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
46.0000 313.664 m
308.000 313.664 l
S
newpath
46.0000 252.535 m
308.000 252.535 l
S
newpath
46.0000 191.406 m
308.000 191.406 l
S
newpath
46.0000 130.277 m
308.000 130.277 l
S
newpath
46.0000 69.1478 m
308.000 69.1478 l
S
newpath
46.0000 8.01864 m
308.000 8.01864 l
S
0.913725 0.913725 0.913725 RG
newpath
46.0000 301.438 m
308.476 301.438 l
S
newpath
46.0000 289.212 m
308.476 289.212 l
S
newpath
46.0000 276.987 m
308.476 276.987 l
S
newpath
46.0000 264.761 m
308.476 264.761 l
S
newpath
46.0000 240.309 m
308.476 240.309 l
S
newpath
46.0000 228.083 m
308.476 228.083 l
S
newpath
46.0000 215.857 m
308.476 215.857 l
S
newpath
46.0000 203.632 m
308.476 203.632 l
S
newpath
46.0000 179.180 m
308.476 179.180 l
S
newpath
46.0000 166.954 m
308.476 166.954 l
S
newpath
46.0000 154.728 m
308.476 154.728 l
S
newpath
46.0000 142.502 m
308.476 142.502 l
S
newpath
46.0000 118.051 m
308.476 118.051 l
S
newpath
46.0000 105.825 m
308.476 105.825 l
S
newpath
46.0000 93.5994 m
308.476 93.5994 l
S
newpath
46.0000 81.3736 m
308.476 81.3736 l
S
newpath
46.0000 56.9220 m
308.476 56.9220 l
S
newpath
46.0000 44.6961 m
308.476 44.6961 l
S
newpath
46.0000 32.4703 m
308.476 32.4703 l
S
newpath
46.0000 20.2444 m
308.476 20.2444 l
S
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
newpath
46.0000 313.664 m
308.000 313.664 l
S
newpath
46.0000 252.535 m
308.000 252.535 l
S
newpath
46.0000 191.406 m
308.000 191.406 l
S
newpath
46.0000 130.277 m
308.000 130.277 l
S
newpath
46.0000 69.1478 m
308.000 69.1478 l
S
newpath
46.0000 8.01864 m
308.000 8.01864 l
S
0.913725 0.913725 0.913725 RG
newpath
46.0000 301.438 m
308.476 301.438 l
S
newpath
46.0000 289.212 m
308.476 289.212 l
S
newpath
46.0000 276.987 m
308.476 276.987 l
S
newpath
46.0000 264.761 m
308.476 264.761 l
S
newpath
46.0000 240.309 m
308.476 240.309 l
S
newpath
46.0000 228.083 m
308.476 228.083 l
S
newpath
46.0000 215.857 m
308.476 215.857 l
S
newpath
46.0000 203.632 m
308.476 203.632 l
S
newpath
46.0000 179.180 m
308.476 179.180 l
S
newpath
46.0000 166.954 m
308.476 166.954 l
S
newpath
46.0000 154.728 m
308.476 154.728 l
S
newpath
46.0000 142.502 m
308.476 142.502 l
S
newpath
46.0000 118.051 m
308.476 118.051 l
S
newpath
46.0000 105.825 m
308.476 105.825 l
S
newpath
46.0000 93.5994 m
308.476 93.5994 l
S
newpath
46.0000 81.3736 m
308.476 81.3736 l
S
newpath
46.0000 56.9220 m
308.476 56.9220 l
S
newpath
46.0000 44.6961 m
308.476 44.6961 l
S
newpath
46.0000 32.4703 m
308.476 32.4703 l
S
newpath
46.0000 20.2444 m
308.476 20.2444 l
S
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
45.0000 6.01863 265.476 315.981 rc
newpath
46.0000 8.01864 m
47.3799 10.0733 l
48.5807 11.8577 l
49.9310 13.8604 l
51.2903 15.8722 l
52.6431 17.8703 l
53.8974 19.7191 l
55.1961 21.6296 l
56.5392 23.6015 l
57.8780 25.5629 l
59.2552 27.5762 l
60.4681 29.3460 l
61.8337 31.3344 l
63.2048 33.3266 l
64.5261 35.2425 l
65.7261 36.9789 l
67.1529 39.0393 l
68.3616 40.7812 l
69.7675 42.8032 l
71.0121 44.5892 l
72.3775 46.5448 l
73.6778 48.4030 l
75.0345 50.3378 l
76.2803 52.1108 l
77.6241 54.0193 l
79.0199 55.9974 l
80.2350 57.7157 l
81.5473 59.5677 l
82.9031 61.4769 l
84.2295 63.3407 l
85.5128 65.1402 l
86.9377 67.1338 l
88.2180 68.9213 l
89.5850 70.8256 l
90.8237 72.5476 l
92.1780 74.4262 l
93.4522 76.1900 l
94.7842 78.0297 l
96.0864 79.8245 l
97.4498 81.6993 l
98.7628 83.5011 l
100.105 85.3395 l
101.437 87.1587 l
102.660 88.8268 l
104.063 90.7344 l
105.317 92.4368 l
106.655 94.2480 l
107.935 95.9778 l
109.356 97.8941 l
110.587 99.5498 l
111.984 101.424 l
113.257 103.129 l
114.650 104.990 l
115.851 106.592 l
117.220 108.413 l
118.542 110.167 l
119.863 111.917 l
121.179 113.656 l
122.443 115.323 l
123.810 117.121 l
125.113 118.830 l
126.484 120.625 l
127.725 122.247 l
129.097 124.034 l
130.411 125.743 l
131.722 127.443 l
133.091 129.215 l
134.351 130.843 l
135.643 132.507 l
137.069 134.339 l
138.359 135.995 l
139.680 137.683 l
141.022 139.397 l
142.256 140.968 l
143.572 142.640 l
144.878 144.294 l
146.274 146.060 l
147.506 147.614 l
148.928 149.404 l
150.211 151.014 l
151.481 152.604 l
152.846 154.310 l
154.217 156.018 l
155.464 157.569 l
156.789 159.212 l
158.081 160.811 l
159.482 162.541 l
160.695 164.033 l
162.087 165.744 l
163.396 167.348 l
164.692 168.933 l
165.990 170.515 l
167.313 172.124 l
168.716 173.826 l
170.002 175.383 l
171.271 176.915 l
172.628 178.550 l
173.982 180.177 l
175.198 181.633 l
176.638 183.354 l
177.842 184.791 l
179.251 186.467 l
180.596 188.062 l
181.797 189.483 l
183.147 191.077 l
184.506 192.678 l
185.859 194.266 l
187.113 195.736 l
188.412 197.253 l
189.755 198.819 l
191.094 200.375 l
192.471 201.972 l
193.684 203.374 l
195.050 204.949 l
196.421 206.527 l
197.742 208.043 l
198.942 209.416 l
200.369 211.045 l
201.578 212.421 l
202.984 214.017 l
204.228 215.427 l
205.594 216.969 l
206.894 218.434 l
208.251 219.958 l
209.496 221.354 l
210.840 222.856 l
212.236 224.412 l
213.451 225.762 l
214.763 227.217 l
216.119 228.716 l
217.446 230.179 l
218.729 231.590 l
220.154 233.152 l
221.434 234.552 l
222.801 236.043 l
224.040 237.390 l
225.394 238.859 l
226.668 240.237 l
228.000 241.674 l
229.303 243.075 l
230.666 244.537 l
231.979 245.941 l
233.322 247.374 l
234.653 248.790 l
235.877 250.088 l
237.279 251.571 l
238.534 252.894 l
239.871 254.300 l
241.151 255.643 l
242.573 257.129 l
243.803 258.412 l
245.200 259.864 l
246.473 261.184 l
247.866 262.624 l
249.068 263.862 l
250.436 265.268 l
251.758 266.623 l
253.079 267.973 l
254.395 269.313 l
255.660 270.598 l
257.027 271.982 l
258.330 273.297 l
259.701 274.677 l
260.942 275.923 l
262.313 277.296 l
263.627 278.607 l
264.938 279.910 l
266.307 281.268 l
267.568 282.515 l
268.859 283.788 l
270.285 285.189 l
271.576 286.453 l
272.896 287.743 l
274.239 289.050 l
275.473 290.248 l
276.788 291.521 l
278.094 292.781 l
279.491 294.124 l
280.723 295.305 l
282.145 296.664 l
283.428 297.887 l
284.698 299.092 l
286.063 300.385 l
287.434 301.679 l
288.681 302.852 l
290.005 304.094 l
291.298 305.302 l
292.699 306.608 l
293.911 307.734 l
295.304 309.023 l
296.613 310.231 l
297.909 311.423 l
299.206 312.612 l
300.530 313.822 l
301.932 315.099 l
303.218 316.266 l
304.488 317.415 l
305.845 318.639 l
307.199 319.856 l
308.476 321.000 l
S
cliprestore
newpath
0 0 m
0 323.000 l
318.000 323.000 l
318.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
46.0000 130.000 m
308.476 130.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
171 152 13 15 rc
newpath
176.091 158.407 m
180.122 158.407 l
180.122 158.566 l
175.730 163.136 l
177.589 163.136 l
178.029 163.136 178.309 163.119 178.427 163.085  c
178.546 163.052 178.655 162.980 178.754 162.870  c
178.854 162.760 178.965 162.561 179.087 162.273  c
179.322 162.273 l
178.770 164.000 l
174.638 164.000 l
174.638 163.815 l
179.030 159.245 l
177.202 159.245 l
176.817 159.245 176.584 159.256 176.504 159.277  c
176.385 159.302 176.268 159.369 176.152 159.477  c
176.035 159.585 175.916 159.764 175.793 160.013  c
175.552 160.013 l
h
f
Q
cliprestore
newpath
0 0 m
0 323.000 l
318.000 323.000 l
318.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
46.0000 130.000 m
46.0000 135.000 l
S
Q
q
0 J
1 j
newpath
79.0000 130.000 m
79.0000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
75.4697 148.747 m
75.4697 147.765 75.6178 146.920 75.9140 146.211  c
76.2102 145.502 76.6038 144.974 77.0947 144.627  c
77.4755 144.352 77.8691 144.214 78.2753 144.214  c
78.9355 144.214 79.5279 144.551 80.0527 145.224  c
80.7086 146.057 81.0366 147.187 81.0366 148.613  c
81.0366 149.612 80.8927 150.460 80.6049 151.159  c
80.3172 151.857 79.9501 152.364 79.5036 152.679  c
79.0572 152.994 78.6266 153.152 78.2119 153.152  c
77.3909 153.152 76.7075 152.667 76.1616 151.698  c
75.7003 150.882 75.4697 149.898 75.4697 148.747  c
h
76.7138 148.905 m
76.7138 150.090 76.8598 151.057 77.1518 151.806  c
77.3930 152.437 77.7527 152.752 78.2309 152.752  c
78.4594 152.752 78.6964 152.649 78.9418 152.444  c
79.1873 152.239 79.3735 151.895 79.5004 151.413  c
79.6951 150.685 79.7924 149.659 79.7924 148.334  c
79.7924 147.352 79.6909 146.533 79.4877 145.877  c
79.3354 145.391 79.1386 145.046 78.8974 144.843  c
78.7239 144.703 78.5144 144.633 78.2690 144.633  c
77.9812 144.633 77.7252 144.762 77.5009 145.021  c
77.1962 145.372 76.9889 145.924 76.8789 146.677  c
76.7688 147.431 76.7138 148.173 76.7138 148.905  c
h
83.6250 151.768 m
83.8238 151.768 83.9910 151.837 84.1264 151.974  c
84.2618 152.112 84.3295 152.278 84.3295 152.473  c
84.3295 152.667 84.2608 152.833 84.1232 152.971  c
83.9857 153.109 83.8196 153.177 83.6250 153.177  c
83.4303 153.177 83.2642 153.109 83.1267 152.971  c
82.9891 152.833 82.9204 152.667 82.9204 152.473  c
82.9204 152.274 82.9891 152.107 83.1267 151.971  c
83.2642 151.836 83.4303 151.768 83.6250 151.768  c
h
86.5234 145.236 m
88.6181 144.214 l
88.8276 144.214 l
88.8276 151.482 l
88.8276 151.965 88.8477 152.265 88.8879 152.384  c
88.9281 152.502 89.0117 152.593 89.1386 152.657  c
89.2656 152.720 89.5237 152.756 89.9130 152.765  c
89.9130 153.000 l
86.6757 153.000 l
86.6757 152.765 l
87.0820 152.756 87.3444 152.721 87.4628 152.660  c
87.5813 152.599 87.6639 152.516 87.7104 152.412  c
87.7570 152.309 87.7802 151.999 87.7802 151.482  c
87.7802 146.836 l
87.7802 146.210 87.7591 145.808 87.7168 145.630  c
87.6871 145.495 87.6332 145.395 87.5549 145.332  c
87.4766 145.268 87.3824 145.236 87.2724 145.236  c
87.1158 145.236 86.8979 145.302 86.6186 145.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
112.000 130.000 m
112.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
108.469 148.747 m
108.469 147.765 108.617 146.920 108.914 146.211  c
109.210 145.502 109.603 144.974 110.094 144.627  c
110.475 144.352 110.869 144.214 111.275 144.214  c
111.935 144.214 112.528 144.551 113.052 145.224  c
113.708 146.057 114.036 147.187 114.036 148.613  c
114.036 149.612 113.892 150.460 113.605 151.159  c
113.317 151.857 112.950 152.364 112.503 152.679  c
112.057 152.994 111.626 153.152 111.211 153.152  c
110.391 153.152 109.707 152.667 109.161 151.698  c
108.700 150.882 108.469 149.898 108.469 148.747  c
h
109.713 148.905 m
109.713 150.090 109.859 151.057 110.151 151.806  c
110.393 152.437 110.752 152.752 111.231 152.752  c
111.459 152.752 111.696 152.649 111.941 152.444  c
112.187 152.239 112.373 151.895 112.500 151.413  c
112.695 150.685 112.792 149.659 112.792 148.334  c
112.792 147.352 112.690 146.533 112.487 145.877  c
112.335 145.391 112.138 145.046 111.897 144.843  c
111.724 144.703 111.514 144.633 111.269 144.633  c
110.981 144.633 110.725 144.762 110.501 145.021  c
110.196 145.372 109.988 145.924 109.878 146.677  c
109.768 147.431 109.713 148.173 109.713 148.905  c
h
116.625 151.768 m
116.823 151.768 116.991 151.837 117.126 151.974  c
117.261 152.112 117.329 152.278 117.329 152.473  c
117.329 152.667 117.260 152.833 117.123 152.971  c
116.985 153.109 116.819 153.177 116.625 153.177  c
116.430 153.177 116.264 153.109 116.126 152.971  c
115.989 152.833 115.920 152.667 115.920 152.473  c
115.920 152.274 115.989 152.107 116.126 151.971  c
116.264 151.836 116.430 151.768 116.625 151.768  c
h
123.960 151.343 m
123.357 153.000 l
118.279 153.000 l
118.279 152.765 l
119.773 151.402 120.824 150.289 121.434 149.426  c
122.043 148.563 122.348 147.773 122.348 147.058  c
122.348 146.512 122.181 146.064 121.846 145.712  c
121.512 145.361 121.112 145.186 120.647 145.186  c
120.223 145.186 119.844 145.309 119.507 145.557  c
119.171 145.804 118.922 146.167 118.761 146.646  c
118.526 146.646 l
118.632 145.863 118.904 145.262 119.342 144.843  c
119.780 144.424 120.327 144.214 120.983 144.214  c
121.681 144.214 122.264 144.439 122.732 144.887  c
123.199 145.336 123.433 145.865 123.433 146.474  c
123.433 146.910 123.332 147.346 123.128 147.782  c
122.815 148.467 122.307 149.193 121.605 149.959  c
120.551 151.110 119.893 151.804 119.631 152.041  c
121.878 152.041 l
122.335 152.041 122.656 152.024 122.840 151.990  c
123.024 151.956 123.190 151.888 123.338 151.784  c
123.486 151.680 123.615 151.533 123.725 151.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
144.000 130.000 m
144.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
141.469 148.747 m
141.469 147.765 141.617 146.920 141.914 146.211  c
142.210 145.502 142.603 144.974 143.094 144.627  c
143.475 144.352 143.869 144.214 144.275 144.214  c
144.935 144.214 145.528 144.551 146.052 145.224  c
146.708 146.057 147.036 147.187 147.036 148.613  c
147.036 149.612 146.892 150.460 146.605 151.159  c
146.317 151.857 145.950 152.364 145.503 152.679  c
145.057 152.994 144.626 153.152 144.211 153.152  c
143.391 153.152 142.707 152.667 142.161 151.698  c
141.700 150.882 141.469 149.898 141.469 148.747  c
h
142.713 148.905 m
142.713 150.090 142.859 151.057 143.151 151.806  c
143.393 152.437 143.752 152.752 144.231 152.752  c
144.459 152.752 144.696 152.649 144.941 152.444  c
145.187 152.239 145.373 151.895 145.500 151.413  c
145.695 150.685 145.792 149.659 145.792 148.334  c
145.792 147.352 145.690 146.533 145.487 145.877  c
145.335 145.391 145.138 145.046 144.897 144.843  c
144.724 144.703 144.514 144.633 144.269 144.633  c
143.981 144.633 143.725 144.762 143.501 145.021  c
143.196 145.372 142.988 145.924 142.878 146.677  c
142.768 147.431 142.713 148.173 142.713 148.905  c
h
149.625 151.768 m
149.823 151.768 149.991 151.837 150.126 151.974  c
150.261 152.112 150.329 152.278 150.329 152.473  c
150.329 152.667 150.260 152.833 150.123 152.971  c
149.985 153.109 149.819 153.177 149.625 153.177  c
149.430 153.177 149.264 153.109 149.126 152.971  c
148.989 152.833 148.920 152.667 148.920 152.473  c
148.920 152.274 148.989 152.107 149.126 151.971  c
149.264 151.836 149.430 151.768 149.625 151.768  c
h
151.660 146.030 m
151.905 145.450 152.215 145.003 152.590 144.687  c
152.964 144.372 153.431 144.214 153.989 144.214  c
154.679 144.214 155.208 144.439 155.576 144.887  c
155.856 145.222 155.995 145.579 155.995 145.960  c
155.995 146.586 155.602 147.234 154.814 147.902  c
155.343 148.110 155.743 148.406 156.014 148.791  c
156.285 149.176 156.420 149.629 156.420 150.149  c
156.420 150.894 156.183 151.540 155.710 152.085  c
155.092 152.796 154.197 153.152 153.024 153.152  c
152.445 153.152 152.050 153.080 151.841 152.936  c
151.631 152.792 151.526 152.638 151.526 152.473  c
151.526 152.350 151.576 152.242 151.676 152.149  c
151.775 152.056 151.895 152.009 152.034 152.009  c
152.140 152.009 152.248 152.026 152.358 152.060  c
152.430 152.081 152.593 152.158 152.847 152.292  c
153.101 152.425 153.276 152.504 153.374 152.530  c
153.530 152.576 153.697 152.600 153.875 152.600  c
154.307 152.600 154.682 152.432 155.002 152.098  c
155.321 151.764 155.481 151.368 155.481 150.911  c
155.481 150.577 155.407 150.251 155.259 149.934  c
155.149 149.697 155.028 149.517 154.897 149.394  c
154.715 149.225 154.465 149.071 154.148 148.934  c
153.831 148.796 153.507 148.728 153.177 148.728  c
152.974 148.728 l
152.974 148.537 l
153.308 148.495 153.643 148.374 153.980 148.175  c
154.316 147.976 154.561 147.737 154.713 147.458  c
154.865 147.179 154.941 146.872 154.941 146.538  c
154.941 146.102 154.805 145.749 154.532 145.481  c
154.259 145.212 153.919 145.078 153.513 145.078  c
152.857 145.078 152.309 145.429 151.869 146.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
177.000 130.000 m
177.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
174.469 148.747 m
174.469 147.765 174.617 146.920 174.914 146.211  c
175.210 145.502 175.603 144.974 176.094 144.627  c
176.475 144.352 176.869 144.214 177.275 144.214  c
177.935 144.214 178.528 144.551 179.052 145.224  c
179.708 146.057 180.036 147.187 180.036 148.613  c
180.036 149.612 179.892 150.460 179.605 151.159  c
179.317 151.857 178.950 152.364 178.503 152.679  c
178.057 152.994 177.626 153.152 177.211 153.152  c
176.391 153.152 175.707 152.667 175.161 151.698  c
174.700 150.882 174.469 149.898 174.469 148.747  c
h
175.713 148.905 m
175.713 150.090 175.859 151.057 176.151 151.806  c
176.393 152.437 176.752 152.752 177.231 152.752  c
177.459 152.752 177.696 152.649 177.941 152.444  c
178.187 152.239 178.373 151.895 178.500 151.413  c
178.695 150.685 178.792 149.659 178.792 148.334  c
178.792 147.352 178.690 146.533 178.487 145.877  c
178.335 145.391 178.138 145.046 177.897 144.843  c
177.724 144.703 177.514 144.633 177.269 144.633  c
176.981 144.633 176.725 144.762 176.501 145.021  c
176.196 145.372 175.988 145.924 175.878 146.677  c
175.768 147.431 175.713 148.173 175.713 148.905  c
h
182.625 151.768 m
182.823 151.768 182.991 151.837 183.126 151.974  c
183.261 152.112 183.329 152.278 183.329 152.473  c
183.329 152.667 183.260 152.833 183.123 152.971  c
182.985 153.109 182.819 153.177 182.625 153.177  c
182.430 153.177 182.264 153.109 182.126 152.971  c
181.989 152.833 181.920 152.667 181.920 152.473  c
181.920 152.274 181.989 152.107 182.126 151.971  c
182.264 151.836 182.430 151.768 182.625 151.768  c
h
190.049 149.826 m
190.049 150.727 l
188.894 150.727 l
188.894 153.000 l
187.846 153.000 l
187.846 150.727 l
184.203 150.727 l
184.203 149.915 l
188.195 144.214 l
188.894 144.214 l
188.894 149.826 l
h
187.846 149.826 m
187.846 145.554 l
184.825 149.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
210.000 130.000 m
210.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
207.469 148.747 m
207.469 147.765 207.617 146.920 207.914 146.211  c
208.210 145.502 208.603 144.974 209.094 144.627  c
209.475 144.352 209.869 144.214 210.275 144.214  c
210.935 144.214 211.528 144.551 212.052 145.224  c
212.708 146.057 213.036 147.187 213.036 148.613  c
213.036 149.612 212.892 150.460 212.605 151.159  c
212.317 151.857 211.950 152.364 211.503 152.679  c
211.057 152.994 210.626 153.152 210.211 153.152  c
209.391 153.152 208.707 152.667 208.161 151.698  c
207.700 150.882 207.469 149.898 207.469 148.747  c
h
208.713 148.905 m
208.713 150.090 208.859 151.057 209.151 151.806  c
209.393 152.437 209.752 152.752 210.231 152.752  c
210.459 152.752 210.696 152.649 210.941 152.444  c
211.187 152.239 211.373 151.895 211.500 151.413  c
211.695 150.685 211.792 149.659 211.792 148.334  c
211.792 147.352 211.690 146.533 211.487 145.877  c
211.335 145.391 211.138 145.046 210.897 144.843  c
210.724 144.703 210.514 144.633 210.269 144.633  c
209.981 144.633 209.725 144.762 209.501 145.021  c
209.196 145.372 208.988 145.924 208.878 146.677  c
208.768 147.431 208.713 148.173 208.713 148.905  c
h
215.625 151.768 m
215.823 151.768 215.991 151.837 216.126 151.974  c
216.261 152.112 216.329 152.278 216.329 152.473  c
216.329 152.667 216.260 152.833 216.123 152.971  c
215.985 153.109 215.819 153.177 215.625 153.177  c
215.430 153.177 215.264 153.109 215.126 152.971  c
214.989 152.833 214.920 152.667 214.920 152.473  c
214.920 152.274 214.989 152.107 215.126 151.971  c
215.264 151.836 215.430 151.768 215.625 151.768  c
h
222.643 144.392 m
222.147 145.471 l
219.558 145.471 l
218.993 146.627 l
220.114 146.792 221.003 147.208 221.659 147.877  c
222.222 148.453 222.503 149.130 222.503 149.908  c
222.503 150.361 222.411 150.780 222.227 151.165  c
222.043 151.550 221.811 151.878 221.532 152.149  c
221.252 152.420 220.941 152.638 220.599 152.803  c
220.112 153.036 219.613 153.152 219.101 153.152  c
218.584 153.152 218.209 153.064 217.974 152.888  c
217.739 152.713 217.622 152.519 217.622 152.308  c
217.622 152.189 217.670 152.084 217.768 151.993  c
217.865 151.902 217.988 151.857 218.136 151.857  c
218.246 151.857 218.342 151.874 218.425 151.908  c
218.507 151.942 218.648 152.028 218.847 152.168  c
219.164 152.388 219.486 152.498 219.812 152.498  c
220.307 152.498 220.741 152.311 221.116 151.936  c
221.491 151.562 221.678 151.106 221.678 150.568  c
221.678 150.048 221.511 149.562 221.176 149.112  c
220.842 148.661 220.381 148.313 219.793 148.067  c
219.331 147.877 218.703 147.767 217.907 147.737  c
219.558 144.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
243.000 130.000 m
243.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
239.469 148.747 m
239.469 147.765 239.617 146.920 239.914 146.211  c
240.210 145.502 240.603 144.974 241.094 144.627  c
241.475 144.352 241.869 144.214 242.275 144.214  c
242.935 144.214 243.528 144.551 244.052 145.224  c
244.708 146.057 245.036 147.187 245.036 148.613  c
245.036 149.612 244.892 150.460 244.605 151.159  c
244.317 151.857 243.950 152.364 243.503 152.679  c
243.057 152.994 242.626 153.152 242.211 153.152  c
241.391 153.152 240.707 152.667 240.161 151.698  c
239.700 150.882 239.469 149.898 239.469 148.747  c
h
240.713 148.905 m
240.713 150.090 240.859 151.057 241.151 151.806  c
241.393 152.437 241.752 152.752 242.231 152.752  c
242.459 152.752 242.696 152.649 242.941 152.444  c
243.187 152.239 243.373 151.895 243.500 151.413  c
243.695 150.685 243.792 149.659 243.792 148.334  c
243.792 147.352 243.690 146.533 243.487 145.877  c
243.335 145.391 243.138 145.046 242.897 144.843  c
242.724 144.703 242.514 144.633 242.269 144.633  c
241.981 144.633 241.725 144.762 241.501 145.021  c
241.196 145.372 240.988 145.924 240.878 146.677  c
240.768 147.431 240.713 148.173 240.713 148.905  c
h
247.625 151.768 m
247.823 151.768 247.991 151.837 248.126 151.974  c
248.261 152.112 248.329 152.278 248.329 152.473  c
248.329 152.667 248.260 152.833 248.123 152.971  c
247.985 153.109 247.819 153.177 247.625 153.177  c
247.430 153.177 247.264 153.109 247.126 152.971  c
246.989 152.833 246.920 152.667 246.920 152.473  c
246.920 152.274 246.989 152.107 247.126 151.971  c
247.264 151.836 247.430 151.768 247.625 151.768  c
h
254.827 144.214 m
254.827 144.449 l
254.268 144.504 253.812 144.615 253.459 144.783  c
253.105 144.950 252.756 145.205 252.411 145.547  c
252.067 145.890 251.781 146.272 251.554 146.693  c
251.328 147.114 251.139 147.615 250.986 148.194  c
251.596 147.775 252.207 147.566 252.821 147.566  c
253.409 147.566 253.919 147.803 254.351 148.277  c
254.782 148.751 254.998 149.360 254.998 150.105  c
254.998 150.824 254.780 151.480 254.344 152.073  c
253.820 152.792 253.126 153.152 252.262 153.152  c
251.674 153.152 251.175 152.957 250.764 152.568  c
249.960 151.810 249.558 150.829 249.558 149.623  c
249.558 148.852 249.713 148.120 250.022 147.426  c
250.330 146.732 250.772 146.117 251.345 145.579  c
251.918 145.042 252.467 144.680 252.992 144.494  c
253.517 144.307 254.006 144.214 254.459 144.214  c
h
250.878 148.658 m
250.802 149.229 250.764 149.690 250.764 150.042  c
250.764 150.448 250.839 150.889 250.990 151.365  c
251.140 151.841 251.363 152.219 251.659 152.498  c
251.875 152.697 252.137 152.796 252.446 152.796  c
252.814 152.796 253.144 152.623 253.433 152.276  c
253.723 151.929 253.868 151.434 253.868 150.791  c
253.868 150.067 253.724 149.441 253.437 148.912  c
253.149 148.383 252.740 148.118 252.211 148.118  c
252.051 148.118 251.878 148.152 251.694 148.220  c
251.510 148.287 251.238 148.433 250.878 148.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
276.000 130.000 m
276.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
272.469 148.747 m
272.469 147.765 272.617 146.920 272.914 146.211  c
273.210 145.502 273.603 144.974 274.094 144.627  c
274.475 144.352 274.869 144.214 275.275 144.214  c
275.935 144.214 276.528 144.551 277.052 145.224  c
277.708 146.057 278.036 147.187 278.036 148.613  c
278.036 149.612 277.892 150.460 277.605 151.159  c
277.317 151.857 276.950 152.364 276.503 152.679  c
276.057 152.994 275.626 153.152 275.211 153.152  c
274.391 153.152 273.707 152.667 273.161 151.698  c
272.700 150.882 272.469 149.898 272.469 148.747  c
h
273.713 148.905 m
273.713 150.090 273.859 151.057 274.151 151.806  c
274.393 152.437 274.752 152.752 275.231 152.752  c
275.459 152.752 275.696 152.649 275.941 152.444  c
276.187 152.239 276.373 151.895 276.500 151.413  c
276.695 150.685 276.792 149.659 276.792 148.334  c
276.792 147.352 276.690 146.533 276.487 145.877  c
276.335 145.391 276.138 145.046 275.897 144.843  c
275.724 144.703 275.514 144.633 275.269 144.633  c
274.981 144.633 274.725 144.762 274.501 145.021  c
274.196 145.372 273.988 145.924 273.878 146.677  c
273.768 147.431 273.713 148.173 273.713 148.905  c
h
280.625 151.768 m
280.823 151.768 280.991 151.837 281.126 151.974  c
281.261 152.112 281.329 152.278 281.329 152.473  c
281.329 152.667 281.260 152.833 281.123 152.971  c
280.985 153.109 280.819 153.177 280.625 153.177  c
280.430 153.177 280.264 153.109 280.126 152.971  c
279.989 152.833 279.920 152.667 279.920 152.473  c
279.920 152.274 279.989 152.107 280.126 151.971  c
280.264 151.836 280.430 151.768 280.625 151.768  c
h
283.307 144.392 m
287.922 144.392 l
287.922 144.633 l
285.053 153.177 l
284.342 153.177 l
286.913 145.427 l
284.545 145.427 l
284.067 145.427 283.726 145.484 283.523 145.598  c
283.168 145.793 282.882 146.093 282.666 146.500  c
282.482 146.430 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
308.000 130.000 m
308.000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
305.469 148.747 m
305.469 147.765 305.617 146.920 305.914 146.211  c
306.210 145.502 306.603 144.974 307.094 144.627  c
307.475 144.352 307.869 144.214 308.275 144.214  c
308.935 144.214 309.528 144.551 310.052 145.224  c
310.708 146.057 311.036 147.187 311.036 148.613  c
311.036 149.612 310.892 150.460 310.605 151.159  c
310.317 151.857 309.950 152.364 309.503 152.679  c
309.057 152.994 308.626 153.152 308.211 153.152  c
307.391 153.152 306.707 152.667 306.161 151.698  c
305.700 150.882 305.469 149.898 305.469 148.747  c
h
306.713 148.905 m
306.713 150.090 306.859 151.057 307.151 151.806  c
307.393 152.437 307.752 152.752 308.231 152.752  c
308.459 152.752 308.696 152.649 308.941 152.444  c
309.187 152.239 309.373 151.895 309.500 151.413  c
309.695 150.685 309.792 149.659 309.792 148.334  c
309.792 147.352 309.690 146.533 309.487 145.877  c
309.335 145.391 309.138 145.046 308.897 144.843  c
308.724 144.703 308.514 144.633 308.269 144.633  c
307.981 144.633 307.725 144.762 307.501 145.021  c
307.196 145.372 306.988 145.924 306.878 146.677  c
306.768 147.431 306.713 148.173 306.713 148.905  c
h
313.625 151.768 m
313.823 151.768 313.991 151.837 314.126 151.974  c
314.261 152.112 314.329 152.278 314.329 152.473  c
314.329 152.667 314.260 152.833 314.123 152.971  c
313.985 153.109 313.819 153.177 313.625 153.177  c
313.430 153.177 313.264 153.109 313.126 152.971  c
312.989 152.833 312.920 152.667 312.920 152.473  c
312.920 152.274 312.989 152.107 313.126 151.971  c
313.264 151.836 313.430 151.768 313.625 151.768  c
h
317.494 148.664 m
316.813 148.106 316.374 147.657 316.177 147.318  c
315.980 146.980 315.882 146.629 315.882 146.265  c
315.882 145.706 316.098 145.225 316.529 144.821  c
316.961 144.416 317.534 144.214 318.250 144.214  c
318.944 144.214 319.502 144.403 319.925 144.779  c
320.349 145.156 320.560 145.585 320.560 146.068  c
320.560 146.390 320.446 146.717 320.217 147.052  c
319.989 147.386 319.513 147.780 318.789 148.232  c
319.534 148.808 320.027 149.261 320.268 149.591  c
320.590 150.022 320.751 150.477 320.751 150.956  c
320.751 151.561 320.520 152.078 320.059 152.508  c
319.597 152.937 318.992 153.152 318.243 153.152  c
317.426 153.152 316.790 152.896 316.333 152.384  c
315.969 151.973 315.787 151.525 315.787 151.038  c
315.787 150.657 315.915 150.280 316.171 149.905  c
316.427 149.531 316.868 149.117 317.494 148.664  c
h
318.491 147.985 m
318.999 147.528 319.320 147.167 319.456 146.903  c
319.591 146.638 319.659 146.339 319.659 146.004  c
319.659 145.560 319.534 145.212 319.284 144.960  c
319.035 144.708 318.694 144.583 318.262 144.583  c
317.831 144.583 317.479 144.707 317.209 144.957  c
316.938 145.207 316.802 145.499 316.802 145.833  c
316.802 146.053 316.858 146.273 316.970 146.493  c
317.083 146.713 317.242 146.923 317.450 147.122  c
h
317.793 148.905 m
317.441 149.202 317.181 149.524 317.012 149.873  c
316.842 150.222 316.758 150.600 316.758 151.006  c
316.758 151.552 316.907 151.989 317.205 152.317  c
317.504 152.645 317.884 152.809 318.345 152.809  c
318.802 152.809 319.168 152.680 319.443 152.422  c
319.718 152.164 319.856 151.851 319.856 151.482  c
319.856 151.178 319.775 150.905 319.614 150.664  c
319.314 150.215 318.707 149.629 317.793 148.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
62.0000 130.000 m
62.0000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
95.0000 130.000 m
95.0000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
128.000 130.000 m
128.000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
161.000 130.000 m
161.000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
194.000 130.000 m
194.000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
226.000 130.000 m
226.000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
259.000 130.000 m
259.000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
292.000 130.000 m
292.000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
46.0000 321.000 m
46.0000 8.01864 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 218 8 15 rc
Q
cliprestore
newpath
0 0 m
0 323.000 l
318.000 323.000 l
318.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
46.0000 314.000 m
41.0000 314.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
18 312 7 13 rc
newpath
28.7900 319.438 m
20.2100 319.438 l
20.2100 318.762 l
28.7900 318.762 l
h
f
Q
newpath
28.5234 315.236 m
30.6181 314.214 l
30.8276 314.214 l
30.8276 321.482 l
30.8276 321.965 30.8477 322.265 30.8879 322.384  c
30.9281 322.502 31.0117 322.593 31.1386 322.657  c
31.2656 322.720 31.5237 322.756 31.9130 322.765  c
31.9130 323.000 l
28.6757 323.000 l
28.6757 322.765 l
29.0820 322.756 29.3444 322.721 29.4628 322.660  c
29.5813 322.599 29.6639 322.516 29.7104 322.412  c
29.7570 322.309 29.7802 321.999 29.7802 321.482  c
29.7802 316.836 l
29.7802 316.210 29.7591 315.808 29.7168 315.630  c
29.6871 315.495 29.6332 315.395 29.5549 315.332  c
29.4766 315.268 29.3824 315.236 29.2724 315.236  c
29.1158 315.236 28.8979 315.302 28.6186 315.433  c
h
35.6250 321.768 m
35.8238 321.768 35.9910 321.837 36.1264 321.974  c
36.2618 322.112 36.3295 322.278 36.3295 322.473  c
36.3295 322.667 36.2608 322.833 36.1232 322.971  c
35.9857 323.109 35.8196 323.177 35.6250 323.177  c
35.4303 323.177 35.2642 323.109 35.1267 322.971  c
34.9891 322.833 34.9204 322.667 34.9204 322.473  c
34.9204 322.274 34.9891 322.107 35.1267 321.971  c
35.2642 321.836 35.4303 321.768 35.6250 321.768  c
h
42.6430 314.392 m
42.1479 315.471 l
39.5581 315.471 l
38.9931 316.627 l
40.1145 316.792 41.0032 317.208 41.6591 317.877  c
42.2220 318.453 42.5034 319.130 42.5034 319.908  c
42.5034 320.361 42.4113 320.780 42.2272 321.165  c
42.0432 321.550 41.8115 321.878 41.5322 322.149  c
41.2529 322.420 40.9418 322.638 40.5991 322.803  c
40.1124 323.036 39.6131 323.152 39.1010 323.152  c
38.5848 323.152 38.2092 323.064 37.9743 322.888  c
37.7395 322.713 37.6220 322.519 37.6220 322.308  c
37.6220 322.189 37.6707 322.084 37.7680 321.993  c
37.8654 321.902 37.9881 321.857 38.1362 321.857  c
38.2462 321.857 38.3425 321.874 38.4250 321.908  c
38.5075 321.942 38.6482 322.028 38.8471 322.168  c
39.1645 322.388 39.4861 322.498 39.8120 322.498  c
40.3071 322.498 40.7419 322.311 41.1164 321.936  c
41.4909 321.562 41.6782 321.106 41.6782 320.568  c
41.6782 320.048 41.5110 319.562 41.1767 319.112  c
40.8424 318.661 40.3811 318.313 39.7929 318.067  c
39.3317 317.877 38.7032 317.767 37.9077 317.737  c
39.5581 314.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 253.000 m
41.0000 253.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
28 251 7 13 rc
newpath
38.7900 258.438 m
30.2100 258.438 l
30.2100 257.762 l
38.7900 257.762 l
h
f
Q
newpath
38.5234 254.236 m
40.6181 253.214 l
40.8276 253.214 l
40.8276 260.482 l
40.8276 260.965 40.8477 261.265 40.8879 261.384  c
40.9281 261.502 41.0117 261.593 41.1386 261.657  c
41.2656 261.720 41.5237 261.756 41.9130 261.765  c
41.9130 262.000 l
38.6757 262.000 l
38.6757 261.765 l
39.0820 261.756 39.3444 261.721 39.4628 261.660  c
39.5813 261.599 39.6639 261.516 39.7104 261.412  c
39.7570 261.309 39.7802 260.999 39.7802 260.482  c
39.7802 255.836 l
39.7802 255.210 39.7591 254.808 39.7168 254.630  c
39.6871 254.495 39.6332 254.395 39.5549 254.332  c
39.4766 254.268 39.3824 254.236 39.2724 254.236  c
39.1158 254.236 38.8979 254.302 38.6186 254.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 191.000 m
41.0000 191.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
18 190 7 13 rc
newpath
28.7900 197.438 m
20.2100 197.438 l
20.2100 196.762 l
28.7900 196.762 l
h
f
Q
newpath
27.4697 196.747 m
27.4697 195.765 27.6178 194.920 27.9140 194.211  c
28.2102 193.502 28.6038 192.974 29.0947 192.627  c
29.4755 192.352 29.8691 192.214 30.2753 192.214  c
30.9355 192.214 31.5279 192.551 32.0527 193.224  c
32.7086 194.057 33.0366 195.187 33.0366 196.613  c
33.0366 197.612 32.8927 198.460 32.6049 199.159  c
32.3172 199.857 31.9501 200.364 31.5036 200.679  c
31.0572 200.994 30.6266 201.152 30.2119 201.152  c
29.3909 201.152 28.7075 200.667 28.1616 199.698  c
27.7003 198.882 27.4697 197.898 27.4697 196.747  c
h
28.7138 196.905 m
28.7138 198.090 28.8598 199.057 29.1518 199.806  c
29.3930 200.437 29.7527 200.752 30.2309 200.752  c
30.4594 200.752 30.6964 200.649 30.9418 200.444  c
31.1873 200.239 31.3735 199.895 31.5004 199.413  c
31.6951 198.685 31.7924 197.659 31.7924 196.334  c
31.7924 195.352 31.6909 194.533 31.4877 193.877  c
31.3354 193.391 31.1386 193.046 30.8974 192.843  c
30.7239 192.703 30.5144 192.633 30.2690 192.633  c
29.9812 192.633 29.7252 192.762 29.5009 193.021  c
29.1962 193.372 28.9889 193.924 28.8789 194.677  c
28.7688 195.431 28.7138 196.173 28.7138 196.905  c
h
35.6250 199.768 m
35.8238 199.768 35.9910 199.837 36.1264 199.974  c
36.2618 200.112 36.3295 200.278 36.3295 200.473  c
36.3295 200.667 36.2608 200.833 36.1232 200.971  c
35.9857 201.109 35.8196 201.177 35.6250 201.177  c
35.4303 201.177 35.2642 201.109 35.1267 200.971  c
34.9891 200.833 34.9204 200.667 34.9204 200.473  c
34.9204 200.274 34.9891 200.107 35.1267 199.971  c
35.2642 199.836 35.4303 199.768 35.6250 199.768  c
h
42.6430 192.392 m
42.1479 193.471 l
39.5581 193.471 l
38.9931 194.627 l
40.1145 194.792 41.0032 195.208 41.6591 195.877  c
42.2220 196.453 42.5034 197.130 42.5034 197.908  c
42.5034 198.361 42.4113 198.780 42.2272 199.165  c
42.0432 199.550 41.8115 199.878 41.5322 200.149  c
41.2529 200.420 40.9418 200.638 40.5991 200.803  c
40.1124 201.036 39.6131 201.152 39.1010 201.152  c
38.5848 201.152 38.2092 201.064 37.9743 200.888  c
37.7395 200.713 37.6220 200.519 37.6220 200.308  c
37.6220 200.189 37.6707 200.084 37.7680 199.993  c
37.8654 199.902 37.9881 199.857 38.1362 199.857  c
38.2462 199.857 38.3425 199.874 38.4250 199.908  c
38.5075 199.942 38.6482 200.028 38.8471 200.168  c
39.1645 200.388 39.4861 200.498 39.8120 200.498  c
40.3071 200.498 40.7419 200.311 41.1164 199.936  c
41.4909 199.562 41.6782 199.106 41.6782 198.568  c
41.6782 198.048 41.5110 197.562 41.1767 197.112  c
40.8424 196.661 40.3811 196.313 39.7929 196.067  c
39.3317 195.877 38.7032 195.767 37.9077 195.737  c
39.5581 192.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 130.000 m
41.0000 130.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.4697 135.747 m
37.4697 134.765 37.6178 133.920 37.9140 133.211  c
38.2102 132.502 38.6038 131.974 39.0947 131.627  c
39.4755 131.352 39.8691 131.214 40.2753 131.214  c
40.9355 131.214 41.5279 131.551 42.0527 132.224  c
42.7086 133.057 43.0366 134.187 43.0366 135.613  c
43.0366 136.612 42.8927 137.460 42.6049 138.159  c
42.3172 138.857 41.9501 139.364 41.5036 139.679  c
41.0572 139.994 40.6266 140.152 40.2119 140.152  c
39.3909 140.152 38.7075 139.667 38.1616 138.698  c
37.7003 137.882 37.4697 136.898 37.4697 135.747  c
h
38.7138 135.905 m
38.7138 137.090 38.8598 138.057 39.1518 138.806  c
39.3930 139.437 39.7527 139.752 40.2309 139.752  c
40.4594 139.752 40.6964 139.649 40.9418 139.444  c
41.1873 139.239 41.3735 138.895 41.5004 138.413  c
41.6951 137.685 41.7924 136.659 41.7924 135.334  c
41.7924 134.352 41.6909 133.533 41.4877 132.877  c
41.3354 132.391 41.1386 132.046 40.8974 131.843  c
40.7239 131.703 40.5144 131.633 40.2690 131.633  c
39.9812 131.633 39.7252 131.762 39.5009 132.021  c
39.1962 132.372 38.9889 132.924 38.8789 133.677  c
38.7688 134.431 38.7138 135.173 38.7138 135.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 69.0000 m
41.0000 69.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.4697 74.7470 m
27.4697 73.7653 27.6178 72.9200 27.9140 72.2111  c
28.2102 71.5023 28.6038 70.9744 29.0947 70.6274  c
29.4755 70.3523 29.8691 70.2148 30.2753 70.2148  c
30.9355 70.2148 31.5279 70.5512 32.0527 71.2241  c
32.7086 72.0577 33.0366 73.1876 33.0366 74.6137  c
33.0366 75.6124 32.8927 76.4609 32.6049 77.1591  c
32.3172 77.8574 31.9501 78.3641 31.5036 78.6794  c
31.0572 78.9947 30.6266 79.1523 30.2119 79.1523  c
29.3909 79.1523 28.7075 78.6678 28.1616 77.6987  c
27.7003 76.8820 27.4697 75.8981 27.4697 74.7470  c
h
28.7138 74.9057 m
28.7138 76.0906 28.8598 77.0576 29.1518 77.8066  c
29.3930 78.4371 29.7527 78.7524 30.2309 78.7524  c
30.4594 78.7524 30.6964 78.6498 30.9418 78.4445  c
31.1873 78.2393 31.3735 77.8955 31.5004 77.4130  c
31.6951 76.6852 31.7924 75.6590 31.7924 74.3344  c
31.7924 73.3527 31.6909 72.5338 31.4877 71.8779  c
31.3354 71.3912 31.1386 71.0463 30.8974 70.8432  c
30.7239 70.7036 30.5144 70.6337 30.2690 70.6337  c
29.9812 70.6337 29.7252 70.7628 29.5009 71.0210  c
29.1962 71.3722 28.9889 71.9244 28.8789 72.6777  c
28.7688 73.4309 28.7138 74.1736 28.7138 74.9057  c
h
35.6250 77.7685 m
35.8238 77.7685 35.9910 77.8373 36.1264 77.9748  c
36.2618 78.1123 36.3295 78.2784 36.3295 78.4731  c
36.3295 78.6678 36.2608 78.8339 36.1232 78.9714  c
35.9857 79.1089 35.8196 79.1777 35.6250 79.1777  c
35.4303 79.1777 35.2642 79.1089 35.1267 78.9714  c
34.9891 78.8339 34.9204 78.6678 34.9204 78.4731  c
34.9204 78.2742 34.9891 78.1071 35.1267 77.9716  c
35.2642 77.8362 35.4303 77.7685 35.6250 77.7685  c
h
42.6430 70.3925 m
42.1479 71.4716 l
39.5581 71.4716 l
38.9931 72.6269 l
40.1145 72.7919 41.0032 73.2088 41.6591 73.8774  c
42.2220 74.4529 42.5034 75.1300 42.5034 75.9086  c
42.5034 76.3614 42.4113 76.7804 42.2272 77.1655  c
42.0432 77.5506 41.8115 77.8785 41.5322 78.1494  c
41.2529 78.4202 40.9418 78.6381 40.5991 78.8032  c
40.1124 79.0359 39.6131 79.1523 39.1010 79.1523  c
38.5848 79.1523 38.2092 79.0645 37.9743 78.8889  c
37.7395 78.7133 37.6220 78.5196 37.6220 78.3081  c
37.6220 78.1896 37.6707 78.0848 37.7680 77.9939  c
37.8654 77.9029 37.9881 77.8574 38.1362 77.8574  c
38.2462 77.8574 38.3425 77.8743 38.4250 77.9082  c
38.5075 77.9420 38.6482 78.0288 38.8471 78.1684  c
39.1645 78.3885 39.4861 78.4985 39.8120 78.4985  c
40.3071 78.4985 40.7419 78.3112 41.1164 77.9367  c
41.4909 77.5622 41.6782 77.1062 41.6782 76.5688  c
41.6782 76.0483 41.5110 75.5627 41.1767 75.1120  c
40.8424 74.6613 40.3811 74.3133 39.7929 74.0678  c
39.3317 73.8774 38.7032 73.7674 37.9077 73.7377  c
39.5581 70.3925 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 8.00000 m
41.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.5234 10.2368 m
40.6181 9.21484 l
40.8276 9.21484 l
40.8276 16.4829 l
40.8276 16.9653 40.8477 17.2657 40.8879 17.3842  c
40.9281 17.5027 41.0117 17.5937 41.1386 17.6572  c
41.2656 17.7207 41.5237 17.7566 41.9130 17.7651  c
41.9130 18.0000 l
38.6757 18.0000 l
38.6757 17.7651 l
39.0820 17.7566 39.3444 17.7217 39.4628 17.6604  c
39.5813 17.5990 39.6639 17.5165 39.7104 17.4128  c
39.7570 17.3091 39.7802 16.9991 39.7802 16.4829  c
39.7802 11.8364 l
39.7802 11.2101 39.7591 10.8081 39.7168 10.6303  c
39.6871 10.4949 39.6332 10.3955 39.5549 10.3320  c
39.4766 10.2685 39.3824 10.2368 39.2724 10.2368  c
39.1158 10.2368 38.8979 10.3024 38.6186 10.4335  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 301.000 m
44.0000 301.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 289.000 m
44.0000 289.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 277.000 m
44.0000 277.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 265.000 m
44.0000 265.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 240.000 m
44.0000 240.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 228.000 m
44.0000 228.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 216.000 m
44.0000 216.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 204.000 m
44.0000 204.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 179.000 m
44.0000 179.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 167.000 m
44.0000 167.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 155.000 m
44.0000 155.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 143.000 m
44.0000 143.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 118.000 m
44.0000 118.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 106.000 m
44.0000 106.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 94.0000 m
44.0000 94.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 81.0000 m
44.0000 81.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 57.0000 m
44.0000 57.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 45.0000 m
44.0000 45.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 32.0000 m
44.0000 32.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
46.0000 20.0000 m
44.0000 20.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 328 333 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
