%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2012”N6ŒŽ1“ú 9Žž16•ª11•b JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
202 202 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
202.000 0 l
202.000 202.000 l
0 202.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 192 192 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 -1.00000 192.000 192.000 rc
1.00000 0 0 RG
newpath
2.00000 95.3726 m
2.99368 95.3657 l
3.85828 95.3595 l
4.83062 95.3520 l
5.80940 95.3442 l
6.78353 95.3359 l
7.68667 95.3279 l
8.62182 95.3192 l
9.58896 95.3097 l
10.5530 95.2997 l
11.5446 95.2889 l
12.4180 95.2790 l
13.4013 95.2672 l
14.3886 95.2547 l
15.3400 95.2420 l
16.2040 95.2300 l
17.2314 95.2149 l
18.1018 95.2014 l
19.1142 95.1850 l
20.0103 95.1697 l
20.9936 95.1521 l
21.9298 95.1344 l
22.9067 95.1150 l
23.8038 95.0963 l
24.7714 95.0751 l
25.7765 95.0519 l
26.6515 95.0307 l
27.5964 95.0066 l
28.5727 94.9804 l
29.5277 94.9535 l
30.4518 94.9261 l
31.4778 94.8941 l
32.3997 94.8638 l
33.3841 94.8298 l
34.2760 94.7975 l
35.2512 94.7603 l
36.1687 94.7235 l
37.1278 94.6830 l
38.0655 94.6415 l
39.0472 94.5957 l
39.9927 94.5493 l
40.9596 94.4994 l
41.9184 94.4474 l
42.7995 94.3971 l
43.8094 94.3366 l
44.7126 94.2797 l
45.6756 94.2159 l
46.5974 94.1517 l
47.6208 94.0767 l
48.5071 94.0083 l
49.5130 93.9268 l
50.4297 93.8486 l
51.4326 93.7586 l
52.2978 93.6771 l
53.2832 93.5795 l
54.2351 93.4803 l
55.1863 93.3761 l
56.1341 93.2668 l
57.0445 93.1566 l
58.0288 93.0314 l
58.9669 92.9057 l
59.9541 92.7666 l
60.8479 92.6343 l
61.8356 92.4805 l
62.7817 92.3255 l
63.7254 92.1630 l
64.7112 91.9843 l
65.6191 91.8113 l
66.5490 91.6253 l
67.5756 91.4090 l
68.5052 91.2028 l
69.4558 90.9811 l
70.4226 90.7440 l
71.3113 90.5150 l
72.2585 90.2588 l
73.1986 89.9915 l
74.2042 89.6905 l
75.0916 89.4112 l
76.1154 89.0723 l
77.0394 88.7502 l
77.9536 88.4157 l
78.9366 88.0375 l
79.9237 87.6374 l
80.8217 87.2548 l
81.7754 86.8281 l
82.7062 86.3903 l
83.7151 85.8908 l
84.5880 85.4366 l
85.5907 84.8883 l
86.5332 84.3457 l
87.4667 83.7810 l
88.4009 83.1872 l
89.3537 82.5505 l
90.3636 81.8397 l
91.2897 81.1537 l
92.2038 80.4428 l
93.1810 79.6439 l
94.1560 78.8044 l
95.0312 78.0131 l
96.0679 77.0271 l
96.9353 76.1595 l
97.9499 75.0929 l
98.9183 74.0201 l
99.7829 73.0147 l
100.755 71.8276 l
101.734 70.5694 l
102.708 69.2507 l
103.611 67.9660 l
104.546 66.5693 l
105.513 65.0504 l
106.477 63.4570 l
107.469 61.7309 l
108.342 60.1337 l
109.325 58.2451 l
110.313 56.2472 l
111.264 54.2206 l
112.128 52.2897 l
113.156 49.8758 l
114.026 47.7257 l
115.038 45.0968 l
115.935 42.6494 l
116.918 39.8272 l
117.854 36.9998 l
118.831 33.8966 l
119.728 30.9021 l
120.696 27.5088 l
121.701 23.7951 l
122.576 20.3976 l
123.521 16.5472 l
124.497 12.3620 l
125.452 8.05293 l
126.376 3.67118 l
127.402 -1.45169 l
S
cliprestore
newpath
0 0 m
0 192.000 l
192.000 192.000 l
192.000 0 l
h
W
Q
q
1.00000 -1.00000 192.000 192.000 rc
0.196078 0.803922 0.196078 RG
newpath
96.6100 192.751 m
96.6643 185.183 l
96.7185 179.794 l
96.8269 172.178 l
96.9353 166.765 l
97.1890 158.089 l
97.4426 152.165 l
97.6963 147.662 l
97.9499 144.027 l
98.9183 134.360 l
99.7829 128.583 l
100.755 123.680 l
101.734 119.767 l
102.708 116.541 l
103.611 113.974 l
104.546 111.639 l
105.513 109.494 l
106.477 107.573 l
107.469 105.782 l
108.342 104.334 l
109.325 102.827 l
110.313 101.425 l
111.264 100.166 l
112.128 99.0919 l
113.156 97.8886 l
114.026 96.9260 l
115.038 95.8646 l
115.935 94.9724 l
116.918 94.0396 l
117.854 93.1923 l
118.831 92.3469 l
119.728 91.6025 l
120.696 90.8311 l
121.701 90.0619 l
122.576 89.4168 l
123.521 88.7440 l
124.497 88.0733 l
125.452 87.4393 l
126.376 86.8455 l
127.402 86.2073 l
128.324 85.6517 l
129.308 85.0760 l
130.200 84.5690 l
131.175 84.0299 l
132.093 83.5363 l
133.052 83.0338 l
133.990 82.5550 l
134.971 82.0665 l
135.917 81.6076 l
136.884 81.1496 l
137.843 80.7061 l
138.724 80.3075 l
139.734 79.8608 l
140.637 79.4701 l
141.600 79.0621 l
142.522 78.6797 l
143.545 78.2640 l
144.431 77.9113 l
145.437 77.5188 l
146.354 77.1680 l
147.357 76.7916 l
148.222 76.4728 l
149.207 76.1161 l
150.159 75.7778 l
151.111 75.4457 l
152.058 75.1205 l
152.969 74.8133 l
153.953 74.4867 l
154.891 74.1806 l
155.878 73.8637 l
156.772 73.5814 l
157.760 73.2741 l
158.706 72.9845 l
159.650 72.6999 l
160.635 72.4072 l
161.543 72.1415 l
162.473 71.8732 l
163.500 71.5813 l
164.429 71.3209 l
165.380 71.0583 l
166.347 70.7948 l
167.235 70.5559 l
168.183 70.3045 l
169.123 70.0582 l
170.128 69.7983 l
171.016 69.5719 l
172.040 69.3140 l
172.964 69.0842 l
173.878 68.8596 l
174.861 68.6210 l
175.848 68.3844 l
176.746 68.1717 l
177.700 67.9484 l
178.630 67.7330 l
179.639 67.5022 l
180.512 67.3048 l
181.515 67.0806 l
182.457 66.8722 l
183.391 66.6681 l
184.325 66.4660 l
185.278 66.2620 l
186.288 66.0482 l
187.214 65.8543 l
188.128 65.6648 l
189.105 65.4643 l
190.080 65.2663 l
191.000 65.0816 l
S
cliprestore
newpath
0 0 m
0 192.000 l
192.000 192.000 l
192.000 0 l
h
W
Q
q
1.00000 -1.00000 192.000 192.000 rc
0.854902 0.647059 0.125490 RG
newpath
2.00000 190.000 m
191.000 1.00000 l
S
cliprestore
newpath
0 0 m
0 192.000 l
192.000 192.000 l
192.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
2.00000 96.0000 m
191.000 96.0000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
136 115 14 15 rc
newpath
142.278 121.255 m
142.486 121.475 142.642 121.695 142.748 121.915  c
142.824 122.067 142.949 122.467 143.123 123.115  c
143.681 122.277 l
143.829 122.074 144.009 121.880 144.221 121.696  c
144.432 121.512 144.619 121.386 144.779 121.318  c
144.881 121.276 144.993 121.255 145.116 121.255  c
145.298 121.255 145.443 121.304 145.551 121.401  c
145.658 121.498 145.712 121.617 145.712 121.756  c
145.712 121.917 145.681 122.027 145.617 122.086  c
145.499 122.192 145.363 122.245 145.211 122.245  c
145.122 122.245 145.027 122.226 144.925 122.188  c
144.726 122.120 144.593 122.086 144.525 122.086  c
144.424 122.086 144.303 122.146 144.164 122.264  c
143.901 122.484 143.588 122.910 143.224 123.540  c
143.745 125.724 l
143.825 126.058 143.893 126.258 143.948 126.324  c
144.003 126.389 144.058 126.422 144.113 126.422  c
144.202 126.422 144.305 126.373 144.424 126.276  c
144.657 126.081 144.856 125.827 145.021 125.514  c
145.243 125.628 l
144.976 126.128 144.638 126.543 144.227 126.873  c
143.994 127.059 143.798 127.152 143.637 127.152  c
143.400 127.152 143.211 127.019 143.072 126.752  c
142.983 126.587 142.799 125.876 142.520 124.619  c
141.859 125.766 141.330 126.504 140.933 126.835  c
140.675 127.046 140.425 127.152 140.184 127.152  c
140.014 127.152 139.860 127.091 139.720 126.968  c
139.619 126.875 139.568 126.750 139.568 126.593  c
139.568 126.454 139.614 126.337 139.708 126.244  c
139.801 126.151 139.915 126.105 140.050 126.105  c
140.186 126.105 140.330 126.172 140.482 126.308  c
140.592 126.405 140.677 126.454 140.736 126.454  c
140.787 126.454 140.852 126.420 140.933 126.352  c
141.132 126.191 141.402 125.844 141.745 125.311  c
142.088 124.778 142.312 124.393 142.418 124.156  c
142.156 123.127 142.014 122.584 141.993 122.524  c
141.895 122.249 141.768 122.055 141.612 121.940  c
141.455 121.826 141.225 121.769 140.920 121.769  c
140.823 121.769 140.710 121.773 140.584 121.782  c
140.584 121.553 l
h
f
Q
cliprestore
newpath
0 0 m
0 192.000 l
192.000 192.000 l
192.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
21.0000 96.0000 m
21.0000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
17 105 7 13 rc
newpath
27.7900 112.438 m
19.2100 112.438 l
19.2100 111.762 l
27.7900 111.762 l
h
f
Q
newpath
32.0493 112.826 m
32.0493 113.727 l
30.8940 113.727 l
30.8940 116.000 l
29.8466 116.000 l
29.8466 113.727 l
26.2031 113.727 l
26.2031 112.915 l
30.1958 107.214 l
30.8940 107.214 l
30.8940 112.826 l
h
29.8466 112.826 m
29.8466 108.554 l
26.8252 112.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
59.0000 96.0000 m
59.0000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
55 105 7 13 rc
newpath
65.7900 112.438 m
57.2100 112.438 l
57.2100 111.762 l
65.7900 111.762 l
h
f
Q
newpath
69.9604 114.343 m
69.3574 116.000 l
64.2793 116.000 l
64.2793 115.765 l
65.7731 114.402 66.8247 113.289 67.4340 112.426  c
68.0434 111.563 68.3481 110.773 68.3481 110.058  c
68.3481 109.512 68.1809 109.064 67.8466 108.712  c
67.5123 108.361 67.1124 108.186 66.6469 108.186  c
66.2238 108.186 65.8439 108.309 65.5075 108.557  c
65.1711 108.804 64.9225 109.167 64.7617 109.646  c
64.5268 109.646 l
64.6326 108.863 64.9045 108.262 65.3425 107.843  c
65.7805 107.424 66.3274 107.214 66.9834 107.214  c
67.6816 107.214 68.2645 107.439 68.7321 107.887  c
69.1997 108.336 69.4335 108.865 69.4335 109.474  c
69.4335 109.910 69.3320 110.346 69.1289 110.782  c
68.8157 111.467 68.3079 112.193 67.6054 112.959  c
66.5517 114.110 65.8937 114.804 65.6313 115.041  c
67.8784 115.041 l
68.3354 115.041 68.6560 115.024 68.8400 114.990  c
69.0241 114.956 69.1902 114.888 69.3383 114.784  c
69.4864 114.680 69.6155 114.533 69.7255 114.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 96.0000 m
97.0000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
93.4697 110.747 m
93.4697 109.765 93.6178 108.920 93.9140 108.211  c
94.2102 107.502 94.6038 106.974 95.0947 106.627  c
95.4755 106.352 95.8691 106.214 96.2753 106.214  c
96.9355 106.214 97.5279 106.551 98.0527 107.224  c
98.7086 108.057 99.0366 109.187 99.0366 110.613  c
99.0366 111.612 98.8927 112.460 98.6049 113.159  c
98.3172 113.857 97.9501 114.364 97.5036 114.679  c
97.0572 114.994 96.6266 115.152 96.2119 115.152  c
95.3909 115.152 94.7075 114.667 94.1616 113.698  c
93.7003 112.882 93.4697 111.898 93.4697 110.747  c
h
94.7138 110.905 m
94.7138 112.090 94.8598 113.057 95.1518 113.806  c
95.3930 114.437 95.7527 114.752 96.2309 114.752  c
96.4594 114.752 96.6964 114.649 96.9418 114.444  c
97.1873 114.239 97.3735 113.895 97.5004 113.413  c
97.6951 112.685 97.7924 111.659 97.7924 110.334  c
97.7924 109.352 97.6909 108.533 97.4877 107.877  c
97.3354 107.391 97.1386 107.046 96.8974 106.843  c
96.7239 106.703 96.5144 106.633 96.2690 106.633  c
95.9812 106.633 95.7252 106.762 95.5009 107.021  c
95.1962 107.372 94.9889 107.924 94.8789 108.677  c
94.7688 109.431 94.7138 110.173 94.7138 110.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
134.000 96.0000 m
134.000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
141.960 114.343 m
141.357 116.000 l
136.279 116.000 l
136.279 115.765 l
137.773 114.402 138.824 113.289 139.434 112.426  c
140.043 111.563 140.348 110.773 140.348 110.058  c
140.348 109.512 140.181 109.064 139.846 108.712  c
139.512 108.361 139.112 108.186 138.647 108.186  c
138.223 108.186 137.844 108.309 137.507 108.557  c
137.171 108.804 136.922 109.167 136.761 109.646  c
136.526 109.646 l
136.632 108.863 136.904 108.262 137.342 107.843  c
137.780 107.424 138.327 107.214 138.983 107.214  c
139.681 107.214 140.264 107.439 140.732 107.887  c
141.199 108.336 141.433 108.865 141.433 109.474  c
141.433 109.910 141.332 110.346 141.128 110.782  c
140.815 111.467 140.307 112.193 139.605 112.959  c
138.551 114.110 137.893 114.804 137.631 115.041  c
139.878 115.041 l
140.335 115.041 140.656 115.024 140.840 114.990  c
141.024 114.956 141.190 114.888 141.338 114.784  c
141.486 114.680 141.615 114.533 141.725 114.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
172.000 96.0000 m
172.000 99.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
180.049 112.826 m
180.049 113.727 l
178.894 113.727 l
178.894 116.000 l
177.846 116.000 l
177.846 113.727 l
174.203 113.727 l
174.203 112.915 l
178.195 107.214 l
178.894 107.214 l
178.894 112.826 l
h
177.846 112.826 m
177.846 108.554 l
174.825 112.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
2.00000 96.0000 m
2.00000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.0000 96.0000 m
40.0000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
78.0000 96.0000 m
78.0000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
115.000 96.0000 m
115.000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
153.000 96.0000 m
153.000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
191.000 96.0000 m
191.000 97.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
97.0000 190.000 m
97.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
57 41 14 15 rc
newpath
63.1010 47.2553 m
63.2449 47.5008 63.3444 47.7303 63.3994 47.9440  c
63.4544 48.1578 63.5094 48.5778 63.5644 49.2041  c
63.8437 52.3271 l
64.0976 52.0224 64.4658 51.5400 64.9482 50.8798  c
65.1809 50.5582 65.4687 50.1202 65.8115 49.5659  c
66.0188 49.2273 66.1458 48.9904 66.1923 48.8549  c
66.2177 48.7872 66.2304 48.7174 66.2304 48.6455  c
66.2304 48.5989 66.2156 48.5608 66.1860 48.5312  c
66.1564 48.5016 66.0791 48.4667 65.9543 48.4265  c
65.8295 48.3863 65.7258 48.3122 65.6433 48.2043  c
65.5607 48.0964 65.5195 47.9726 65.5195 47.8330  c
65.5195 47.6595 65.5703 47.5198 65.6718 47.4140  c
65.7734 47.3082 65.9003 47.2553 66.0527 47.2553  c
66.2389 47.2553 66.3976 47.3326 66.5288 47.4870  c
66.6599 47.6415 66.7255 47.8541 66.7255 48.1250  c
66.7255 48.4593 66.6113 48.8412 66.3828 49.2707  c
66.1543 49.7002 65.7141 50.3593 65.0625 51.2480  c
64.4108 52.1367 63.6215 53.1057 62.6948 54.1552  c
62.0558 54.8789 61.5818 55.3348 61.2729 55.5231  c
60.9640 55.7115 60.6995 55.8056 60.4794 55.8056  c
60.3483 55.8056 60.2329 55.7559 60.1335 55.6564  c
60.0341 55.5570 59.9843 55.4417 59.9843 55.3105  c
59.9843 55.1455 60.0531 54.9952 60.1906 54.8598  c
60.3282 54.7244 60.4773 54.6567 60.6381 54.6567  c
60.7228 54.6567 60.7926 54.6757 60.8476 54.7138  c
60.8815 54.7350 60.9185 54.7953 60.9587 54.8947  c
60.9989 54.9942 61.0359 55.0608 61.0698 55.0947  c
61.0909 55.1158 61.1163 55.1264 61.1460 55.1264  c
61.1713 55.1264 61.2158 55.1053 61.2793 55.0629  c
61.5120 54.9191 61.7828 54.6905 62.0918 54.3774  c
62.4980 53.9627 62.7985 53.6241 62.9931 53.3618  c
62.6377 49.3374 l
62.5784 48.6730 62.4895 48.2688 62.3710 48.1250  c
62.2526 47.9811 62.0537 47.9091 61.7744 47.9091  c
61.6855 47.9091 61.5268 47.9218 61.2983 47.9472  c
61.2412 47.7124 l
h
f
Q
cliprestore
newpath
0 0 m
0 192.000 l
192.000 192.000 l
192.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
97.0000 171.000 m
93.0000 171.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
80 170 7 13 rc
newpath
90.7900 177.438 m
82.2100 177.438 l
82.2100 176.762 l
90.7900 176.762 l
h
f
Q
newpath
95.0493 177.826 m
95.0493 178.727 l
93.8940 178.727 l
93.8940 181.000 l
92.8466 181.000 l
92.8466 178.727 l
89.2031 178.727 l
89.2031 177.915 l
93.1958 172.214 l
93.8940 172.214 l
93.8940 177.826 l
h
92.8466 177.826 m
92.8466 173.554 l
89.8252 177.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 133.000 m
93.0000 133.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
80 132 7 13 rc
newpath
90.7900 139.438 m
82.2100 139.438 l
82.2100 138.762 l
90.7900 138.762 l
h
f
Q
newpath
94.9604 141.343 m
94.3574 143.000 l
89.2793 143.000 l
89.2793 142.765 l
90.7731 141.402 91.8247 140.289 92.4340 139.426  c
93.0434 138.563 93.3481 137.773 93.3481 137.058  c
93.3481 136.512 93.1809 136.064 92.8466 135.712  c
92.5123 135.361 92.1124 135.186 91.6469 135.186  c
91.2238 135.186 90.8439 135.309 90.5075 135.557  c
90.1711 135.804 89.9225 136.167 89.7617 136.646  c
89.5268 136.646 l
89.6326 135.863 89.9045 135.262 90.3425 134.843  c
90.7805 134.424 91.3274 134.214 91.9834 134.214  c
92.6816 134.214 93.2645 134.439 93.7321 134.887  c
94.1997 135.336 94.4335 135.865 94.4335 136.474  c
94.4335 136.910 94.3320 137.346 94.1289 137.782  c
93.8157 138.467 93.3079 139.193 92.6054 139.959  c
91.5517 141.110 90.8937 141.804 90.6313 142.041  c
92.8784 142.041 l
93.3354 142.041 93.6560 142.024 93.8400 141.990  c
94.0241 141.956 94.1902 141.888 94.3383 141.784  c
94.4864 141.680 94.6155 141.533 94.7255 141.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 96.0000 m
93.0000 96.0000 l
S
Q
q
0 J
1 j
newpath
97.0000 58.0000 m
93.0000 58.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
94.9604 65.3432 m
94.3574 67.0000 l
89.2793 67.0000 l
89.2793 66.7651 l
90.7731 65.4025 91.8247 64.2895 92.4340 63.4262  c
93.0434 62.5629 93.3481 61.7737 93.3481 61.0585  c
93.3481 60.5127 93.1809 60.0641 92.8466 59.7128  c
92.5123 59.3616 92.1124 59.1860 91.6469 59.1860  c
91.2238 59.1860 90.8439 59.3098 90.5075 59.5573  c
90.1711 59.8049 89.9225 60.1678 89.7617 60.6460  c
89.5268 60.6460 l
89.6326 59.8631 89.9045 59.2622 90.3425 58.8432  c
90.7805 58.4243 91.3274 58.2148 91.9834 58.2148  c
92.6816 58.2148 93.2645 58.4391 93.7321 58.8877  c
94.1997 59.3362 94.4335 59.8652 94.4335 60.4746  c
94.4335 60.9104 94.3320 61.3463 94.1289 61.7822  c
93.8157 62.4677 93.3079 63.1935 92.6054 63.9594  c
91.5517 65.1105 90.8937 65.8045 90.6313 66.0415  c
92.8784 66.0415 l
93.3354 66.0415 93.6560 66.0245 93.8400 65.9907  c
94.0241 65.9568 94.1902 65.8881 94.3383 65.7844  c
94.4864 65.6807 94.6155 65.5336 94.7255 65.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 20.0000 m
93.0000 20.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
95.0493 25.8261 m
95.0493 26.7275 l
93.8940 26.7275 l
93.8940 29.0000 l
92.8466 29.0000 l
92.8466 26.7275 l
89.2031 26.7275 l
89.2031 25.9150 l
93.1958 20.2148 l
93.8940 20.2148 l
93.8940 25.8261 l
h
92.8466 25.8261 m
92.8466 21.5542 l
89.8252 25.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 190.000 m
95.0000 190.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 152.000 m
95.0000 152.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 114.000 m
95.0000 114.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 77.0000 m
95.0000 77.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 39.0000 m
95.0000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
97.0000 1.00000 m
95.0000 1.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 202 202 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
